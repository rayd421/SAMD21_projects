
Motor_Ctrl.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003190  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000038  20000000  00003190  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000bc  20000038  000031c8  00020038  2**2
                  ALLOC
  3 .stack        00002004  200000f4  00003284  00020038  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00020038  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020060  2**0
                  CONTENTS, READONLY
  6 .debug_info   00010017  00000000  00000000  000200b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000148b  00000000  00000000  000300d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 00000220  00000000  00000000  0003155b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 000001e0  00000000  00000000  0003177b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_macro  00016755  00000000  00000000  0003195b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00004b3f  00000000  00000000  000480b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000871b4  00000000  00000000  0004cbef  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000007b4  00000000  00000000  000d3da4  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00001889  00000000  00000000  000d4558  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	f8 20 00 20 d1 04 00 00 cd 04 00 00 cd 04 00 00     . . ............
	...
      2c:	cd 04 00 00 00 00 00 00 00 00 00 00 cd 04 00 00     ................
      3c:	cd 04 00 00 cd 04 00 00 cd 04 00 00 cd 04 00 00     ................
      4c:	cd 04 00 00 91 0c 00 00 cd 04 00 00 cd 04 00 00     ................
      5c:	cd 04 00 00 cd 04 00 00 cd 04 00 00 cd 04 00 00     ................
      6c:	cd 04 00 00 cd 04 00 00 cd 04 00 00 cd 04 00 00     ................
      7c:	cd 04 00 00 cd 04 00 00 cd 04 00 00 cd 04 00 00     ................
      8c:	cd 04 00 00 45 12 00 00 c9 0c 00 00 cd 04 00 00     ....E...........
      9c:	cd 04 00 00 cd 04 00 00 cd 04 00 00 cd 04 00 00     ................
      ac:	cd 04 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000038 	.word	0x20000038
      d4:	00000000 	.word	0x00000000
      d8:	00003190 	.word	0x00003190

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	2000003c 	.word	0x2000003c
     108:	00003190 	.word	0x00003190
     10c:	00003190 	.word	0x00003190
     110:	00000000 	.word	0x00000000

00000114 <system_board_init>:
{
	/* This function is meant to contain board-specific initialization code
	 * for, e.g., the I/O pins. The initialization can rely on application-
	 * specific board configuration, found in conf_board.h.
	 */
     114:	4770      	bx	lr
	...

00000118 <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
     118:	4b0c      	ldr	r3, [pc, #48]	; (14c <cpu_irq_enter_critical+0x34>)
     11a:	681b      	ldr	r3, [r3, #0]
     11c:	2b00      	cmp	r3, #0
     11e:	d106      	bne.n	12e <cpu_irq_enter_critical+0x16>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     120:	f3ef 8310 	mrs	r3, PRIMASK
		if (cpu_irq_is_enabled()) {
     124:	2b00      	cmp	r3, #0
     126:	d007      	beq.n	138 <cpu_irq_enter_critical+0x20>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
     128:	2200      	movs	r2, #0
     12a:	4b09      	ldr	r3, [pc, #36]	; (150 <cpu_irq_enter_critical+0x38>)
     12c:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
     12e:	4a07      	ldr	r2, [pc, #28]	; (14c <cpu_irq_enter_critical+0x34>)
     130:	6813      	ldr	r3, [r2, #0]
     132:	3301      	adds	r3, #1
     134:	6013      	str	r3, [r2, #0]
}
     136:	4770      	bx	lr
  __ASM volatile ("cpsid i" : : : "memory");
     138:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
     13a:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
     13e:	2200      	movs	r2, #0
     140:	4b04      	ldr	r3, [pc, #16]	; (154 <cpu_irq_enter_critical+0x3c>)
     142:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
     144:	3201      	adds	r2, #1
     146:	4b02      	ldr	r3, [pc, #8]	; (150 <cpu_irq_enter_critical+0x38>)
     148:	701a      	strb	r2, [r3, #0]
     14a:	e7f0      	b.n	12e <cpu_irq_enter_critical+0x16>
     14c:	20000054 	.word	0x20000054
     150:	20000058 	.word	0x20000058
     154:	20000000 	.word	0x20000000

00000158 <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
     158:	4b08      	ldr	r3, [pc, #32]	; (17c <cpu_irq_leave_critical+0x24>)
     15a:	681a      	ldr	r2, [r3, #0]
     15c:	3a01      	subs	r2, #1
     15e:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
     160:	681b      	ldr	r3, [r3, #0]
     162:	2b00      	cmp	r3, #0
     164:	d109      	bne.n	17a <cpu_irq_leave_critical+0x22>
     166:	4b06      	ldr	r3, [pc, #24]	; (180 <cpu_irq_leave_critical+0x28>)
     168:	781b      	ldrb	r3, [r3, #0]
     16a:	2b00      	cmp	r3, #0
     16c:	d005      	beq.n	17a <cpu_irq_leave_critical+0x22>
		cpu_irq_enable();
     16e:	2201      	movs	r2, #1
     170:	4b04      	ldr	r3, [pc, #16]	; (184 <cpu_irq_leave_critical+0x2c>)
     172:	701a      	strb	r2, [r3, #0]
     174:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     178:	b662      	cpsie	i
	}
}
     17a:	4770      	bx	lr
     17c:	20000054 	.word	0x20000054
     180:	20000058 	.word	0x20000058
     184:	20000000 	.word	0x20000000

00000188 <system_clock_source_osc8m_set_config>:
 *
 * \param[in] config  OSC8M configuration structure containing the new config
 */
void system_clock_source_osc8m_set_config(
		struct system_clock_source_osc8m_config *const config)
{
     188:	b570      	push	{r4, r5, r6, lr}
	SYSCTRL_OSC8M_Type temp = SYSCTRL->OSC8M;
     18a:	490c      	ldr	r1, [pc, #48]	; (1bc <system_clock_source_osc8m_set_config+0x34>)
     18c:	6a0b      	ldr	r3, [r1, #32]

	/* Use temporary struct to reduce register access */
	temp.bit.PRESC    = config->prescaler;
     18e:	7804      	ldrb	r4, [r0, #0]
	temp.bit.ONDEMAND = config->on_demand;
     190:	7885      	ldrb	r5, [r0, #2]
	temp.bit.RUNSTDBY = config->run_in_standby;

	SYSCTRL->OSC8M = temp;
     192:	7840      	ldrb	r0, [r0, #1]
     194:	2201      	movs	r2, #1
     196:	4010      	ands	r0, r2
     198:	0180      	lsls	r0, r0, #6
     19a:	2640      	movs	r6, #64	; 0x40
     19c:	43b3      	bics	r3, r6
     19e:	4303      	orrs	r3, r0
     1a0:	402a      	ands	r2, r5
     1a2:	01d2      	lsls	r2, r2, #7
     1a4:	2080      	movs	r0, #128	; 0x80
     1a6:	4383      	bics	r3, r0
     1a8:	4313      	orrs	r3, r2
     1aa:	2203      	movs	r2, #3
     1ac:	4022      	ands	r2, r4
     1ae:	0212      	lsls	r2, r2, #8
     1b0:	4803      	ldr	r0, [pc, #12]	; (1c0 <system_clock_source_osc8m_set_config+0x38>)
     1b2:	4003      	ands	r3, r0
     1b4:	4313      	orrs	r3, r2
     1b6:	620b      	str	r3, [r1, #32]
}
     1b8:	bd70      	pop	{r4, r5, r6, pc}
     1ba:	46c0      	nop			; (mov r8, r8)
     1bc:	40000800 	.word	0x40000800
     1c0:	fffffcff 	.word	0xfffffcff

000001c4 <system_clock_source_enable>:
 *                                 device
 */
enum status_code system_clock_source_enable(
		const enum system_clock_source clock_source)
{
	switch (clock_source) {
     1c4:	2808      	cmp	r0, #8
     1c6:	d803      	bhi.n	1d0 <system_clock_source_enable+0xc>
     1c8:	0080      	lsls	r0, r0, #2
     1ca:	4b25      	ldr	r3, [pc, #148]	; (260 <system_clock_source_enable+0x9c>)
     1cc:	581b      	ldr	r3, [r3, r0]
     1ce:	469f      	mov	pc, r3
		/* Always enabled */
		return STATUS_OK;

	default:
		Assert(false);
		return STATUS_ERR_INVALID_ARG;
     1d0:	2017      	movs	r0, #23
     1d2:	e044      	b.n	25e <system_clock_source_enable+0x9a>
		SYSCTRL->OSC8M.reg |= SYSCTRL_OSC8M_ENABLE;
     1d4:	4a23      	ldr	r2, [pc, #140]	; (264 <system_clock_source_enable+0xa0>)
     1d6:	6a13      	ldr	r3, [r2, #32]
     1d8:	2102      	movs	r1, #2
     1da:	430b      	orrs	r3, r1
     1dc:	6213      	str	r3, [r2, #32]
		return STATUS_OK;
     1de:	2000      	movs	r0, #0
     1e0:	e03d      	b.n	25e <system_clock_source_enable+0x9a>
		SYSCTRL->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
     1e2:	4a20      	ldr	r2, [pc, #128]	; (264 <system_clock_source_enable+0xa0>)
     1e4:	6993      	ldr	r3, [r2, #24]
     1e6:	2102      	movs	r1, #2
     1e8:	430b      	orrs	r3, r1
     1ea:	6193      	str	r3, [r2, #24]
	}

	return STATUS_OK;
     1ec:	2000      	movs	r0, #0
		break;
     1ee:	e036      	b.n	25e <system_clock_source_enable+0x9a>
		SYSCTRL->XOSC.reg |= SYSCTRL_XOSC_ENABLE;
     1f0:	4a1c      	ldr	r2, [pc, #112]	; (264 <system_clock_source_enable+0xa0>)
     1f2:	8a13      	ldrh	r3, [r2, #16]
     1f4:	2102      	movs	r1, #2
     1f6:	430b      	orrs	r3, r1
     1f8:	8213      	strh	r3, [r2, #16]
	return STATUS_OK;
     1fa:	2000      	movs	r0, #0
		break;
     1fc:	e02f      	b.n	25e <system_clock_source_enable+0x9a>
		SYSCTRL->XOSC32K.reg |= SYSCTRL_XOSC32K_ENABLE;
     1fe:	4a19      	ldr	r2, [pc, #100]	; (264 <system_clock_source_enable+0xa0>)
     200:	8a93      	ldrh	r3, [r2, #20]
     202:	2102      	movs	r1, #2
     204:	430b      	orrs	r3, r1
     206:	8293      	strh	r3, [r2, #20]
	return STATUS_OK;
     208:	2000      	movs	r0, #0
		break;
     20a:	e028      	b.n	25e <system_clock_source_enable+0x9a>
		_system_clock_inst.dfll.control |= SYSCTRL_DFLLCTRL_ENABLE;
     20c:	4916      	ldr	r1, [pc, #88]	; (268 <system_clock_source_enable+0xa4>)
     20e:	680b      	ldr	r3, [r1, #0]
     210:	2202      	movs	r2, #2
     212:	4313      	orrs	r3, r2
     214:	600b      	str	r3, [r1, #0]
	SYSCTRL->DFLLCTRL.reg = SYSCTRL_DFLLCTRL_ENABLE;
     216:	4b13      	ldr	r3, [pc, #76]	; (264 <system_clock_source_enable+0xa0>)
     218:	849a      	strh	r2, [r3, #36]	; 0x24
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
     21a:	0019      	movs	r1, r3
     21c:	320e      	adds	r2, #14
     21e:	68cb      	ldr	r3, [r1, #12]
     220:	421a      	tst	r2, r3
     222:	d0fc      	beq.n	21e <system_clock_source_enable+0x5a>
	SYSCTRL->DFLLMUL.reg = _system_clock_inst.dfll.mul;
     224:	4a10      	ldr	r2, [pc, #64]	; (268 <system_clock_source_enable+0xa4>)
     226:	6891      	ldr	r1, [r2, #8]
     228:	4b0e      	ldr	r3, [pc, #56]	; (264 <system_clock_source_enable+0xa0>)
     22a:	62d9      	str	r1, [r3, #44]	; 0x2c
	SYSCTRL->DFLLVAL.reg = _system_clock_inst.dfll.val;
     22c:	6852      	ldr	r2, [r2, #4]
     22e:	629a      	str	r2, [r3, #40]	; 0x28
	SYSCTRL->DFLLCTRL.reg = 0;
     230:	2200      	movs	r2, #0
     232:	849a      	strh	r2, [r3, #36]	; 0x24
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
     234:	0019      	movs	r1, r3
     236:	3210      	adds	r2, #16
     238:	68cb      	ldr	r3, [r1, #12]
     23a:	421a      	tst	r2, r3
     23c:	d0fc      	beq.n	238 <system_clock_source_enable+0x74>
	SYSCTRL->DFLLCTRL.reg = _system_clock_inst.dfll.control;
     23e:	4b0a      	ldr	r3, [pc, #40]	; (268 <system_clock_source_enable+0xa4>)
     240:	681b      	ldr	r3, [r3, #0]
     242:	b29b      	uxth	r3, r3
     244:	4a07      	ldr	r2, [pc, #28]	; (264 <system_clock_source_enable+0xa0>)
     246:	8493      	strh	r3, [r2, #36]	; 0x24
	return STATUS_OK;
     248:	2000      	movs	r0, #0
     24a:	e008      	b.n	25e <system_clock_source_enable+0x9a>
		SYSCTRL->DPLLCTRLA.reg |= SYSCTRL_DPLLCTRLA_ENABLE;
     24c:	4905      	ldr	r1, [pc, #20]	; (264 <system_clock_source_enable+0xa0>)
     24e:	2244      	movs	r2, #68	; 0x44
     250:	5c8b      	ldrb	r3, [r1, r2]
     252:	2002      	movs	r0, #2
     254:	4303      	orrs	r3, r0
     256:	548b      	strb	r3, [r1, r2]
	return STATUS_OK;
     258:	2000      	movs	r0, #0
		break;
     25a:	e000      	b.n	25e <system_clock_source_enable+0x9a>
		return STATUS_OK;
     25c:	2000      	movs	r0, #0
}
     25e:	4770      	bx	lr
     260:	00002ffc 	.word	0x00002ffc
     264:	40000800 	.word	0x40000800
     268:	2000005c 	.word	0x2000005c

0000026c <system_clock_init>:
 * \note OSC8M is always enabled and if user selects other clocks for GCLK generators,
 * the OSC8M default enable can be disabled after system_clock_init. Make sure the
 * clock switch successfully before disabling OSC8M.
 */
void system_clock_init(void)
{
     26c:	b530      	push	{r4, r5, lr}
     26e:	b085      	sub	sp, #20
	/* Various bits in the INTFLAG register can be set to one at startup.
	   This will ensure that these bits are cleared */
	SYSCTRL->INTFLAG.reg = SYSCTRL_INTFLAG_BOD33RDY | SYSCTRL_INTFLAG_BOD33DET |
     270:	22c2      	movs	r2, #194	; 0xc2
     272:	00d2      	lsls	r2, r2, #3
     274:	4b1a      	ldr	r3, [pc, #104]	; (2e0 <system_clock_init+0x74>)
     276:	609a      	str	r2, [r3, #8]
static inline void system_flash_set_waitstates(uint8_t wait_states)
{
	Assert(NVMCTRL_CTRLB_RWS((uint32_t)wait_states) ==
			((uint32_t)wait_states << NVMCTRL_CTRLB_RWS_Pos));

	NVMCTRL->CTRLB.bit.RWS = wait_states;
     278:	4a1a      	ldr	r2, [pc, #104]	; (2e4 <system_clock_init+0x78>)
     27a:	6853      	ldr	r3, [r2, #4]
     27c:	211e      	movs	r1, #30
     27e:	438b      	bics	r3, r1
     280:	6053      	str	r3, [r2, #4]
	gclk_conf.source_generator = GCLK_GENERATOR_1;
     282:	2301      	movs	r3, #1
     284:	466a      	mov	r2, sp
     286:	7013      	strb	r3, [r2, #0]
	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
     288:	2400      	movs	r4, #0
		system_gclk_chan_set_config(gclk_id, &gclk_conf);
     28a:	4d17      	ldr	r5, [pc, #92]	; (2e8 <system_clock_init+0x7c>)
     28c:	b2e0      	uxtb	r0, r4
     28e:	4669      	mov	r1, sp
     290:	47a8      	blx	r5
	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
     292:	3401      	adds	r4, #1
     294:	2c25      	cmp	r4, #37	; 0x25
     296:	d1f9      	bne.n	28c <system_clock_init+0x20>
	config->run_in_standby  = false;
     298:	a803      	add	r0, sp, #12
     29a:	2400      	movs	r4, #0
     29c:	7044      	strb	r4, [r0, #1]
	config->on_demand       = true;
     29e:	2501      	movs	r5, #1
     2a0:	7085      	strb	r5, [r0, #2]

	/* OSC8M */
	struct system_clock_source_osc8m_config osc8m_conf;
	system_clock_source_osc8m_get_config_defaults(&osc8m_conf);

	osc8m_conf.prescaler       = CONF_CLOCK_OSC8M_PRESCALER;
     2a2:	7004      	strb	r4, [r0, #0]
	osc8m_conf.on_demand       = CONF_CLOCK_OSC8M_ON_DEMAND;
	osc8m_conf.run_in_standby  = CONF_CLOCK_OSC8M_RUN_IN_STANDBY;

	system_clock_source_osc8m_set_config(&osc8m_conf);
     2a4:	4b11      	ldr	r3, [pc, #68]	; (2ec <system_clock_init+0x80>)
     2a6:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_OSC8M);
     2a8:	2006      	movs	r0, #6
     2aa:	4b11      	ldr	r3, [pc, #68]	; (2f0 <system_clock_init+0x84>)
     2ac:	4798      	blx	r3


	/* GCLK */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	system_gclk_init();
     2ae:	4b11      	ldr	r3, [pc, #68]	; (2f4 <system_clock_init+0x88>)
     2b0:	4798      	blx	r3
	PM->CPUSEL.reg = (uint32_t)divider;
     2b2:	4b11      	ldr	r3, [pc, #68]	; (2f8 <system_clock_init+0x8c>)
     2b4:	721c      	strb	r4, [r3, #8]
			PM->APBASEL.reg = (uint32_t)divider;
     2b6:	725c      	strb	r4, [r3, #9]
			PM->APBBSEL.reg = (uint32_t)divider;
     2b8:	729c      	strb	r4, [r3, #10]
			PM->APBCSEL.reg = (uint32_t)divider;
     2ba:	72dc      	strb	r4, [r3, #11]
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->division_factor    = 1;
     2bc:	9501      	str	r5, [sp, #4]
	config->high_when_disabled = false;
     2be:	466b      	mov	r3, sp
     2c0:	705c      	strb	r4, [r3, #1]
#if SAML21 || SAML22  || SAMR30
	config->source_clock       = GCLK_SOURCE_OSC16M;
#elif (SAMC20) || (SAMC21)
	config->source_clock       = GCLK_SOURCE_OSC48M;
#else
	config->source_clock       = GCLK_SOURCE_OSC8M;
     2c2:	2306      	movs	r3, #6
     2c4:	466a      	mov	r2, sp
     2c6:	7013      	strb	r3, [r2, #0]
#endif
	config->run_in_standby     = false;
     2c8:	7214      	strb	r4, [r2, #8]
	config->output_enable      = false;
     2ca:	7254      	strb	r4, [r2, #9]
	system_apb_clock_set_divider(SYSTEM_CLOCK_APB_APBC, CONF_CLOCK_APBC_DIVIDER);

	/* GCLK 0 */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	/* Configure the main GCLK last as it might depend on other generators */
	_CONF_CLOCK_GCLK_CONFIG(0, ~);
     2cc:	4669      	mov	r1, sp
     2ce:	2000      	movs	r0, #0
     2d0:	4b0a      	ldr	r3, [pc, #40]	; (2fc <system_clock_init+0x90>)
     2d2:	4798      	blx	r3
     2d4:	2000      	movs	r0, #0
     2d6:	4b0a      	ldr	r3, [pc, #40]	; (300 <system_clock_init+0x94>)
     2d8:	4798      	blx	r3
#endif
}
     2da:	b005      	add	sp, #20
     2dc:	bd30      	pop	{r4, r5, pc}
     2de:	46c0      	nop			; (mov r8, r8)
     2e0:	40000800 	.word	0x40000800
     2e4:	41004000 	.word	0x41004000
     2e8:	00000481 	.word	0x00000481
     2ec:	00000189 	.word	0x00000189
     2f0:	000001c5 	.word	0x000001c5
     2f4:	00000305 	.word	0x00000305
     2f8:	40000400 	.word	0x40000400
     2fc:	00000329 	.word	0x00000329
     300:	000003e1 	.word	0x000003e1

00000304 <system_gclk_init>:
			PM->APBAMASK.reg |= mask;
     304:	4a06      	ldr	r2, [pc, #24]	; (320 <system_gclk_init+0x1c>)
     306:	6993      	ldr	r3, [r2, #24]
     308:	2108      	movs	r1, #8
     30a:	430b      	orrs	r3, r1
     30c:	6193      	str	r3, [r2, #24]
{
	/* Turn on the digital interface clock */
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBA, PM_APBAMASK_GCLK);

	/* Software reset the module to ensure it is re-initialized correctly */
	GCLK->CTRL.reg = GCLK_CTRL_SWRST;
     30e:	2201      	movs	r2, #1
     310:	4b04      	ldr	r3, [pc, #16]	; (324 <system_gclk_init+0x20>)
     312:	701a      	strb	r2, [r3, #0]
	while (GCLK->CTRL.reg & GCLK_CTRL_SWRST) {
     314:	0019      	movs	r1, r3
     316:	780b      	ldrb	r3, [r1, #0]
     318:	4213      	tst	r3, r2
     31a:	d1fc      	bne.n	316 <system_gclk_init+0x12>
		/* Wait for reset to complete */
	}
}
     31c:	4770      	bx	lr
     31e:	46c0      	nop			; (mov r8, r8)
     320:	40000400 	.word	0x40000400
     324:	40000c00 	.word	0x40000c00

00000328 <system_gclk_gen_set_config>:
 * \param[in] config     Configuration settings for the generator
 */
void system_gclk_gen_set_config(
		const uint8_t generator,
		struct system_gclk_gen_config *const config)
{
     328:	b570      	push	{r4, r5, r6, lr}
     32a:	0006      	movs	r6, r0
	/* Sanity check arguments */
	Assert(config);

	/* Cache new register configurations to minimize sync requirements. */
	uint32_t new_genctrl_config = (generator << GCLK_GENCTRL_ID_Pos);
     32c:	0004      	movs	r4, r0
	uint32_t new_gendiv_config  = (generator << GCLK_GENDIV_ID_Pos);

	/* Select the requested source clock for the generator */
	new_genctrl_config |= config->source_clock << GCLK_GENCTRL_SRC_Pos;
     32e:	780d      	ldrb	r5, [r1, #0]
     330:	022d      	lsls	r5, r5, #8
     332:	4305      	orrs	r5, r0

	/* Configure the clock to be either high or low when disabled */
	if (config->high_when_disabled) {
     334:	784b      	ldrb	r3, [r1, #1]
     336:	2b00      	cmp	r3, #0
     338:	d002      	beq.n	340 <system_gclk_gen_set_config+0x18>
		new_genctrl_config |= GCLK_GENCTRL_OOV;
     33a:	2380      	movs	r3, #128	; 0x80
     33c:	02db      	lsls	r3, r3, #11
     33e:	431d      	orrs	r5, r3
	}

	/* Configure if the clock output to I/O pin should be enabled. */
	if (config->output_enable) {
     340:	7a4b      	ldrb	r3, [r1, #9]
     342:	2b00      	cmp	r3, #0
     344:	d002      	beq.n	34c <system_gclk_gen_set_config+0x24>
		new_genctrl_config |= GCLK_GENCTRL_OE;
     346:	2380      	movs	r3, #128	; 0x80
     348:	031b      	lsls	r3, r3, #12
     34a:	431d      	orrs	r5, r3
	}

	/* Set division factor */
	if (config->division_factor > 1) {
     34c:	6848      	ldr	r0, [r1, #4]
     34e:	2801      	cmp	r0, #1
     350:	d910      	bls.n	374 <system_gclk_gen_set_config+0x4c>
		/* Check if division is a power of two */
		if (((config->division_factor & (config->division_factor - 1)) == 0)) {
     352:	1e43      	subs	r3, r0, #1
     354:	4218      	tst	r0, r3
     356:	d134      	bne.n	3c2 <system_gclk_gen_set_config+0x9a>
			 * register */

			uint32_t div2_count = 0;

			uint32_t mask;
			for (mask = (1UL << 1); mask < config->division_factor;
     358:	2802      	cmp	r0, #2
     35a:	d930      	bls.n	3be <system_gclk_gen_set_config+0x96>
     35c:	2302      	movs	r3, #2
     35e:	2200      	movs	r2, #0
						mask <<= 1) {
				div2_count++;
     360:	3201      	adds	r2, #1
						mask <<= 1) {
     362:	005b      	lsls	r3, r3, #1
			for (mask = (1UL << 1); mask < config->division_factor;
     364:	4298      	cmp	r0, r3
     366:	d8fb      	bhi.n	360 <system_gclk_gen_set_config+0x38>
			}

			/* Set binary divider power of 2 division factor */
			new_gendiv_config  |= div2_count << GCLK_GENDIV_DIV_Pos;
     368:	0212      	lsls	r2, r2, #8
     36a:	4332      	orrs	r2, r6
     36c:	0014      	movs	r4, r2
			new_genctrl_config |= GCLK_GENCTRL_DIVSEL;
     36e:	2380      	movs	r3, #128	; 0x80
     370:	035b      	lsls	r3, r3, #13
     372:	431d      	orrs	r5, r3
		}

	}

	/* Enable or disable the clock in standby mode */
	if (config->run_in_standby) {
     374:	7a0b      	ldrb	r3, [r1, #8]
     376:	2b00      	cmp	r3, #0
     378:	d002      	beq.n	380 <system_gclk_gen_set_config+0x58>
		new_genctrl_config |= GCLK_GENCTRL_RUNSTDBY;
     37a:	2380      	movs	r3, #128	; 0x80
     37c:	039b      	lsls	r3, r3, #14
     37e:	431d      	orrs	r5, r3
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     380:	4a13      	ldr	r2, [pc, #76]	; (3d0 <system_gclk_gen_set_config+0xa8>)
     382:	7853      	ldrb	r3, [r2, #1]
	}

	while (system_gclk_is_syncing()) {
     384:	b25b      	sxtb	r3, r3
     386:	2b00      	cmp	r3, #0
     388:	dbfb      	blt.n	382 <system_gclk_gen_set_config+0x5a>
 * are only re-enabled upon leaving the outermost nested critical section.
 *
 */
static inline void system_interrupt_enter_critical_section(void)
{
	cpu_irq_enter_critical();
     38a:	4b12      	ldr	r3, [pc, #72]	; (3d4 <system_gclk_gen_set_config+0xac>)
     38c:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the correct generator */
	*((uint8_t*)&GCLK->GENDIV.reg) = generator;
     38e:	4b12      	ldr	r3, [pc, #72]	; (3d8 <system_gclk_gen_set_config+0xb0>)
     390:	701e      	strb	r6, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     392:	4a0f      	ldr	r2, [pc, #60]	; (3d0 <system_gclk_gen_set_config+0xa8>)
     394:	7853      	ldrb	r3, [r2, #1]

	/* Write the new generator configuration */
	while (system_gclk_is_syncing()) {
     396:	b25b      	sxtb	r3, r3
     398:	2b00      	cmp	r3, #0
     39a:	dbfb      	blt.n	394 <system_gclk_gen_set_config+0x6c>
		/* Wait for synchronization */
	};
	GCLK->GENDIV.reg  = new_gendiv_config;
     39c:	4b0c      	ldr	r3, [pc, #48]	; (3d0 <system_gclk_gen_set_config+0xa8>)
     39e:	609c      	str	r4, [r3, #8]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     3a0:	001a      	movs	r2, r3
     3a2:	7853      	ldrb	r3, [r2, #1]

	while (system_gclk_is_syncing()) {
     3a4:	b25b      	sxtb	r3, r3
     3a6:	2b00      	cmp	r3, #0
     3a8:	dbfb      	blt.n	3a2 <system_gclk_gen_set_config+0x7a>
		/* Wait for synchronization */
	};
	GCLK->GENCTRL.reg = new_genctrl_config | (GCLK->GENCTRL.reg & GCLK_GENCTRL_GENEN);
     3aa:	4a09      	ldr	r2, [pc, #36]	; (3d0 <system_gclk_gen_set_config+0xa8>)
     3ac:	6853      	ldr	r3, [r2, #4]
     3ae:	2180      	movs	r1, #128	; 0x80
     3b0:	0249      	lsls	r1, r1, #9
     3b2:	400b      	ands	r3, r1
     3b4:	431d      	orrs	r5, r3
     3b6:	6055      	str	r5, [r2, #4]
 * are only re-enabled upon leaving the outermost nested critical section.
 *
 */
static inline void system_interrupt_leave_critical_section(void)
{
	cpu_irq_leave_critical();
     3b8:	4b08      	ldr	r3, [pc, #32]	; (3dc <system_gclk_gen_set_config+0xb4>)
     3ba:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
     3bc:	bd70      	pop	{r4, r5, r6, pc}
			for (mask = (1UL << 1); mask < config->division_factor;
     3be:	2200      	movs	r2, #0
     3c0:	e7d2      	b.n	368 <system_gclk_gen_set_config+0x40>
					(config->division_factor) << GCLK_GENDIV_DIV_Pos;
     3c2:	0204      	lsls	r4, r0, #8
			new_gendiv_config  |=
     3c4:	4334      	orrs	r4, r6
			new_genctrl_config |= GCLK_GENCTRL_IDC;
     3c6:	2380      	movs	r3, #128	; 0x80
     3c8:	029b      	lsls	r3, r3, #10
     3ca:	431d      	orrs	r5, r3
     3cc:	e7d2      	b.n	374 <system_gclk_gen_set_config+0x4c>
     3ce:	46c0      	nop			; (mov r8, r8)
     3d0:	40000c00 	.word	0x40000c00
     3d4:	00000119 	.word	0x00000119
     3d8:	40000c08 	.word	0x40000c08
     3dc:	00000159 	.word	0x00000159

000003e0 <system_gclk_gen_enable>:
 *
 * \param[in] generator  Generic Clock Generator index to enable
 */
void system_gclk_gen_enable(
		const uint8_t generator)
{
     3e0:	b510      	push	{r4, lr}
     3e2:	0004      	movs	r4, r0
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     3e4:	4a0b      	ldr	r2, [pc, #44]	; (414 <system_gclk_gen_enable+0x34>)
     3e6:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
     3e8:	b25b      	sxtb	r3, r3
     3ea:	2b00      	cmp	r3, #0
     3ec:	dbfb      	blt.n	3e6 <system_gclk_gen_enable+0x6>
	cpu_irq_enter_critical();
     3ee:	4b0a      	ldr	r3, [pc, #40]	; (418 <system_gclk_gen_enable+0x38>)
     3f0:	4798      	blx	r3
	};

	system_interrupt_enter_critical_section();

	/* Select the requested generator */
	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
     3f2:	4b0a      	ldr	r3, [pc, #40]	; (41c <system_gclk_gen_enable+0x3c>)
     3f4:	701c      	strb	r4, [r3, #0]
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     3f6:	4a07      	ldr	r2, [pc, #28]	; (414 <system_gclk_gen_enable+0x34>)
     3f8:	7853      	ldrb	r3, [r2, #1]
	while (system_gclk_is_syncing()) {
     3fa:	b25b      	sxtb	r3, r3
     3fc:	2b00      	cmp	r3, #0
     3fe:	dbfb      	blt.n	3f8 <system_gclk_gen_enable+0x18>
		/* Wait for synchronization */
	};

	/* Enable generator */
	GCLK->GENCTRL.reg |= GCLK_GENCTRL_GENEN;
     400:	4a04      	ldr	r2, [pc, #16]	; (414 <system_gclk_gen_enable+0x34>)
     402:	6851      	ldr	r1, [r2, #4]
     404:	2380      	movs	r3, #128	; 0x80
     406:	025b      	lsls	r3, r3, #9
     408:	430b      	orrs	r3, r1
     40a:	6053      	str	r3, [r2, #4]
	cpu_irq_leave_critical();
     40c:	4b04      	ldr	r3, [pc, #16]	; (420 <system_gclk_gen_enable+0x40>)
     40e:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
     410:	bd10      	pop	{r4, pc}
     412:	46c0      	nop			; (mov r8, r8)
     414:	40000c00 	.word	0x40000c00
     418:	00000119 	.word	0x00000119
     41c:	40000c04 	.word	0x40000c04
     420:	00000159 	.word	0x00000159

00000424 <system_gclk_chan_disable>:
 *
 * \param[in] channel  Generic Clock channel to disable
 */
void system_gclk_chan_disable(
		const uint8_t channel)
{
     424:	b510      	push	{r4, lr}
     426:	0004      	movs	r4, r0
	cpu_irq_enter_critical();
     428:	4b0f      	ldr	r3, [pc, #60]	; (468 <system_gclk_chan_disable+0x44>)
     42a:	4798      	blx	r3
	system_interrupt_enter_critical_section();

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
     42c:	4b0f      	ldr	r3, [pc, #60]	; (46c <system_gclk_chan_disable+0x48>)
     42e:	701c      	strb	r4, [r3, #0]

	/* Sanity check WRTLOCK */
	Assert(!GCLK->CLKCTRL.bit.WRTLOCK);

	/* Switch to known-working source so that the channel can be disabled */
	uint32_t prev_gen_id = GCLK->CLKCTRL.bit.GEN;
     430:	4a0f      	ldr	r2, [pc, #60]	; (470 <system_gclk_chan_disable+0x4c>)
     432:	8853      	ldrh	r3, [r2, #2]
     434:	051b      	lsls	r3, r3, #20
     436:	0f18      	lsrs	r0, r3, #28
	GCLK->CLKCTRL.bit.GEN = 0;
     438:	8853      	ldrh	r3, [r2, #2]
     43a:	490e      	ldr	r1, [pc, #56]	; (474 <system_gclk_chan_disable+0x50>)
     43c:	400b      	ands	r3, r1
     43e:	8053      	strh	r3, [r2, #2]

	/* Disable the generic clock */
	GCLK->CLKCTRL.reg &= ~GCLK_CLKCTRL_CLKEN;
     440:	8853      	ldrh	r3, [r2, #2]
     442:	490d      	ldr	r1, [pc, #52]	; (478 <system_gclk_chan_disable+0x54>)
     444:	400b      	ands	r3, r1
     446:	8053      	strh	r3, [r2, #2]
	while (GCLK->CLKCTRL.reg & GCLK_CLKCTRL_CLKEN) {
     448:	0011      	movs	r1, r2
     44a:	2280      	movs	r2, #128	; 0x80
     44c:	01d2      	lsls	r2, r2, #7
     44e:	884b      	ldrh	r3, [r1, #2]
     450:	4213      	tst	r3, r2
     452:	d1fc      	bne.n	44e <system_gclk_chan_disable+0x2a>
		/* Wait for clock to become disabled */
	}

	/* Restore previous configured clock generator */
	GCLK->CLKCTRL.bit.GEN = prev_gen_id;
     454:	4906      	ldr	r1, [pc, #24]	; (470 <system_gclk_chan_disable+0x4c>)
     456:	884a      	ldrh	r2, [r1, #2]
     458:	0203      	lsls	r3, r0, #8
     45a:	4806      	ldr	r0, [pc, #24]	; (474 <system_gclk_chan_disable+0x50>)
     45c:	4002      	ands	r2, r0
     45e:	4313      	orrs	r3, r2
     460:	804b      	strh	r3, [r1, #2]
	cpu_irq_leave_critical();
     462:	4b06      	ldr	r3, [pc, #24]	; (47c <system_gclk_chan_disable+0x58>)
     464:	4798      	blx	r3

	system_interrupt_leave_critical_section();
}
     466:	bd10      	pop	{r4, pc}
     468:	00000119 	.word	0x00000119
     46c:	40000c02 	.word	0x40000c02
     470:	40000c00 	.word	0x40000c00
     474:	fffff0ff 	.word	0xfffff0ff
     478:	ffffbfff 	.word	0xffffbfff
     47c:	00000159 	.word	0x00000159

00000480 <system_gclk_chan_set_config>:
{
     480:	b510      	push	{r4, lr}
	new_clkctrl_config |= config->source_generator << GCLK_CLKCTRL_GEN_Pos;
     482:	780c      	ldrb	r4, [r1, #0]
     484:	0224      	lsls	r4, r4, #8
     486:	4304      	orrs	r4, r0
	system_gclk_chan_disable(channel);
     488:	4b02      	ldr	r3, [pc, #8]	; (494 <system_gclk_chan_set_config+0x14>)
     48a:	4798      	blx	r3
	GCLK->CLKCTRL.reg = new_clkctrl_config;
     48c:	b2a4      	uxth	r4, r4
     48e:	4b02      	ldr	r3, [pc, #8]	; (498 <system_gclk_chan_set_config+0x18>)
     490:	805c      	strh	r4, [r3, #2]
}
     492:	bd10      	pop	{r4, pc}
     494:	00000425 	.word	0x00000425
     498:	40000c00 	.word	0x40000c00

0000049c <_system_dummy_init>:
 */
void _system_dummy_init(void);
void _system_dummy_init(void)
{
	return;
}
     49c:	4770      	bx	lr
	...

000004a0 <system_init>:
 *  - Board hardware initialization (via the Board module)
 *  - Event system driver initialization (via the EVSYS module)
 *  - External Interrupt driver initialization (via the EXTINT module)
 */
void system_init(void)
{
     4a0:	b510      	push	{r4, lr}
	/* Configure GCLK and clock sources according to conf_clocks.h */
	system_clock_init();
     4a2:	4b05      	ldr	r3, [pc, #20]	; (4b8 <system_init+0x18>)
     4a4:	4798      	blx	r3

	/* Initialize board hardware */
	system_board_init();
     4a6:	4b05      	ldr	r3, [pc, #20]	; (4bc <system_init+0x1c>)
     4a8:	4798      	blx	r3

	/* Initialize EVSYS hardware */
	_system_events_init();
     4aa:	4b05      	ldr	r3, [pc, #20]	; (4c0 <system_init+0x20>)
     4ac:	4798      	blx	r3

	/* Initialize External hardware */
	_system_extint_init();
     4ae:	4b05      	ldr	r3, [pc, #20]	; (4c4 <system_init+0x24>)
     4b0:	4798      	blx	r3
	
	/* Initialize DIVAS hardware */
	_system_divas_init();
     4b2:	4b05      	ldr	r3, [pc, #20]	; (4c8 <system_init+0x28>)
     4b4:	4798      	blx	r3
}
     4b6:	bd10      	pop	{r4, pc}
     4b8:	0000026d 	.word	0x0000026d
     4bc:	00000115 	.word	0x00000115
     4c0:	0000049d 	.word	0x0000049d
     4c4:	0000049d 	.word	0x0000049d
     4c8:	0000049d 	.word	0x0000049d

000004cc <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     4cc:	e7fe      	b.n	4cc <Dummy_Handler>
	...

000004d0 <Reset_Handler>:
{
     4d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
     4d2:	4a2a      	ldr	r2, [pc, #168]	; (57c <Reset_Handler+0xac>)
     4d4:	4b2a      	ldr	r3, [pc, #168]	; (580 <Reset_Handler+0xb0>)
     4d6:	429a      	cmp	r2, r3
     4d8:	d011      	beq.n	4fe <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
     4da:	001a      	movs	r2, r3
     4dc:	4b29      	ldr	r3, [pc, #164]	; (584 <Reset_Handler+0xb4>)
     4de:	429a      	cmp	r2, r3
     4e0:	d20d      	bcs.n	4fe <Reset_Handler+0x2e>
     4e2:	4a29      	ldr	r2, [pc, #164]	; (588 <Reset_Handler+0xb8>)
     4e4:	3303      	adds	r3, #3
     4e6:	1a9b      	subs	r3, r3, r2
     4e8:	089b      	lsrs	r3, r3, #2
     4ea:	3301      	adds	r3, #1
     4ec:	009b      	lsls	r3, r3, #2
     4ee:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
     4f0:	4823      	ldr	r0, [pc, #140]	; (580 <Reset_Handler+0xb0>)
     4f2:	4922      	ldr	r1, [pc, #136]	; (57c <Reset_Handler+0xac>)
     4f4:	588c      	ldr	r4, [r1, r2]
     4f6:	5084      	str	r4, [r0, r2]
     4f8:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
     4fa:	429a      	cmp	r2, r3
     4fc:	d1fa      	bne.n	4f4 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
     4fe:	4a23      	ldr	r2, [pc, #140]	; (58c <Reset_Handler+0xbc>)
     500:	4b23      	ldr	r3, [pc, #140]	; (590 <Reset_Handler+0xc0>)
     502:	429a      	cmp	r2, r3
     504:	d20a      	bcs.n	51c <Reset_Handler+0x4c>
     506:	43d3      	mvns	r3, r2
     508:	4921      	ldr	r1, [pc, #132]	; (590 <Reset_Handler+0xc0>)
     50a:	185b      	adds	r3, r3, r1
     50c:	2103      	movs	r1, #3
     50e:	438b      	bics	r3, r1
     510:	3304      	adds	r3, #4
     512:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
     514:	2100      	movs	r1, #0
     516:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
     518:	4293      	cmp	r3, r2
     51a:	d1fc      	bne.n	516 <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     51c:	4a1d      	ldr	r2, [pc, #116]	; (594 <Reset_Handler+0xc4>)
     51e:	21ff      	movs	r1, #255	; 0xff
     520:	4b1d      	ldr	r3, [pc, #116]	; (598 <Reset_Handler+0xc8>)
     522:	438b      	bics	r3, r1
     524:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
     526:	39fd      	subs	r1, #253	; 0xfd
     528:	2390      	movs	r3, #144	; 0x90
     52a:	005b      	lsls	r3, r3, #1
     52c:	4a1b      	ldr	r2, [pc, #108]	; (59c <Reset_Handler+0xcc>)
     52e:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
     530:	4a1b      	ldr	r2, [pc, #108]	; (5a0 <Reset_Handler+0xd0>)
     532:	78d3      	ldrb	r3, [r2, #3]
     534:	2503      	movs	r5, #3
     536:	43ab      	bics	r3, r5
     538:	2402      	movs	r4, #2
     53a:	4323      	orrs	r3, r4
     53c:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
     53e:	78d3      	ldrb	r3, [r2, #3]
     540:	270c      	movs	r7, #12
     542:	43bb      	bics	r3, r7
     544:	2608      	movs	r6, #8
     546:	4333      	orrs	r3, r6
     548:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
     54a:	4b16      	ldr	r3, [pc, #88]	; (5a4 <Reset_Handler+0xd4>)
     54c:	7b98      	ldrb	r0, [r3, #14]
     54e:	2230      	movs	r2, #48	; 0x30
     550:	4390      	bics	r0, r2
     552:	2220      	movs	r2, #32
     554:	4310      	orrs	r0, r2
     556:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
     558:	7b99      	ldrb	r1, [r3, #14]
     55a:	43b9      	bics	r1, r7
     55c:	4331      	orrs	r1, r6
     55e:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
     560:	7b9a      	ldrb	r2, [r3, #14]
     562:	43aa      	bics	r2, r5
     564:	4322      	orrs	r2, r4
     566:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
     568:	4a0f      	ldr	r2, [pc, #60]	; (5a8 <Reset_Handler+0xd8>)
     56a:	6853      	ldr	r3, [r2, #4]
     56c:	2180      	movs	r1, #128	; 0x80
     56e:	430b      	orrs	r3, r1
     570:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     572:	4b0e      	ldr	r3, [pc, #56]	; (5ac <Reset_Handler+0xdc>)
     574:	4798      	blx	r3
        main();
     576:	4b0e      	ldr	r3, [pc, #56]	; (5b0 <Reset_Handler+0xe0>)
     578:	4798      	blx	r3
     57a:	e7fe      	b.n	57a <Reset_Handler+0xaa>
     57c:	00003190 	.word	0x00003190
     580:	20000000 	.word	0x20000000
     584:	20000038 	.word	0x20000038
     588:	20000004 	.word	0x20000004
     58c:	20000038 	.word	0x20000038
     590:	200000f4 	.word	0x200000f4
     594:	e000ed00 	.word	0xe000ed00
     598:	00000000 	.word	0x00000000
     59c:	41007000 	.word	0x41007000
     5a0:	41005000 	.word	0x41005000
     5a4:	41004800 	.word	0x41004800
     5a8:	41004000 	.word	0x41004000
     5ac:	00002fb5 	.word	0x00002fb5
     5b0:	00000c2d 	.word	0x00000c2d

000005b4 <clockSetup>:
	NVIC->IP[5] = 0x40C0;	//TC5 lowest, TC6 mid priority

	while(1){}
}

void clockSetup(void){
     5b4:	b570      	push	{r4, r5, r6, lr}

	SYSCTRL->INTFLAG.reg = SYSCTRL_INTFLAG_BOD33RDY | SYSCTRL_INTFLAG_BOD33DET | SYSCTRL_INTFLAG_DFLLRDY;
     5b6:	4b3c      	ldr	r3, [pc, #240]	; (6a8 <clockSetup+0xf4>)
     5b8:	22c2      	movs	r2, #194	; 0xc2
     5ba:	00d2      	lsls	r2, r2, #3
     5bc:	609a      	str	r2, [r3, #8]
	SYSCTRL->OSC8M.bit.PRESC = 0;	//divide the clock by 1
     5be:	6a1a      	ldr	r2, [r3, #32]
     5c0:	493a      	ldr	r1, [pc, #232]	; (6ac <clockSetup+0xf8>)
     5c2:	400a      	ands	r2, r1
     5c4:	621a      	str	r2, [r3, #32]
	SYSCTRL->OSC8M.bit.ONDEMAND = 1;	//clock is off is no peripheral request
     5c6:	6a1a      	ldr	r2, [r3, #32]
     5c8:	2180      	movs	r1, #128	; 0x80
     5ca:	430a      	orrs	r2, r1
     5cc:	621a      	str	r2, [r3, #32]
	SYSCTRL->OSC8M.bit.RUNSTDBY = 0;	//clock is off in sleep mode
     5ce:	6a1a      	ldr	r2, [r3, #32]
     5d0:	2640      	movs	r6, #64	; 0x40
     5d2:	43b2      	bics	r2, r6
     5d4:	621a      	str	r2, [r3, #32]
	SYSCTRL->OSC8M.reg |= 1<<1;	//enable clock
     5d6:	6a1c      	ldr	r4, [r3, #32]
     5d8:	2502      	movs	r5, #2
     5da:	432c      	orrs	r4, r5
     5dc:	621c      	str	r4, [r3, #32]
	//SYSCTRL->OSC8M.bit.FRANGE = 2;	//yet another way to control manipulate the clock freq
	
	SYSCTRL->OSC32K.bit.STARTUP = 0;	//start up asap
     5de:	699c      	ldr	r4, [r3, #24]
     5e0:	4a33      	ldr	r2, [pc, #204]	; (6b0 <clockSetup+0xfc>)
     5e2:	4014      	ands	r4, r2
     5e4:	619c      	str	r4, [r3, #24]
	SYSCTRL->OSC32K.bit.ONDEMAND = 1;	//clock is off if no peripheral request
     5e6:	6998      	ldr	r0, [r3, #24]
     5e8:	4308      	orrs	r0, r1
     5ea:	6198      	str	r0, [r3, #24]
	SYSCTRL->OSC32K.bit.RUNSTDBY = 1;	//clock is on in sleep mode
     5ec:	6999      	ldr	r1, [r3, #24]
     5ee:	4331      	orrs	r1, r6
     5f0:	6199      	str	r1, [r3, #24]
	SYSCTRL->OSC32K.bit.EN32K = 1;	//enable output
     5f2:	6999      	ldr	r1, [r3, #24]
     5f4:	2204      	movs	r2, #4
     5f6:	4311      	orrs	r1, r2
     5f8:	6199      	str	r1, [r3, #24]
	SYSCTRL->OSC32K.reg |= 1<<1;	//enable clock
     5fa:	699a      	ldr	r2, [r3, #24]
     5fc:	432a      	orrs	r2, r5
     5fe:	619a      	str	r2, [r3, #24]
	
	GCLK->CTRL.bit.SWRST = 1;	//reset the generators
     600:	4a2c      	ldr	r2, [pc, #176]	; (6b4 <clockSetup+0x100>)
     602:	7813      	ldrb	r3, [r2, #0]
     604:	2101      	movs	r1, #1
     606:	430b      	orrs	r3, r1
     608:	7013      	strb	r3, [r2, #0]
	while (GCLK->STATUS.bit.SYNCBUSY){}	//waiting for the reset to complete
     60a:	7853      	ldrb	r3, [r2, #1]
     60c:	09db      	lsrs	r3, r3, #7
     60e:	d1fc      	bne.n	60a <clockSetup+0x56>
	
	GCLK->GENDIV.reg = GCLK_GENDIV_ID(0) | GCLK_GENDIV_DIV(1);	//divide generator0 by 1
     610:	4b28      	ldr	r3, [pc, #160]	; (6b4 <clockSetup+0x100>)
     612:	2280      	movs	r2, #128	; 0x80
     614:	0052      	lsls	r2, r2, #1
     616:	609a      	str	r2, [r3, #8]
	GCLK->GENDIV.reg = GCLK_GENDIV_ID(1) | GCLK_GENDIV_DIV(1);	//divide generator1 by 1
     618:	2202      	movs	r2, #2
     61a:	32ff      	adds	r2, #255	; 0xff
     61c:	609a      	str	r2, [r3, #8]

	GCLK->GENCTRL.reg = GCLK_GENCTRL_ID(0) | GCLK_GENCTRL_GENEN | GCLK_GENCTRL_OE |
     61e:	4a26      	ldr	r2, [pc, #152]	; (6b8 <clockSetup+0x104>)
     620:	605a      	str	r2, [r3, #4]
	GCLK_GENCTRL_SRC_OSC8M | GCLK_GENCTRL_RUNSTDBY;
	
	GCLK->GENCTRL.reg = GCLK_GENCTRL_ID(1) | GCLK_GENCTRL_GENEN | GCLK_GENCTRL_OE |
     622:	4a26      	ldr	r2, [pc, #152]	; (6bc <clockSetup+0x108>)
     624:	605a      	str	r2, [r3, #4]
	GCLK_GENCTRL_SRC_OSC32K | GCLK_GENCTRL_RUNSTDBY;
	
	while (GCLK->STATUS.bit.SYNCBUSY){}	//waiting for sync to complete
     626:	001a      	movs	r2, r3
     628:	7853      	ldrb	r3, [r2, #1]
     62a:	09db      	lsrs	r3, r3, #7
     62c:	d1fc      	bne.n	628 <clockSetup+0x74>
	GCLK->CLKCTRL.reg |= 0<<14;	//disable clock
     62e:	4b21      	ldr	r3, [pc, #132]	; (6b4 <clockSetup+0x100>)
     630:	885a      	ldrh	r2, [r3, #2]
     632:	b292      	uxth	r2, r2
     634:	805a      	strh	r2, [r3, #2]

	GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID_ADC | GCLK_CLKCTRL_GEN_GCLK1 | 1<<14;	//setup genclk for ADC
     636:	4a22      	ldr	r2, [pc, #136]	; (6c0 <clockSetup+0x10c>)
     638:	805a      	strh	r2, [r3, #2]
	GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID_TC4_TC5 | GCLK_CLKCTRL_GEN_GCLK0 | 1<<14;	//setup genCLK for TC4/TC5
     63a:	4a22      	ldr	r2, [pc, #136]	; (6c4 <clockSetup+0x110>)
     63c:	805a      	strh	r2, [r3, #2]
	GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID_EIC | GCLK_CLKCTRL_GEN_GCLK0 | 1<<14;	//setup genclk for EIC...this is a single write method i believe
     63e:	4a22      	ldr	r2, [pc, #136]	; (6c8 <clockSetup+0x114>)
     640:	805a      	strh	r2, [r3, #2]
	GCLK->CLKCTRL.reg = GCLK_CLKCTRL_ID_TC6_TC7 | GCLK_CLKCTRL_GEN_GCLK0 | 1<<14;	//setup genCLK for TC6/TC7
     642:	4a22      	ldr	r2, [pc, #136]	; (6cc <clockSetup+0x118>)
     644:	805a      	strh	r2, [r3, #2]

	while (GCLK->STATUS.bit.SYNCBUSY==1){}	//waiting for sync to complete
     646:	001a      	movs	r2, r3
     648:	7853      	ldrb	r3, [r2, #1]
     64a:	09db      	lsrs	r3, r3, #7
     64c:	2b01      	cmp	r3, #1
     64e:	d0fb      	beq.n	648 <clockSetup+0x94>
	
	PM->CPUSEL.bit.CPUDIV = 0;	//divide CPU clock by 1	pg 15
     650:	4b1f      	ldr	r3, [pc, #124]	; (6d0 <clockSetup+0x11c>)
     652:	7a19      	ldrb	r1, [r3, #8]
     654:	2207      	movs	r2, #7
     656:	4391      	bics	r1, r2
     658:	7219      	strb	r1, [r3, #8]
	PM->APBASEL.bit.APBADIV = 0;	//divide apba bus by 1
     65a:	7a59      	ldrb	r1, [r3, #9]
     65c:	4391      	bics	r1, r2
     65e:	7259      	strb	r1, [r3, #9]
	PM->APBBSEL.bit.APBBDIV = 0;	//divide apbb bus by 1
     660:	7a99      	ldrb	r1, [r3, #10]
     662:	4391      	bics	r1, r2
     664:	7299      	strb	r1, [r3, #10]
	PM->APBCSEL.bit.APBCDIV = 0;	//divide apbc bus by 1
     666:	7ad9      	ldrb	r1, [r3, #11]
     668:	4391      	bics	r1, r2
     66a:	72d9      	strb	r1, [r3, #11]
	PM->APBAMASK.reg |= 1<<3;	//enable the GCLK clock DONT THINK NECESSARY they should be enabled by default pg 159
     66c:	699a      	ldr	r2, [r3, #24]
     66e:	2108      	movs	r1, #8
     670:	430a      	orrs	r2, r1
     672:	619a      	str	r2, [r3, #24]
	PM->APBCMASK.reg |= 1<<16;	//enable the ADC APB
     674:	6a19      	ldr	r1, [r3, #32]
     676:	2280      	movs	r2, #128	; 0x80
     678:	0252      	lsls	r2, r2, #9
     67a:	430a      	orrs	r2, r1
     67c:	621a      	str	r2, [r3, #32]
	PM->APBAMASK.reg |= 1<<6;	//enable the EIC APB
     67e:	699a      	ldr	r2, [r3, #24]
     680:	2140      	movs	r1, #64	; 0x40
     682:	430a      	orrs	r2, r1
     684:	619a      	str	r2, [r3, #24]
	PM->APBCMASK.reg |= PM_APBCMASK_TC4;	//enable the TC4 APB
     686:	6a19      	ldr	r1, [r3, #32]
     688:	2280      	movs	r2, #128	; 0x80
     68a:	0152      	lsls	r2, r2, #5
     68c:	430a      	orrs	r2, r1
     68e:	621a      	str	r2, [r3, #32]
	PM->APBCMASK.reg |= PM_APBCMASK_TC5;	//enable the TC5 APB
     690:	6a19      	ldr	r1, [r3, #32]
     692:	2280      	movs	r2, #128	; 0x80
     694:	0192      	lsls	r2, r2, #6
     696:	430a      	orrs	r2, r1
     698:	621a      	str	r2, [r3, #32]
	PM->APBCMASK.reg |= PM_APBCMASK_TC6;	//enable the TC6 APB
     69a:	6a19      	ldr	r1, [r3, #32]
     69c:	2280      	movs	r2, #128	; 0x80
     69e:	01d2      	lsls	r2, r2, #7
     6a0:	430a      	orrs	r2, r1
     6a2:	621a      	str	r2, [r3, #32]

}
     6a4:	bd70      	pop	{r4, r5, r6, pc}
     6a6:	46c0      	nop			; (mov r8, r8)
     6a8:	40000800 	.word	0x40000800
     6ac:	fffffcff 	.word	0xfffffcff
     6b0:	fffff8ff 	.word	0xfffff8ff
     6b4:	40000c00 	.word	0x40000c00
     6b8:	00290600 	.word	0x00290600
     6bc:	00290401 	.word	0x00290401
     6c0:	0000411e 	.word	0x0000411e
     6c4:	0000401c 	.word	0x0000401c
     6c8:	00004005 	.word	0x00004005
     6cc:	0000401d 	.word	0x0000401d
     6d0:	40000400 	.word	0x40000400

000006d4 <portSetup>:

void portSetup(void){
     6d4:	b570      	push	{r4, r5, r6, lr}
	Port *por = PORT;
	PortGroup *porA = &(por->Group[0]);
	PortGroup *porB = &(por->Group[1]);
	porA -> DIRSET.reg = PORT_PA04 | PORT_PA05 | PORT_PA06 | PORT_PA07;//outputs
     6d6:	4b1f      	ldr	r3, [pc, #124]	; (754 <portSetup+0x80>)
     6d8:	21f0      	movs	r1, #240	; 0xf0
     6da:	6099      	str	r1, [r3, #8]
	porB -> DIRSET.reg = PORT_PB00 | PORT_PB01 | PORT_PB02 | PORT_PB03 | PORT_PB04 | PORT_PB05 | PORT_PB06 | PORT_PB07;//LED segments
     6dc:	4c1e      	ldr	r4, [pc, #120]	; (758 <portSetup+0x84>)
     6de:	22ff      	movs	r2, #255	; 0xff
     6e0:	60a2      	str	r2, [r4, #8]
	porA -> DIRCLR.reg = PORT_PA16 | PORT_PA17 | PORT_PA18 | PORT_PA19;//inputs keypad
     6e2:	22f0      	movs	r2, #240	; 0xf0
     6e4:	0312      	lsls	r2, r2, #12
     6e6:	605a      	str	r2, [r3, #4]
	porA -> PINCFG[16].reg = PORT_PINCFG_INEN | PORT_PINCFG_PULLEN;
     6e8:	2206      	movs	r2, #6
     6ea:	2050      	movs	r0, #80	; 0x50
     6ec:	541a      	strb	r2, [r3, r0]
	porA -> PINCFG[17].reg = PORT_PINCFG_INEN | PORT_PINCFG_PULLEN;
     6ee:	3001      	adds	r0, #1
     6f0:	541a      	strb	r2, [r3, r0]
	porA -> PINCFG[18].reg = PORT_PINCFG_INEN | PORT_PINCFG_PULLEN;
     6f2:	3001      	adds	r0, #1
     6f4:	541a      	strb	r2, [r3, r0]
	porA -> PINCFG[19].reg = PORT_PINCFG_INEN | PORT_PINCFG_PULLEN;
     6f6:	3001      	adds	r0, #1
     6f8:	541a      	strb	r2, [r3, r0]
	porA -> OUTCLR.reg = PORT_PA04 | PORT_PA05 | PORT_PA06 | PORT_PA07;	//turn on SSDs
     6fa:	6159      	str	r1, [r3, #20]
	porB->DIRSET.reg = PORT_PB09;	//sign LED
     6fc:	32fb      	adds	r2, #251	; 0xfb
     6fe:	32ff      	adds	r2, #255	; 0xff
     700:	60a2      	str	r2, [r4, #8]
	porB->PMUX[6].bit.PMUXE = 4;	//mux the TC wavegen PB12	PWM output
     702:	0018      	movs	r0, r3
     704:	30b6      	adds	r0, #182	; 0xb6
     706:	7802      	ldrb	r2, [r0, #0]
     708:	39e1      	subs	r1, #225	; 0xe1
     70a:	438a      	bics	r2, r1
     70c:	2104      	movs	r1, #4
     70e:	430a      	orrs	r2, r1
     710:	7002      	strb	r2, [r0, #0]
	porB->PINCFG[12].bit.PMUXEN = 1;	//enable the mux
     712:	0019      	movs	r1, r3
     714:	31cc      	adds	r1, #204	; 0xcc
     716:	780a      	ldrb	r2, [r1, #0]
     718:	2501      	movs	r5, #1
     71a:	432a      	orrs	r2, r5
     71c:	700a      	strb	r2, [r1, #0]
	porB->PMUX[6].bit.PMUXO = 4;	//mux the TC wavegen PB13	PWM output
     71e:	7802      	ldrb	r2, [r0, #0]
     720:	210f      	movs	r1, #15
     722:	400a      	ands	r2, r1
     724:	2640      	movs	r6, #64	; 0x40
     726:	4332      	orrs	r2, r6
     728:	7002      	strb	r2, [r0, #0]
	porB->PINCFG[13].bit.PMUXEN = 1;	//enable the mux
     72a:	3017      	adds	r0, #23
     72c:	7802      	ldrb	r2, [r0, #0]
     72e:	432a      	orrs	r2, r5
     730:	7002      	strb	r2, [r0, #0]
	porA->PMUX[14].bit.PMUXO = 0;	//mux the EIC to pin PA28 EXTINT[8] for encoder
     732:	223e      	movs	r2, #62	; 0x3e
     734:	5c98      	ldrb	r0, [r3, r2]
     736:	4001      	ands	r1, r0
     738:	5499      	strb	r1, [r3, r2]
	porA->PINCFG[28].bit.PMUXEN =1;	//enable the MUX
     73a:	215c      	movs	r1, #92	; 0x5c
     73c:	5c5a      	ldrb	r2, [r3, r1]
     73e:	432a      	orrs	r2, r5
     740:	545a      	strb	r2, [r3, r1]
	porB->DIRCLR.reg = 1<<14;	//set as input for channel B for encoder
     742:	2280      	movs	r2, #128	; 0x80
     744:	01d2      	lsls	r2, r2, #7
     746:	6062      	str	r2, [r4, #4]
	porB->PINCFG[14].bit.INEN =1;	//enable the MUX
     748:	33ce      	adds	r3, #206	; 0xce
     74a:	781a      	ldrb	r2, [r3, #0]
     74c:	2102      	movs	r1, #2
     74e:	430a      	orrs	r2, r1
     750:	701a      	strb	r2, [r3, #0]
}
     752:	bd70      	pop	{r4, r5, r6, pc}
     754:	41004400 	.word	0x41004400
     758:	41004480 	.word	0x41004480

0000075c <wait>:

void wait(volatile int d){
     75c:	b082      	sub	sp, #8
     75e:	9001      	str	r0, [sp, #4]
	int count = 0;
	while (count < d*1000){
     760:	9a01      	ldr	r2, [sp, #4]
     762:	23fa      	movs	r3, #250	; 0xfa
     764:	009b      	lsls	r3, r3, #2
     766:	4353      	muls	r3, r2
     768:	2b00      	cmp	r3, #0
     76a:	dd07      	ble.n	77c <wait+0x20>
     76c:	2200      	movs	r2, #0
     76e:	21fa      	movs	r1, #250	; 0xfa
     770:	0089      	lsls	r1, r1, #2
		count++;
     772:	3201      	adds	r2, #1
	while (count < d*1000){
     774:	9b01      	ldr	r3, [sp, #4]
     776:	434b      	muls	r3, r1
     778:	4293      	cmp	r3, r2
     77a:	dcfa      	bgt.n	772 <wait+0x16>
	}
}
     77c:	b002      	add	sp, #8
     77e:	4770      	bx	lr

00000780 <charConvert>:
		x=0;
		break;
	}
}

void charConvert(char *a){	//gives value of keypad for spd/pos ctrl
     780:	b510      	push	{r4, lr}
	
	keypad = ((*a-48) * 1000);
     782:	7803      	ldrb	r3, [r0, #0]
     784:	3b30      	subs	r3, #48	; 0x30
     786:	22fa      	movs	r2, #250	; 0xfa
     788:	0092      	lsls	r2, r2, #2
     78a:	435a      	muls	r2, r3
     78c:	4b0e      	ldr	r3, [pc, #56]	; (7c8 <charConvert+0x48>)
     78e:	601a      	str	r2, [r3, #0]
	a++;
	keypad += ((*a-48) * 100);
     790:	681c      	ldr	r4, [r3, #0]
     792:	7841      	ldrb	r1, [r0, #1]
     794:	3930      	subs	r1, #48	; 0x30
     796:	2264      	movs	r2, #100	; 0x64
     798:	434a      	muls	r2, r1
     79a:	1912      	adds	r2, r2, r4
     79c:	601a      	str	r2, [r3, #0]
	a++;
	keypad += ((*a-48) * 10);
     79e:	681c      	ldr	r4, [r3, #0]
     7a0:	7881      	ldrb	r1, [r0, #2]
     7a2:	3930      	subs	r1, #48	; 0x30
     7a4:	008a      	lsls	r2, r1, #2
     7a6:	1852      	adds	r2, r2, r1
     7a8:	0052      	lsls	r2, r2, #1
     7aa:	1912      	adds	r2, r2, r4
     7ac:	601a      	str	r2, [r3, #0]
	a++;
	keypad += ((*a-48) * 1);
     7ae:	6819      	ldr	r1, [r3, #0]
     7b0:	78c2      	ldrb	r2, [r0, #3]
     7b2:	3a30      	subs	r2, #48	; 0x30
     7b4:	1852      	adds	r2, r2, r1
     7b6:	601a      	str	r2, [r3, #0]
	if(keypad > 5000){	//normalize it should throw an error
     7b8:	681a      	ldr	r2, [r3, #0]
     7ba:	4b04      	ldr	r3, [pc, #16]	; (7cc <charConvert+0x4c>)
     7bc:	429a      	cmp	r2, r3
     7be:	dd02      	ble.n	7c6 <charConvert+0x46>
		keypad = 5000;
     7c0:	001a      	movs	r2, r3
     7c2:	4b01      	ldr	r3, [pc, #4]	; (7c8 <charConvert+0x48>)
     7c4:	601a      	str	r2, [r3, #0]
		//display(err1);
	}
	//display(a);
}
     7c6:	bd10      	pop	{r4, pc}
     7c8:	200000dc 	.word	0x200000dc
     7cc:	00001388 	.word	0x00001388

000007d0 <poll>:
void poll(void){
     7d0:	b510      	push	{r4, lr}
	keyptr = array;
     7d2:	4a99      	ldr	r2, [pc, #612]	; (a38 <poll+0x268>)
     7d4:	4b99      	ldr	r3, [pc, #612]	; (a3c <poll+0x26c>)
     7d6:	601a      	str	r2, [r3, #0]
	key='D';
     7d8:	2244      	movs	r2, #68	; 0x44
     7da:	4b99      	ldr	r3, [pc, #612]	; (a40 <poll+0x270>)
     7dc:	701a      	strb	r2, [r3, #0]
	porA -> OUTCLR.reg = PORT_PA07;//turn on left SSD/top row of keypad
     7de:	4b99      	ldr	r3, [pc, #612]	; (a44 <poll+0x274>)
     7e0:	323c      	adds	r2, #60	; 0x3c
     7e2:	615a      	str	r2, [r3, #20]
	porA -> OUTSET.reg = PORT_PA04 | PORT_PA05 | PORT_PA06;//turn off other SSD/top row of keypad
     7e4:	3a10      	subs	r2, #16
     7e6:	619a      	str	r2, [r3, #24]
	if(porA->IN.reg&PORT_PA19){//checking PA19 for input
     7e8:	6a1b      	ldr	r3, [r3, #32]
     7ea:	031b      	lsls	r3, r3, #12
     7ec:	d502      	bpl.n	7f4 <poll+0x24>
		key='1';
     7ee:	3a3f      	subs	r2, #63	; 0x3f
     7f0:	4b93      	ldr	r3, [pc, #588]	; (a40 <poll+0x270>)
     7f2:	701a      	strb	r2, [r3, #0]
	if(porA->IN.reg&PORT_PA18){//checking PA18 for input
     7f4:	4b93      	ldr	r3, [pc, #588]	; (a44 <poll+0x274>)
     7f6:	6a1b      	ldr	r3, [r3, #32]
     7f8:	035b      	lsls	r3, r3, #13
     7fa:	d502      	bpl.n	802 <poll+0x32>
		key='2';
     7fc:	2232      	movs	r2, #50	; 0x32
     7fe:	4b90      	ldr	r3, [pc, #576]	; (a40 <poll+0x270>)
     800:	701a      	strb	r2, [r3, #0]
	if(porA->IN.reg&PORT_PA17){//checking PA17 for input
     802:	4b90      	ldr	r3, [pc, #576]	; (a44 <poll+0x274>)
     804:	6a1b      	ldr	r3, [r3, #32]
     806:	039b      	lsls	r3, r3, #14
     808:	d502      	bpl.n	810 <poll+0x40>
		key='3';
     80a:	2233      	movs	r2, #51	; 0x33
     80c:	4b8c      	ldr	r3, [pc, #560]	; (a40 <poll+0x270>)
     80e:	701a      	strb	r2, [r3, #0]
	if(porA->IN.reg&PORT_PA16)//checking PA16 for input 'A'
     810:	4b8c      	ldr	r3, [pc, #560]	; (a44 <poll+0x274>)
     812:	6a1b      	ldr	r3, [r3, #32]
     814:	03db      	lsls	r3, r3, #15
     816:	d505      	bpl.n	824 <poll+0x54>
		key='A';
     818:	2241      	movs	r2, #65	; 0x41
     81a:	4b89      	ldr	r3, [pc, #548]	; (a40 <poll+0x270>)
     81c:	701a      	strb	r2, [r3, #0]
		ent_key=1;
     81e:	3a40      	subs	r2, #64	; 0x40
     820:	4b89      	ldr	r3, [pc, #548]	; (a48 <poll+0x278>)
     822:	601a      	str	r2, [r3, #0]
	porA -> OUTSET.reg = PORT_PA07;//turn off left SSD/top row of keypad
     824:	4c87      	ldr	r4, [pc, #540]	; (a44 <poll+0x274>)
     826:	2380      	movs	r3, #128	; 0x80
     828:	61a3      	str	r3, [r4, #24]
	wait(1);//this wait is so the numbers don't get mixed up
     82a:	2001      	movs	r0, #1
     82c:	4b87      	ldr	r3, [pc, #540]	; (a4c <poll+0x27c>)
     82e:	4798      	blx	r3
	porA -> OUTCLR.reg = PORT_PA06;//turn on left SSD/top row of keypad
     830:	2340      	movs	r3, #64	; 0x40
     832:	6163      	str	r3, [r4, #20]
	if(porA->IN.reg&PORT_PA19)//checking PA19 for input
     834:	6a23      	ldr	r3, [r4, #32]
     836:	031b      	lsls	r3, r3, #12
     838:	d502      	bpl.n	840 <poll+0x70>
	key='4';
     83a:	2234      	movs	r2, #52	; 0x34
     83c:	4b80      	ldr	r3, [pc, #512]	; (a40 <poll+0x270>)
     83e:	701a      	strb	r2, [r3, #0]
	if(porA->IN.reg&PORT_PA18)//checking PA18 for input
     840:	4b80      	ldr	r3, [pc, #512]	; (a44 <poll+0x274>)
     842:	6a1b      	ldr	r3, [r3, #32]
     844:	035b      	lsls	r3, r3, #13
     846:	d502      	bpl.n	84e <poll+0x7e>
	key='5';
     848:	2235      	movs	r2, #53	; 0x35
     84a:	4b7d      	ldr	r3, [pc, #500]	; (a40 <poll+0x270>)
     84c:	701a      	strb	r2, [r3, #0]
	if(porA->IN.reg&PORT_PA17)//checking PA17 for input
     84e:	4b7d      	ldr	r3, [pc, #500]	; (a44 <poll+0x274>)
     850:	6a1b      	ldr	r3, [r3, #32]
     852:	039b      	lsls	r3, r3, #14
     854:	d502      	bpl.n	85c <poll+0x8c>
	key='6';
     856:	2236      	movs	r2, #54	; 0x36
     858:	4b79      	ldr	r3, [pc, #484]	; (a40 <poll+0x270>)
     85a:	701a      	strb	r2, [r3, #0]
	porA -> OUTSET.reg = PORT_PA06;//turn off left SSD/top row of keypad
     85c:	4c79      	ldr	r4, [pc, #484]	; (a44 <poll+0x274>)
     85e:	2340      	movs	r3, #64	; 0x40
     860:	61a3      	str	r3, [r4, #24]
	wait(1);//this wait is so the numbers don't get mixed up
     862:	2001      	movs	r0, #1
     864:	4b79      	ldr	r3, [pc, #484]	; (a4c <poll+0x27c>)
     866:	4798      	blx	r3
	porA -> OUTCLR.reg = PORT_PA05;//turn on left SSD/top row of keypad
     868:	2320      	movs	r3, #32
     86a:	6163      	str	r3, [r4, #20]
	if(porA->IN.reg&PORT_PA19)//checking PA19 for input
     86c:	6a23      	ldr	r3, [r4, #32]
     86e:	031b      	lsls	r3, r3, #12
     870:	d502      	bpl.n	878 <poll+0xa8>
	key='7';
     872:	2237      	movs	r2, #55	; 0x37
     874:	4b72      	ldr	r3, [pc, #456]	; (a40 <poll+0x270>)
     876:	701a      	strb	r2, [r3, #0]
	if(porA->IN.reg&PORT_PA18)//checking PA18 for input
     878:	4b72      	ldr	r3, [pc, #456]	; (a44 <poll+0x274>)
     87a:	6a1b      	ldr	r3, [r3, #32]
     87c:	035b      	lsls	r3, r3, #13
     87e:	d502      	bpl.n	886 <poll+0xb6>
	key='8';
     880:	2238      	movs	r2, #56	; 0x38
     882:	4b6f      	ldr	r3, [pc, #444]	; (a40 <poll+0x270>)
     884:	701a      	strb	r2, [r3, #0]
	if(porA->IN.reg&PORT_PA17)//checking PA17 for input
     886:	4b6f      	ldr	r3, [pc, #444]	; (a44 <poll+0x274>)
     888:	6a1b      	ldr	r3, [r3, #32]
     88a:	039b      	lsls	r3, r3, #14
     88c:	d502      	bpl.n	894 <poll+0xc4>
	key='9';
     88e:	2239      	movs	r2, #57	; 0x39
     890:	4b6b      	ldr	r3, [pc, #428]	; (a40 <poll+0x270>)
     892:	701a      	strb	r2, [r3, #0]
	porA -> OUTSET.reg = PORT_PA05;//turn off left SSD/top row of keypad
     894:	4c6b      	ldr	r4, [pc, #428]	; (a44 <poll+0x274>)
     896:	2320      	movs	r3, #32
     898:	61a3      	str	r3, [r4, #24]
	wait(1);//this wait is so the numbers don't get mixed up
     89a:	2001      	movs	r0, #1
     89c:	4b6b      	ldr	r3, [pc, #428]	; (a4c <poll+0x27c>)
     89e:	4798      	blx	r3
	porA -> OUTCLR.reg = PORT_PA04;//turn on left SSD/top row of keypad
     8a0:	2310      	movs	r3, #16
     8a2:	6163      	str	r3, [r4, #20]
	if(porA->IN.reg&PORT_PA17){//checking PA17 for input '#'
     8a4:	6a23      	ldr	r3, [r4, #32]
     8a6:	039b      	lsls	r3, r3, #14
     8a8:	d505      	bpl.n	8b6 <poll+0xe6>
		key='#';
     8aa:	2223      	movs	r2, #35	; 0x23
     8ac:	4b64      	ldr	r3, [pc, #400]	; (a40 <poll+0x270>)
     8ae:	701a      	strb	r2, [r3, #0]
		ent_key=0;
     8b0:	2200      	movs	r2, #0
     8b2:	4b65      	ldr	r3, [pc, #404]	; (a48 <poll+0x278>)
     8b4:	601a      	str	r2, [r3, #0]
	if(porA->IN.reg&PORT_PA18){//checking PA18 for input '0'
     8b6:	4b63      	ldr	r3, [pc, #396]	; (a44 <poll+0x274>)
     8b8:	6a1b      	ldr	r3, [r3, #32]
     8ba:	035b      	lsls	r3, r3, #13
     8bc:	d502      	bpl.n	8c4 <poll+0xf4>
		key='0';
     8be:	2230      	movs	r2, #48	; 0x30
     8c0:	4b5f      	ldr	r3, [pc, #380]	; (a40 <poll+0x270>)
     8c2:	701a      	strb	r2, [r3, #0]
	if(porA->IN.reg&PORT_PA19){//checking PA19 for input '*'
     8c4:	4b5f      	ldr	r3, [pc, #380]	; (a44 <poll+0x274>)
     8c6:	6a1b      	ldr	r3, [r3, #32]
     8c8:	031b      	lsls	r3, r3, #12
     8ca:	d505      	bpl.n	8d8 <poll+0x108>
		key = '*';
     8cc:	222a      	movs	r2, #42	; 0x2a
     8ce:	4b5c      	ldr	r3, [pc, #368]	; (a40 <poll+0x270>)
     8d0:	701a      	strb	r2, [r3, #0]
		ent_key=0;
     8d2:	2200      	movs	r2, #0
     8d4:	4b5c      	ldr	r3, [pc, #368]	; (a48 <poll+0x278>)
     8d6:	601a      	str	r2, [r3, #0]
	porA -> OUTSET.reg = PORT_PA04;//turn off left SSD/top row of keypad
     8d8:	2210      	movs	r2, #16
     8da:	4b5a      	ldr	r3, [pc, #360]	; (a44 <poll+0x274>)
     8dc:	619a      	str	r2, [r3, #24]
	wait(1);//this wait is so the numbers don't get mixed up
     8de:	2001      	movs	r0, #1
     8e0:	4b5a      	ldr	r3, [pc, #360]	; (a4c <poll+0x27c>)
     8e2:	4798      	blx	r3
	switch(x){
     8e4:	4b5a      	ldr	r3, [pc, #360]	; (a50 <poll+0x280>)
     8e6:	681b      	ldr	r3, [r3, #0]
     8e8:	2b01      	cmp	r3, #1
     8ea:	d021      	beq.n	930 <poll+0x160>
     8ec:	dd0d      	ble.n	90a <poll+0x13a>
     8ee:	2b02      	cmp	r3, #2
     8f0:	d036      	beq.n	960 <poll+0x190>
     8f2:	2b03      	cmp	r3, #3
     8f4:	d000      	beq.n	8f8 <poll+0x128>
     8f6:	e09a      	b.n	a2e <poll+0x25e>
		if(key == 'D'){
     8f8:	4b51      	ldr	r3, [pc, #324]	; (a40 <poll+0x270>)
     8fa:	781b      	ldrb	r3, [r3, #0]
     8fc:	2b44      	cmp	r3, #68	; 0x44
     8fe:	d100      	bne.n	902 <poll+0x132>
     900:	e086      	b.n	a10 <poll+0x240>
		CNT = 0;
     902:	2200      	movs	r2, #0
     904:	4b53      	ldr	r3, [pc, #332]	; (a54 <poll+0x284>)
     906:	601a      	str	r2, [r3, #0]
		break;
     908:	e063      	b.n	9d2 <poll+0x202>
	switch(x){
     90a:	2b00      	cmp	r3, #0
     90c:	d000      	beq.n	910 <poll+0x140>
     90e:	e08e      	b.n	a2e <poll+0x25e>
		if(key=='D'){
     910:	4b4b      	ldr	r3, [pc, #300]	; (a40 <poll+0x270>)
     912:	781b      	ldrb	r3, [r3, #0]
     914:	2b44      	cmp	r3, #68	; 0x44
     916:	d05c      	beq.n	9d2 <poll+0x202>
		T1=key;
     918:	4b49      	ldr	r3, [pc, #292]	; (a40 <poll+0x270>)
     91a:	781b      	ldrb	r3, [r3, #0]
     91c:	b2db      	uxtb	r3, r3
     91e:	4a4e      	ldr	r2, [pc, #312]	; (a58 <poll+0x288>)
     920:	7013      	strb	r3, [r2, #0]
		CNT=0;
     922:	2200      	movs	r2, #0
     924:	4b4b      	ldr	r3, [pc, #300]	; (a54 <poll+0x284>)
     926:	601a      	str	r2, [r3, #0]
		x=1;
     928:	3201      	adds	r2, #1
     92a:	4b49      	ldr	r3, [pc, #292]	; (a50 <poll+0x280>)
     92c:	601a      	str	r2, [r3, #0]
		break;
     92e:	e050      	b.n	9d2 <poll+0x202>
		if(key!=T1){
     930:	4b43      	ldr	r3, [pc, #268]	; (a40 <poll+0x270>)
     932:	781b      	ldrb	r3, [r3, #0]
     934:	4a48      	ldr	r2, [pc, #288]	; (a58 <poll+0x288>)
     936:	7812      	ldrb	r2, [r2, #0]
     938:	b2db      	uxtb	r3, r3
     93a:	4293      	cmp	r3, r2
     93c:	d003      	beq.n	946 <poll+0x176>
			x=0;
     93e:	2200      	movs	r2, #0
     940:	4b43      	ldr	r3, [pc, #268]	; (a50 <poll+0x280>)
     942:	601a      	str	r2, [r3, #0]
		break;}
     944:	e045      	b.n	9d2 <poll+0x202>
		CNT++;
     946:	4b43      	ldr	r3, [pc, #268]	; (a54 <poll+0x284>)
     948:	681a      	ldr	r2, [r3, #0]
     94a:	3201      	adds	r2, #1
     94c:	601a      	str	r2, [r3, #0]
		if(CNT>N){	//pressed long enough
     94e:	681a      	ldr	r2, [r3, #0]
     950:	4b42      	ldr	r3, [pc, #264]	; (a5c <poll+0x28c>)
     952:	681b      	ldr	r3, [r3, #0]
     954:	429a      	cmp	r2, r3
     956:	dd3c      	ble.n	9d2 <poll+0x202>
			x=2;
     958:	2202      	movs	r2, #2
     95a:	4b3d      	ldr	r3, [pc, #244]	; (a50 <poll+0x280>)
     95c:	601a      	str	r2, [r3, #0]
		break;}
     95e:	e038      	b.n	9d2 <poll+0x202>
		if(key!='D'){
     960:	4b37      	ldr	r3, [pc, #220]	; (a40 <poll+0x270>)
     962:	781b      	ldrb	r3, [r3, #0]
     964:	2b44      	cmp	r3, #68	; 0x44
     966:	d02e      	beq.n	9c6 <poll+0x1f6>
			CNT=0;
     968:	2200      	movs	r2, #0
     96a:	4b3a      	ldr	r3, [pc, #232]	; (a54 <poll+0x284>)
     96c:	601a      	str	r2, [r3, #0]
			if(key == '#'){	//if spd key is detected reset array set mode
     96e:	4b34      	ldr	r3, [pc, #208]	; (a40 <poll+0x270>)
     970:	781b      	ldrb	r3, [r3, #0]
     972:	2b23      	cmp	r3, #35	; 0x23
     974:	d018      	beq.n	9a8 <poll+0x1d8>
			else if(key == '*'){	//if pos key is detected reset array set mode
     976:	4b32      	ldr	r3, [pc, #200]	; (a40 <poll+0x270>)
     978:	781b      	ldrb	r3, [r3, #0]
     97a:	2b2a      	cmp	r3, #42	; 0x2a
     97c:	d02a      	beq.n	9d4 <poll+0x204>
			else if( key == 'A'){	//'A' is the enter key
     97e:	4b30      	ldr	r3, [pc, #192]	; (a40 <poll+0x270>)
     980:	781b      	ldrb	r3, [r3, #0]
     982:	2b41      	cmp	r3, #65	; 0x41
     984:	d037      	beq.n	9f6 <poll+0x226>
			else if(key != 'B' | 'C'){
     986:	4a2e      	ldr	r2, [pc, #184]	; (a40 <poll+0x270>)
     988:	7813      	ldrb	r3, [r2, #0]
				array[i++]=key;	//reset array to loop back on itself
     98a:	4b35      	ldr	r3, [pc, #212]	; (a60 <poll+0x290>)
     98c:	6819      	ldr	r1, [r3, #0]
     98e:	1c48      	adds	r0, r1, #1
     990:	6018      	str	r0, [r3, #0]
     992:	7812      	ldrb	r2, [r2, #0]
     994:	b2d2      	uxtb	r2, r2
     996:	4828      	ldr	r0, [pc, #160]	; (a38 <poll+0x268>)
     998:	5442      	strb	r2, [r0, r1]
				if(i>=4){
     99a:	681b      	ldr	r3, [r3, #0]
     99c:	2b03      	cmp	r3, #3
     99e:	dd12      	ble.n	9c6 <poll+0x1f6>
					i=0;
     9a0:	2200      	movs	r2, #0
     9a2:	4b2f      	ldr	r3, [pc, #188]	; (a60 <poll+0x290>)
     9a4:	601a      	str	r2, [r3, #0]
     9a6:	e00e      	b.n	9c6 <poll+0x1f6>
				array[0] = '0';
     9a8:	4b23      	ldr	r3, [pc, #140]	; (a38 <poll+0x268>)
     9aa:	3230      	adds	r2, #48	; 0x30
     9ac:	701a      	strb	r2, [r3, #0]
				array[1] = '0';
     9ae:	705a      	strb	r2, [r3, #1]
				array[2] = '0';
     9b0:	709a      	strb	r2, [r3, #2]
				array[3] = '0';
     9b2:	70da      	strb	r2, [r3, #3]
				i = 0;
     9b4:	2300      	movs	r3, #0
     9b6:	4a2a      	ldr	r2, [pc, #168]	; (a60 <poll+0x290>)
     9b8:	6013      	str	r3, [r2, #0]
				porB -> OUTSET.reg = PORT_PB09;	//turn off LED
     9ba:	2180      	movs	r1, #128	; 0x80
     9bc:	0089      	lsls	r1, r1, #2
     9be:	4a29      	ldr	r2, [pc, #164]	; (a64 <poll+0x294>)
     9c0:	6191      	str	r1, [r2, #24]
				mode = 0;	//set to speed ctrl
     9c2:	4a29      	ldr	r2, [pc, #164]	; (a68 <poll+0x298>)
     9c4:	6013      	str	r3, [r2, #0]
		CNT=0;
     9c6:	2200      	movs	r2, #0
     9c8:	4b22      	ldr	r3, [pc, #136]	; (a54 <poll+0x284>)
     9ca:	601a      	str	r2, [r3, #0]
		x=3;
     9cc:	3203      	adds	r2, #3
     9ce:	4b20      	ldr	r3, [pc, #128]	; (a50 <poll+0x280>)
     9d0:	601a      	str	r2, [r3, #0]
}
     9d2:	bd10      	pop	{r4, pc}
				array[0] = '0';
     9d4:	4b18      	ldr	r3, [pc, #96]	; (a38 <poll+0x268>)
     9d6:	2230      	movs	r2, #48	; 0x30
     9d8:	701a      	strb	r2, [r3, #0]
				array[1] = '0';
     9da:	705a      	strb	r2, [r3, #1]
				array[2] = '0';
     9dc:	709a      	strb	r2, [r3, #2]
				array[3] = '0';
     9de:	70da      	strb	r2, [r3, #3]
				i = 0;
     9e0:	2200      	movs	r2, #0
     9e2:	4b1f      	ldr	r3, [pc, #124]	; (a60 <poll+0x290>)
     9e4:	601a      	str	r2, [r3, #0]
				porB -> OUTCLR.reg = PORT_PB09;	//turn on LED
     9e6:	2280      	movs	r2, #128	; 0x80
     9e8:	0092      	lsls	r2, r2, #2
     9ea:	4b1e      	ldr	r3, [pc, #120]	; (a64 <poll+0x294>)
     9ec:	615a      	str	r2, [r3, #20]
				mode = 1;	//set to pos ctrl
     9ee:	2201      	movs	r2, #1
     9f0:	4b1d      	ldr	r3, [pc, #116]	; (a68 <poll+0x298>)
     9f2:	601a      	str	r2, [r3, #0]
     9f4:	e7e7      	b.n	9c6 <poll+0x1f6>
				charConvert(keyptr);
     9f6:	4c10      	ldr	r4, [pc, #64]	; (a38 <poll+0x268>)
     9f8:	0020      	movs	r0, r4
     9fa:	4b1c      	ldr	r3, [pc, #112]	; (a6c <poll+0x29c>)
     9fc:	4798      	blx	r3
				array[0] = '0';
     9fe:	2330      	movs	r3, #48	; 0x30
     a00:	7023      	strb	r3, [r4, #0]
				array[1] = '0';
     a02:	7063      	strb	r3, [r4, #1]
				array[2] = '0';
     a04:	70a3      	strb	r3, [r4, #2]
				array[3] = '0';
     a06:	70e3      	strb	r3, [r4, #3]
				i = 0;
     a08:	2200      	movs	r2, #0
     a0a:	4b15      	ldr	r3, [pc, #84]	; (a60 <poll+0x290>)
     a0c:	601a      	str	r2, [r3, #0]
     a0e:	e7da      	b.n	9c6 <poll+0x1f6>
			CNT++;
     a10:	4b10      	ldr	r3, [pc, #64]	; (a54 <poll+0x284>)
     a12:	681a      	ldr	r2, [r3, #0]
     a14:	3201      	adds	r2, #1
     a16:	601a      	str	r2, [r3, #0]
			if(CNT>N){	//released long enough then reset
     a18:	681a      	ldr	r2, [r3, #0]
     a1a:	4b10      	ldr	r3, [pc, #64]	; (a5c <poll+0x28c>)
     a1c:	681b      	ldr	r3, [r3, #0]
     a1e:	429a      	cmp	r2, r3
     a20:	ddd7      	ble.n	9d2 <poll+0x202>
				CNT=0;
     a22:	2300      	movs	r3, #0
     a24:	4a0b      	ldr	r2, [pc, #44]	; (a54 <poll+0x284>)
     a26:	6013      	str	r3, [r2, #0]
				x=0;
     a28:	4a09      	ldr	r2, [pc, #36]	; (a50 <poll+0x280>)
     a2a:	6013      	str	r3, [r2, #0]
     a2c:	e7d1      	b.n	9d2 <poll+0x202>
		x=0;
     a2e:	2200      	movs	r2, #0
     a30:	4b07      	ldr	r3, [pc, #28]	; (a50 <poll+0x280>)
     a32:	601a      	str	r2, [r3, #0]
}
     a34:	e7cd      	b.n	9d2 <poll+0x202>
     a36:	46c0      	nop			; (mov r8, r8)
     a38:	20000028 	.word	0x20000028
     a3c:	200000ac 	.word	0x200000ac
     a40:	20000030 	.word	0x20000030
     a44:	41004400 	.word	0x41004400
     a48:	2000002c 	.word	0x2000002c
     a4c:	0000075d 	.word	0x0000075d
     a50:	200000b0 	.word	0x200000b0
     a54:	20000074 	.word	0x20000074
     a58:	20000078 	.word	0x20000078
     a5c:	20000020 	.word	0x20000020
     a60:	2000009c 	.word	0x2000009c
     a64:	41004480 	.word	0x41004480
     a68:	20000034 	.word	0x20000034
     a6c:	00000781 	.word	0x00000781

00000a70 <EICsetup>:

void EICsetup(void){
	EIC->CTRL.bit.SWRST = 1;	//reset the EIC and disables the EIC
     a70:	4a0c      	ldr	r2, [pc, #48]	; (aa4 <EICsetup+0x34>)
     a72:	7813      	ldrb	r3, [r2, #0]
     a74:	2101      	movs	r1, #1
     a76:	430b      	orrs	r3, r1
     a78:	7013      	strb	r3, [r2, #0]
	while(EIC->STATUS.bit.SYNCBUSY){}	//wait for synchronization
     a7a:	7853      	ldrb	r3, [r2, #1]
     a7c:	09db      	lsrs	r3, r3, #7
     a7e:	d1fc      	bne.n	a7a <EICsetup+0xa>
	EIC->INTENSET.reg = 1<<8;	//enables PA28 for external interrupt EXTINT[8]
     a80:	4b08      	ldr	r3, [pc, #32]	; (aa4 <EICsetup+0x34>)
     a82:	2280      	movs	r2, #128	; 0x80
     a84:	0052      	lsls	r2, r2, #1
     a86:	60da      	str	r2, [r3, #12]
	EIC->CONFIG[1].bit.SENSE0 = 2;	//select falling edge as triggering ...config[n]..(n*8+x)=y...EXT[y]....SENSEx...n=0|1
     a88:	69da      	ldr	r2, [r3, #28]
     a8a:	2107      	movs	r1, #7
     a8c:	438a      	bics	r2, r1
     a8e:	3905      	subs	r1, #5
     a90:	430a      	orrs	r2, r1
     a92:	61da      	str	r2, [r3, #28]
	EIC->CTRL.reg |= 1<<1;	//enable the EIC at the end
     a94:	781a      	ldrb	r2, [r3, #0]
     a96:	430a      	orrs	r2, r1
     a98:	701a      	strb	r2, [r3, #0]
	NVIC->ISER[0] = 1<<4;	//enable the NVIC handler
     a9a:	2210      	movs	r2, #16
     a9c:	4b02      	ldr	r3, [pc, #8]	; (aa8 <EICsetup+0x38>)
     a9e:	601a      	str	r2, [r3, #0]
}
     aa0:	4770      	bx	lr
     aa2:	46c0      	nop			; (mov r8, r8)
     aa4:	40001800 	.word	0x40001800
     aa8:	e000e100 	.word	0xe000e100

00000aac <Timer4Setup>:

void Timer4Setup(void){	//for wavegen only should be in timer int 2
	Tc *tcc = TC4;
	TcCount8 *tc4 = &tcc->COUNT8;
	tc4->CTRLA.reg = 0;	//disable the TC4
     aac:	2200      	movs	r2, #0
     aae:	4b23      	ldr	r3, [pc, #140]	; (b3c <Timer4Setup+0x90>)
     ab0:	801a      	strh	r2, [r3, #0]
	while(tc4->STATUS.bit.SYNCBUSY){}	//wait for sync of disable
     ab2:	001a      	movs	r2, r3
     ab4:	7bd3      	ldrb	r3, [r2, #15]
     ab6:	09db      	lsrs	r3, r3, #7
     ab8:	d1fc      	bne.n	ab4 <Timer4Setup+0x8>
	tc4->CTRLA.bit.PRESCALER = 6;	//divide by 1;
     aba:	4b20      	ldr	r3, [pc, #128]	; (b3c <Timer4Setup+0x90>)
     abc:	881a      	ldrh	r2, [r3, #0]
     abe:	4920      	ldr	r1, [pc, #128]	; (b40 <Timer4Setup+0x94>)
     ac0:	4011      	ands	r1, r2
     ac2:	22c0      	movs	r2, #192	; 0xc0
     ac4:	00d2      	lsls	r2, r2, #3
     ac6:	430a      	orrs	r2, r1
     ac8:	801a      	strh	r2, [r3, #0]
	tc4->CTRLA.bit.WAVEGEN = 2;	//normal PWM frequency per=period, CC1/CC0=compare value
     aca:	881a      	ldrh	r2, [r3, #0]
     acc:	2160      	movs	r1, #96	; 0x60
     ace:	438a      	bics	r2, r1
     ad0:	2140      	movs	r1, #64	; 0x40
     ad2:	430a      	orrs	r2, r1
     ad4:	801a      	strh	r2, [r3, #0]
	tc4->CTRLA.bit.MODE = 1;	//8 bit mode
     ad6:	881a      	ldrh	r2, [r3, #0]
     ad8:	210c      	movs	r1, #12
     ada:	438a      	bics	r2, r1
     adc:	2104      	movs	r1, #4
     ade:	430a      	orrs	r2, r1
     ae0:	801a      	strh	r2, [r3, #0]
	tc4->PER.reg = 0xff;
     ae2:	22ff      	movs	r2, #255	; 0xff
     ae4:	751a      	strb	r2, [r3, #20]
	tc4->CTRLBSET.bit.ONESHOT = 0;	//turn off one shot mode
     ae6:	795a      	ldrb	r2, [r3, #5]
     ae8:	2104      	movs	r1, #4
     aea:	438a      	bics	r2, r1
     aec:	715a      	strb	r2, [r3, #5]
	while(tc4->STATUS.bit.SYNCBUSY){}	//wait for sync to complete
     aee:	001a      	movs	r2, r3
     af0:	7bd3      	ldrb	r3, [r2, #15]
     af2:	09db      	lsrs	r3, r3, #7
     af4:	d1fc      	bne.n	af0 <Timer4Setup+0x44>
	while(tc4->STATUS.bit.SYNCBUSY){}	//wait for sync to complete
     af6:	4a11      	ldr	r2, [pc, #68]	; (b3c <Timer4Setup+0x90>)
     af8:	7bd3      	ldrb	r3, [r2, #15]
     afa:	09db      	lsrs	r3, r3, #7
     afc:	d1fc      	bne.n	af8 <Timer4Setup+0x4c>
	tc4->CTRLA.reg |= 1<<1;	//enable the TC4
     afe:	4a0f      	ldr	r2, [pc, #60]	; (b3c <Timer4Setup+0x90>)
     b00:	8813      	ldrh	r3, [r2, #0]
     b02:	2102      	movs	r1, #2
     b04:	430b      	orrs	r3, r1
     b06:	8013      	strh	r3, [r2, #0]
	while(tc4->STATUS.bit.SYNCBUSY){}	//wait for sync of enable
     b08:	7bd3      	ldrb	r3, [r2, #15]
     b0a:	09db      	lsrs	r3, r3, #7
     b0c:	d1fc      	bne.n	b08 <Timer4Setup+0x5c>
	tc4->CC[0].reg = 0;
     b0e:	2200      	movs	r2, #0
     b10:	4b0a      	ldr	r3, [pc, #40]	; (b3c <Timer4Setup+0x90>)
     b12:	761a      	strb	r2, [r3, #24]
	while(tc4->STATUS.bit.SYNCBUSY){}	//wait for sync of disable
     b14:	001a      	movs	r2, r3
     b16:	7bd3      	ldrb	r3, [r2, #15]
     b18:	09db      	lsrs	r3, r3, #7
     b1a:	d1fc      	bne.n	b16 <Timer4Setup+0x6a>
	tc4->CC[1].reg = 0;
     b1c:	2200      	movs	r2, #0
     b1e:	4b07      	ldr	r3, [pc, #28]	; (b3c <Timer4Setup+0x90>)
     b20:	765a      	strb	r2, [r3, #25]
	while(tc4->STATUS.bit.SYNCBUSY){}	//wait for sync of disable
     b22:	001a      	movs	r2, r3
     b24:	7bd3      	ldrb	r3, [r2, #15]
     b26:	09db      	lsrs	r3, r3, #7
     b28:	d1fc      	bne.n	b24 <Timer4Setup+0x78>
	tc4->CTRLC.bit.INVEN1 = 0;
     b2a:	4a04      	ldr	r2, [pc, #16]	; (b3c <Timer4Setup+0x90>)
     b2c:	7993      	ldrb	r3, [r2, #6]
     b2e:	2102      	movs	r1, #2
     b30:	438b      	bics	r3, r1
     b32:	7193      	strb	r3, [r2, #6]
	while(tc4->STATUS.bit.SYNCBUSY){}	//wait for sync
     b34:	7bd3      	ldrb	r3, [r2, #15]
     b36:	09db      	lsrs	r3, r3, #7
     b38:	d1fc      	bne.n	b34 <Timer4Setup+0x88>
}
     b3a:	4770      	bx	lr
     b3c:	42003000 	.word	0x42003000
     b40:	fffff8ff 	.word	0xfffff8ff

00000b44 <Timer5Setup>:

void Timer5Setup(void){	//for keylogging 60Hz
	Tc *tc = TC5;
	TcCount8 *tc5 = &tc->COUNT8;
	tc5->CTRLA.reg = 0;	//disable the TC5
     b44:	2200      	movs	r2, #0
     b46:	4b19      	ldr	r3, [pc, #100]	; (bac <Timer5Setup+0x68>)
     b48:	801a      	strh	r2, [r3, #0]
	while(tc5->STATUS.bit.SYNCBUSY){}	//wait for sync of disable
     b4a:	001a      	movs	r2, r3
     b4c:	7bd3      	ldrb	r3, [r2, #15]
     b4e:	09db      	lsrs	r3, r3, #7
     b50:	d1fc      	bne.n	b4c <Timer5Setup+0x8>
	tc5->CTRLA.bit.PRESCALER = 7;	//divide by 1;
     b52:	4b16      	ldr	r3, [pc, #88]	; (bac <Timer5Setup+0x68>)
     b54:	8819      	ldrh	r1, [r3, #0]
     b56:	22e0      	movs	r2, #224	; 0xe0
     b58:	00d2      	lsls	r2, r2, #3
     b5a:	430a      	orrs	r2, r1
     b5c:	801a      	strh	r2, [r3, #0]
	tc5->CTRLA.bit.MODE = 1;	//8 bit mode
     b5e:	881a      	ldrh	r2, [r3, #0]
     b60:	210c      	movs	r1, #12
     b62:	438a      	bics	r2, r1
     b64:	2104      	movs	r1, #4
     b66:	430a      	orrs	r2, r1
     b68:	801a      	strh	r2, [r3, #0]
	tc5->PER.reg = 0x82;
     b6a:	2282      	movs	r2, #130	; 0x82
     b6c:	751a      	strb	r2, [r3, #20]
	tc5->CTRLBSET.bit.ONESHOT = 0;	//turn off one shot mode
     b6e:	795a      	ldrb	r2, [r3, #5]
     b70:	2104      	movs	r1, #4
     b72:	438a      	bics	r2, r1
     b74:	715a      	strb	r2, [r3, #5]
	while(tc5->STATUS.bit.SYNCBUSY){}	//wait for sync to complete
     b76:	001a      	movs	r2, r3
     b78:	7bd3      	ldrb	r3, [r2, #15]
     b7a:	09db      	lsrs	r3, r3, #7
     b7c:	d1fc      	bne.n	b78 <Timer5Setup+0x34>
	tc5->INTENSET.bit.OVF = 1;	//enable the overflow interrupt
     b7e:	4a0b      	ldr	r2, [pc, #44]	; (bac <Timer5Setup+0x68>)
     b80:	7b53      	ldrb	r3, [r2, #13]
     b82:	2101      	movs	r1, #1
     b84:	430b      	orrs	r3, r1
     b86:	7353      	strb	r3, [r2, #13]
	while(tc5->STATUS.bit.SYNCBUSY){}	//wait for sync to complete
     b88:	7bd3      	ldrb	r3, [r2, #15]
     b8a:	09db      	lsrs	r3, r3, #7
     b8c:	d1fc      	bne.n	b88 <Timer5Setup+0x44>
	tc5->CTRLA.reg |= 1<<1;	//enable the TC5
     b8e:	4a07      	ldr	r2, [pc, #28]	; (bac <Timer5Setup+0x68>)
     b90:	8813      	ldrh	r3, [r2, #0]
     b92:	2102      	movs	r1, #2
     b94:	430b      	orrs	r3, r1
     b96:	8013      	strh	r3, [r2, #0]
	while(tc5->STATUS.bit.SYNCBUSY){}	//wait for sync of enable
     b98:	7bd3      	ldrb	r3, [r2, #15]
     b9a:	09db      	lsrs	r3, r3, #7
     b9c:	d1fc      	bne.n	b98 <Timer5Setup+0x54>
	NVIC->ISER[0] |= 1<<20;	//enable the NVIC handler for TC5
     b9e:	4a04      	ldr	r2, [pc, #16]	; (bb0 <Timer5Setup+0x6c>)
     ba0:	6811      	ldr	r1, [r2, #0]
     ba2:	2380      	movs	r3, #128	; 0x80
     ba4:	035b      	lsls	r3, r3, #13
     ba6:	430b      	orrs	r3, r1
     ba8:	6013      	str	r3, [r2, #0]
}
     baa:	4770      	bx	lr
     bac:	42003400 	.word	0x42003400
     bb0:	e000e100 	.word	0xe000e100

00000bb4 <Timer6Setup>:

void Timer6Setup(void){	//for rpm 200hz
	Tc *tc = TC6;
	TcCount8 *tc6 = &tc->COUNT8;
	tc6->CTRLA.reg = 0;	//disable the TC6
     bb4:	2200      	movs	r2, #0
     bb6:	4b1a      	ldr	r3, [pc, #104]	; (c20 <Timer6Setup+0x6c>)
     bb8:	801a      	strh	r2, [r3, #0]
	while(tc6->STATUS.bit.SYNCBUSY){}	//wait for sync of disable
     bba:	001a      	movs	r2, r3
     bbc:	7bd3      	ldrb	r3, [r2, #15]
     bbe:	09db      	lsrs	r3, r3, #7
     bc0:	d1fc      	bne.n	bbc <Timer6Setup+0x8>
	tc6->CTRLA.bit.PRESCALER = 6;	//divide by 1;
     bc2:	4b17      	ldr	r3, [pc, #92]	; (c20 <Timer6Setup+0x6c>)
     bc4:	881a      	ldrh	r2, [r3, #0]
     bc6:	4917      	ldr	r1, [pc, #92]	; (c24 <Timer6Setup+0x70>)
     bc8:	4011      	ands	r1, r2
     bca:	22c0      	movs	r2, #192	; 0xc0
     bcc:	00d2      	lsls	r2, r2, #3
     bce:	430a      	orrs	r2, r1
     bd0:	801a      	strh	r2, [r3, #0]
	tc6->CTRLA.bit.MODE = 1;	//8 bit mode
     bd2:	881a      	ldrh	r2, [r3, #0]
     bd4:	210c      	movs	r1, #12
     bd6:	438a      	bics	r2, r1
     bd8:	2104      	movs	r1, #4
     bda:	430a      	orrs	r2, r1
     bdc:	801a      	strh	r2, [r3, #0]
	tc6->PER.reg = 0x9C;
     bde:	229c      	movs	r2, #156	; 0x9c
     be0:	751a      	strb	r2, [r3, #20]
	tc6->CTRLBSET.bit.ONESHOT = 0;	//turn off one shot mode
     be2:	795a      	ldrb	r2, [r3, #5]
     be4:	2104      	movs	r1, #4
     be6:	438a      	bics	r2, r1
     be8:	715a      	strb	r2, [r3, #5]
	while(tc6->STATUS.bit.SYNCBUSY){}	//wait for sync to complete
     bea:	001a      	movs	r2, r3
     bec:	7bd3      	ldrb	r3, [r2, #15]
     bee:	09db      	lsrs	r3, r3, #7
     bf0:	d1fc      	bne.n	bec <Timer6Setup+0x38>
	tc6->INTENSET.bit.OVF = 1;	//enable the overflow interrupt
     bf2:	4a0b      	ldr	r2, [pc, #44]	; (c20 <Timer6Setup+0x6c>)
     bf4:	7b53      	ldrb	r3, [r2, #13]
     bf6:	2101      	movs	r1, #1
     bf8:	430b      	orrs	r3, r1
     bfa:	7353      	strb	r3, [r2, #13]
	while(tc6->STATUS.bit.SYNCBUSY){}	//wait for sync to complete
     bfc:	7bd3      	ldrb	r3, [r2, #15]
     bfe:	09db      	lsrs	r3, r3, #7
     c00:	d1fc      	bne.n	bfc <Timer6Setup+0x48>
	tc6->CTRLA.reg |= 1<<1;	//enable the TC6
     c02:	4a07      	ldr	r2, [pc, #28]	; (c20 <Timer6Setup+0x6c>)
     c04:	8813      	ldrh	r3, [r2, #0]
     c06:	2102      	movs	r1, #2
     c08:	430b      	orrs	r3, r1
     c0a:	8013      	strh	r3, [r2, #0]
	while(tc6->STATUS.bit.SYNCBUSY){}	//wait for sync of enable
     c0c:	7bd3      	ldrb	r3, [r2, #15]
     c0e:	09db      	lsrs	r3, r3, #7
     c10:	d1fc      	bne.n	c0c <Timer6Setup+0x58>
	NVIC->ISER[0] |= 1<<21;	//enable the NVIC handler for TC6
     c12:	4a05      	ldr	r2, [pc, #20]	; (c28 <Timer6Setup+0x74>)
     c14:	6811      	ldr	r1, [r2, #0]
     c16:	2380      	movs	r3, #128	; 0x80
     c18:	039b      	lsls	r3, r3, #14
     c1a:	430b      	orrs	r3, r1
     c1c:	6013      	str	r3, [r2, #0]

}
     c1e:	4770      	bx	lr
     c20:	42003800 	.word	0x42003800
     c24:	fffff8ff 	.word	0xfffff8ff
     c28:	e000e100 	.word	0xe000e100

00000c2c <main>:
int main (void){
     c2c:	b510      	push	{r4, lr}
	system_init();
     c2e:	4b0d      	ldr	r3, [pc, #52]	; (c64 <main+0x38>)
     c30:	4798      	blx	r3
	clockSetup();
     c32:	4b0d      	ldr	r3, [pc, #52]	; (c68 <main+0x3c>)
     c34:	4798      	blx	r3
	portSetup();
     c36:	4b0d      	ldr	r3, [pc, #52]	; (c6c <main+0x40>)
     c38:	4798      	blx	r3
	Timer4Setup();
     c3a:	4b0d      	ldr	r3, [pc, #52]	; (c70 <main+0x44>)
     c3c:	4798      	blx	r3
	Timer5Setup();
     c3e:	4b0d      	ldr	r3, [pc, #52]	; (c74 <main+0x48>)
     c40:	4798      	blx	r3
	Timer6Setup();
     c42:	4b0d      	ldr	r3, [pc, #52]	; (c78 <main+0x4c>)
     c44:	4798      	blx	r3
	EICsetup();
     c46:	4b0d      	ldr	r3, [pc, #52]	; (c7c <main+0x50>)
     c48:	4798      	blx	r3
	ConArrayPtr = ConArray;
     c4a:	4a0d      	ldr	r2, [pc, #52]	; (c80 <main+0x54>)
     c4c:	4b0d      	ldr	r3, [pc, #52]	; (c84 <main+0x58>)
     c4e:	601a      	str	r2, [r3, #0]
	NVIC->IP[1] = 0x0;	//EIC highest priority
     c50:	4b0d      	ldr	r3, [pc, #52]	; (c88 <main+0x5c>)
     c52:	2100      	movs	r1, #0
     c54:	22c1      	movs	r2, #193	; 0xc1
     c56:	0092      	lsls	r2, r2, #2
     c58:	5099      	str	r1, [r3, r2]
	NVIC->IP[5] = 0x40C0;	//TC5 lowest, TC6 mid priority
     c5a:	490c      	ldr	r1, [pc, #48]	; (c8c <main+0x60>)
     c5c:	3210      	adds	r2, #16
     c5e:	5099      	str	r1, [r3, r2]
     c60:	e7fe      	b.n	c60 <main+0x34>
     c62:	46c0      	nop			; (mov r8, r8)
     c64:	000004a1 	.word	0x000004a1
     c68:	000005b5 	.word	0x000005b5
     c6c:	000006d5 	.word	0x000006d5
     c70:	00000aad 	.word	0x00000aad
     c74:	00000b45 	.word	0x00000b45
     c78:	00000bb5 	.word	0x00000bb5
     c7c:	00000a71 	.word	0x00000a71
     c80:	200000c8 	.word	0x200000c8
     c84:	200000c4 	.word	0x200000c4
     c88:	e000e100 	.word	0xe000e100
     c8c:	000040c0 	.word	0x000040c0

00000c90 <EIC_Handler>:
void EIC_Handler(void){
	Port *por = PORT;
	PortGroup *porB = &(por->Group[1]);
// 	porB->DIRSET.reg = PORT_PB16;
// 	porB->OUTTGL.reg = PORT_PB16;		//test frequency
	if(porB->IN.reg & PORT_PB14){	//CCW
     c90:	4b0a      	ldr	r3, [pc, #40]	; (cbc <EIC_Handler+0x2c>)
     c92:	6a1b      	ldr	r3, [r3, #32]
     c94:	045b      	lsls	r3, r3, #17
     c96:	d408      	bmi.n	caa <EIC_Handler+0x1a>
		//temp2 = 1;
		countEICs++;
	}
	else if(!(porB->IN.reg & PORT_PB14)){	//CW
     c98:	4b08      	ldr	r3, [pc, #32]	; (cbc <EIC_Handler+0x2c>)
     c9a:	6a1b      	ldr	r3, [r3, #32]
     c9c:	045b      	lsls	r3, r3, #17
     c9e:	d408      	bmi.n	cb2 <EIC_Handler+0x22>
		//temp2 = 0;
		countEICs--;
     ca0:	4a07      	ldr	r2, [pc, #28]	; (cc0 <EIC_Handler+0x30>)
     ca2:	6813      	ldr	r3, [r2, #0]
     ca4:	3b01      	subs	r3, #1
     ca6:	6013      	str	r3, [r2, #0]
     ca8:	e003      	b.n	cb2 <EIC_Handler+0x22>
		countEICs++;
     caa:	4a05      	ldr	r2, [pc, #20]	; (cc0 <EIC_Handler+0x30>)
     cac:	6813      	ldr	r3, [r2, #0]
     cae:	3301      	adds	r3, #1
     cb0:	6013      	str	r3, [r2, #0]
	}
	EIC->INTFLAG.reg = 1<<8;	//clear the int flag
     cb2:	2280      	movs	r2, #128	; 0x80
     cb4:	0052      	lsls	r2, r2, #1
     cb6:	4b03      	ldr	r3, [pc, #12]	; (cc4 <EIC_Handler+0x34>)
     cb8:	611a      	str	r2, [r3, #16]
}
     cba:	4770      	bx	lr
     cbc:	41004480 	.word	0x41004480
     cc0:	2000007c 	.word	0x2000007c
     cc4:	40001800 	.word	0x40001800

00000cc8 <TC6_Handler>:
	wait(1);
	porA->OUTSET.reg = 	PORT_PA04;
	
}

void TC6_Handler(void){	//for RPM spd ctrl	200hz
     cc8:	b5f0      	push	{r4, r5, r6, r7, lr}
     cca:	46de      	mov	lr, fp
     ccc:	4657      	mov	r7, sl
     cce:	464e      	mov	r6, r9
     cd0:	4645      	mov	r5, r8
     cd2:	b5e0      	push	{r5, r6, r7, lr}
     cd4:	b087      	sub	sp, #28
	Tc *tc = TC6;
	TcCount8 *tc6 = &tc->COUNT8;
 	Tc *tcc = TC4;
 	TcCount8 *tc4 = &tcc->COUNT8;
	 
	rawSpeed = countEICs * (60*200/400);// raw RPM calculation
     cd6:	4bbc      	ldr	r3, [pc, #752]	; (fc8 <TC6_Handler+0x300>)
     cd8:	681a      	ldr	r2, [r3, #0]
     cda:	0113      	lsls	r3, r2, #4
     cdc:	1a9b      	subs	r3, r3, r2
     cde:	005b      	lsls	r3, r3, #1
     ce0:	4eba      	ldr	r6, [pc, #744]	; (fcc <TC6_Handler+0x304>)
     ce2:	6033      	str	r3, [r6, #0]
	
	////digital filter//////
	filterY = (0.9691*filterY1) + (0.03093*filterX1);
     ce4:	4fba      	ldr	r7, [pc, #744]	; (fd0 <TC6_Handler+0x308>)
     ce6:	6838      	ldr	r0, [r7, #0]
     ce8:	4dba      	ldr	r5, [pc, #744]	; (fd4 <TC6_Handler+0x30c>)
     cea:	682b      	ldr	r3, [r5, #0]
     cec:	469b      	mov	fp, r3
     cee:	4bba      	ldr	r3, [pc, #744]	; (fd8 <TC6_Handler+0x310>)
     cf0:	469a      	mov	sl, r3
     cf2:	4798      	blx	r3
     cf4:	4cb9      	ldr	r4, [pc, #740]	; (fdc <TC6_Handler+0x314>)
     cf6:	4aba      	ldr	r2, [pc, #744]	; (fe0 <TC6_Handler+0x318>)
     cf8:	4bba      	ldr	r3, [pc, #744]	; (fe4 <TC6_Handler+0x31c>)
     cfa:	47a0      	blx	r4
     cfc:	9000      	str	r0, [sp, #0]
     cfe:	9101      	str	r1, [sp, #4]
     d00:	4658      	mov	r0, fp
     d02:	47d0      	blx	sl
     d04:	4ab8      	ldr	r2, [pc, #736]	; (fe8 <TC6_Handler+0x320>)
     d06:	4bb9      	ldr	r3, [pc, #740]	; (fec <TC6_Handler+0x324>)
     d08:	47a0      	blx	r4
     d0a:	0002      	movs	r2, r0
     d0c:	000b      	movs	r3, r1
     d0e:	9800      	ldr	r0, [sp, #0]
     d10:	9901      	ldr	r1, [sp, #4]
     d12:	4cb7      	ldr	r4, [pc, #732]	; (ff0 <TC6_Handler+0x328>)
     d14:	47a0      	blx	r4
     d16:	4bb7      	ldr	r3, [pc, #732]	; (ff4 <TC6_Handler+0x32c>)
     d18:	4798      	blx	r3
     d1a:	4cb7      	ldr	r4, [pc, #732]	; (ff8 <TC6_Handler+0x330>)
     d1c:	6020      	str	r0, [r4, #0]
 	filterY1 = filterY;
     d1e:	6823      	ldr	r3, [r4, #0]
     d20:	603b      	str	r3, [r7, #0]
 	filterX1 = rawSpeed;
     d22:	6830      	ldr	r0, [r6, #0]
     d24:	4bb5      	ldr	r3, [pc, #724]	; (ffc <TC6_Handler+0x334>)
     d26:	4798      	blx	r3
     d28:	6028      	str	r0, [r5, #0]
	filterRawSpeed = filterY;
     d2a:	6820      	ldr	r0, [r4, #0]
     d2c:	4bb4      	ldr	r3, [pc, #720]	; (1000 <TC6_Handler+0x338>)
     d2e:	4798      	blx	r3
     d30:	4bb4      	ldr	r3, [pc, #720]	; (1004 <TC6_Handler+0x33c>)
     d32:	6018      	str	r0, [r3, #0]
 	

	switch(mode){
     d34:	4bb4      	ldr	r3, [pc, #720]	; (1008 <TC6_Handler+0x340>)
     d36:	681b      	ldr	r3, [r3, #0]
     d38:	2b00      	cmp	r3, #0
     d3a:	d00c      	beq.n	d56 <TC6_Handler+0x8e>
     d3c:	2b01      	cmp	r3, #1
     d3e:	d100      	bne.n	d42 <TC6_Handler+0x7a>
     d40:	e0a4      	b.n	e8c <TC6_Handler+0x1c4>
			i++;
 			break;
		 
		 
		default:
		tc4->CC[0].reg = 255-127;
     d42:	4bb2      	ldr	r3, [pc, #712]	; (100c <TC6_Handler+0x344>)
     d44:	2280      	movs	r2, #128	; 0x80
     d46:	761a      	strb	r2, [r3, #24]
		tc4->CC[1].reg = 127;
     d48:	3a01      	subs	r2, #1
     d4a:	765a      	strb	r2, [r3, #25]
		while(tc4->STATUS.bit.SYNCBUSY){}	
     d4c:	001a      	movs	r2, r3
     d4e:	7bd3      	ldrb	r3, [r2, #15]
     d50:	09db      	lsrs	r3, r3, #7
     d52:	d1fc      	bne.n	d4e <TC6_Handler+0x86>
     d54:	e08a      	b.n	e6c <TC6_Handler+0x1a4>
		i = 0;
     d56:	2200      	movs	r2, #0
     d58:	4bad      	ldr	r3, [pc, #692]	; (1010 <TC6_Handler+0x348>)
     d5a:	601a      	str	r2, [r3, #0]
  			errorSpd = keypad - rawSpeed;
     d5c:	4fad      	ldr	r7, [pc, #692]	; (1014 <TC6_Handler+0x34c>)
     d5e:	683b      	ldr	r3, [r7, #0]
     d60:	4a9a      	ldr	r2, [pc, #616]	; (fcc <TC6_Handler+0x304>)
     d62:	6812      	ldr	r2, [r2, #0]
     d64:	1a9b      	subs	r3, r3, r2
     d66:	4cac      	ldr	r4, [pc, #688]	; (1018 <TC6_Handler+0x350>)
     d68:	6023      	str	r3, [r4, #0]
			integral = integral + (Ts * errorSpd);
     d6a:	6820      	ldr	r0, [r4, #0]
     d6c:	4bab      	ldr	r3, [pc, #684]	; (101c <TC6_Handler+0x354>)
     d6e:	469a      	mov	sl, r3
     d70:	681e      	ldr	r6, [r3, #0]
     d72:	4bab      	ldr	r3, [pc, #684]	; (1020 <TC6_Handler+0x358>)
     d74:	469b      	mov	fp, r3
     d76:	681b      	ldr	r3, [r3, #0]
     d78:	4699      	mov	r9, r3
     d7a:	4ba0      	ldr	r3, [pc, #640]	; (ffc <TC6_Handler+0x334>)
     d7c:	4698      	mov	r8, r3
     d7e:	4798      	blx	r3
     d80:	4da8      	ldr	r5, [pc, #672]	; (1024 <TC6_Handler+0x35c>)
     d82:	1c31      	adds	r1, r6, #0
     d84:	47a8      	blx	r5
     d86:	4ea8      	ldr	r6, [pc, #672]	; (1028 <TC6_Handler+0x360>)
     d88:	4649      	mov	r1, r9
     d8a:	47b0      	blx	r6
     d8c:	465b      	mov	r3, fp
     d8e:	6018      	str	r0, [r3, #0]
			Diff = ((errorSpd - errorSpd1) / Ts);
     d90:	6820      	ldr	r0, [r4, #0]
     d92:	4ba6      	ldr	r3, [pc, #664]	; (102c <TC6_Handler+0x364>)
     d94:	4699      	mov	r9, r3
     d96:	681b      	ldr	r3, [r3, #0]
     d98:	4652      	mov	r2, sl
     d9a:	6812      	ldr	r2, [r2, #0]
     d9c:	4692      	mov	sl, r2
     d9e:	1ac0      	subs	r0, r0, r3
     da0:	47c0      	blx	r8
     da2:	4651      	mov	r1, sl
     da4:	4ba2      	ldr	r3, [pc, #648]	; (1030 <TC6_Handler+0x368>)
     da6:	4798      	blx	r3
     da8:	4ba2      	ldr	r3, [pc, #648]	; (1034 <TC6_Handler+0x36c>)
     daa:	6018      	str	r0, [r3, #0]
			y = (Kps * errorSpd) + (Kis * integral) + (Kds * Diff) + (Kffs * keypad);
     dac:	6820      	ldr	r0, [r4, #0]
     dae:	4aa2      	ldr	r2, [pc, #648]	; (1038 <TC6_Handler+0x370>)
     db0:	6812      	ldr	r2, [r2, #0]
     db2:	9200      	str	r2, [sp, #0]
     db4:	4aa1      	ldr	r2, [pc, #644]	; (103c <TC6_Handler+0x374>)
     db6:	6812      	ldr	r2, [r2, #0]
     db8:	4692      	mov	sl, r2
     dba:	465a      	mov	r2, fp
     dbc:	6812      	ldr	r2, [r2, #0]
     dbe:	4693      	mov	fp, r2
     dc0:	4a9f      	ldr	r2, [pc, #636]	; (1040 <TC6_Handler+0x378>)
     dc2:	6812      	ldr	r2, [r2, #0]
     dc4:	9203      	str	r2, [sp, #12]
     dc6:	681b      	ldr	r3, [r3, #0]
     dc8:	9304      	str	r3, [sp, #16]
     dca:	683f      	ldr	r7, [r7, #0]
     dcc:	9705      	str	r7, [sp, #20]
     dce:	4b9d      	ldr	r3, [pc, #628]	; (1044 <TC6_Handler+0x37c>)
     dd0:	681f      	ldr	r7, [r3, #0]
     dd2:	47c0      	blx	r8
     dd4:	9900      	ldr	r1, [sp, #0]
     dd6:	47a8      	blx	r5
     dd8:	9000      	str	r0, [sp, #0]
     dda:	4659      	mov	r1, fp
     ddc:	4650      	mov	r0, sl
     dde:	47a8      	blx	r5
     de0:	1c01      	adds	r1, r0, #0
     de2:	9800      	ldr	r0, [sp, #0]
     de4:	47b0      	blx	r6
     de6:	9000      	str	r0, [sp, #0]
     de8:	9904      	ldr	r1, [sp, #16]
     dea:	9803      	ldr	r0, [sp, #12]
     dec:	47a8      	blx	r5
     dee:	1c01      	adds	r1, r0, #0
     df0:	9800      	ldr	r0, [sp, #0]
     df2:	47b0      	blx	r6
     df4:	9000      	str	r0, [sp, #0]
     df6:	9805      	ldr	r0, [sp, #20]
     df8:	47c0      	blx	r8
     dfa:	1c39      	adds	r1, r7, #0
     dfc:	47a8      	blx	r5
     dfe:	1c01      	adds	r1, r0, #0
     e00:	9800      	ldr	r0, [sp, #0]
     e02:	47b0      	blx	r6
     e04:	4b90      	ldr	r3, [pc, #576]	; (1048 <TC6_Handler+0x380>)
     e06:	6018      	str	r0, [r3, #0]
			errorSpd1 = errorSpd;
     e08:	6822      	ldr	r2, [r4, #0]
     e0a:	4649      	mov	r1, r9
     e0c:	600a      	str	r2, [r1, #0]
			if(y > 5000){
     e0e:	6818      	ldr	r0, [r3, #0]
     e10:	498e      	ldr	r1, [pc, #568]	; (104c <TC6_Handler+0x384>)
     e12:	4b8f      	ldr	r3, [pc, #572]	; (1050 <TC6_Handler+0x388>)
     e14:	4798      	blx	r3
     e16:	2800      	cmp	r0, #0
     e18:	d002      	beq.n	e20 <TC6_Handler+0x158>
				y = 5000;
     e1a:	4a8c      	ldr	r2, [pc, #560]	; (104c <TC6_Handler+0x384>)
     e1c:	4b8a      	ldr	r3, [pc, #552]	; (1048 <TC6_Handler+0x380>)
     e1e:	601a      	str	r2, [r3, #0]
			if(y < 0){
     e20:	4b89      	ldr	r3, [pc, #548]	; (1048 <TC6_Handler+0x380>)
     e22:	6818      	ldr	r0, [r3, #0]
     e24:	2100      	movs	r1, #0
     e26:	4b8b      	ldr	r3, [pc, #556]	; (1054 <TC6_Handler+0x38c>)
     e28:	4798      	blx	r3
     e2a:	2800      	cmp	r0, #0
     e2c:	d12a      	bne.n	e84 <TC6_Handler+0x1bc>
			normY = (((y * 128)/5000)+127);
     e2e:	4b86      	ldr	r3, [pc, #536]	; (1048 <TC6_Handler+0x380>)
     e30:	6818      	ldr	r0, [r3, #0]
     e32:	2186      	movs	r1, #134	; 0x86
     e34:	05c9      	lsls	r1, r1, #23
     e36:	4b7b      	ldr	r3, [pc, #492]	; (1024 <TC6_Handler+0x35c>)
     e38:	4798      	blx	r3
     e3a:	4984      	ldr	r1, [pc, #528]	; (104c <TC6_Handler+0x384>)
     e3c:	4b7c      	ldr	r3, [pc, #496]	; (1030 <TC6_Handler+0x368>)
     e3e:	4798      	blx	r3
     e40:	4985      	ldr	r1, [pc, #532]	; (1058 <TC6_Handler+0x390>)
     e42:	4b79      	ldr	r3, [pc, #484]	; (1028 <TC6_Handler+0x360>)
     e44:	4798      	blx	r3
     e46:	4b6e      	ldr	r3, [pc, #440]	; (1000 <TC6_Handler+0x338>)
     e48:	4798      	blx	r3
     e4a:	4b84      	ldr	r3, [pc, #528]	; (105c <TC6_Handler+0x394>)
     e4c:	6018      	str	r0, [r3, #0]
 			tc4->CC[0].reg = (normY);
     e4e:	681a      	ldr	r2, [r3, #0]
     e50:	b2d2      	uxtb	r2, r2
     e52:	496e      	ldr	r1, [pc, #440]	; (100c <TC6_Handler+0x344>)
     e54:	760a      	strb	r2, [r1, #24]
 			tc4->CC[1].reg = 255-normY;
     e56:	681b      	ldr	r3, [r3, #0]
     e58:	43db      	mvns	r3, r3
     e5a:	b2db      	uxtb	r3, r3
     e5c:	764b      	strb	r3, [r1, #25]
 			while(tc4->STATUS.bit.SYNCBUSY){}	//wait for sync of disable
     e5e:	000a      	movs	r2, r1
     e60:	7bd3      	ldrb	r3, [r2, #15]
     e62:	09db      	lsrs	r3, r3, #7
     e64:	d1fc      	bne.n	e60 <TC6_Handler+0x198>
			countEICs = 0;
     e66:	2200      	movs	r2, #0
     e68:	4b57      	ldr	r3, [pc, #348]	; (fc8 <TC6_Handler+0x300>)
     e6a:	601a      	str	r2, [r3, #0]
		
		
	}
	
	
	tc6->INTFLAG.bit.OVF = 1;	//clear the interrupt
     e6c:	4a7c      	ldr	r2, [pc, #496]	; (1060 <TC6_Handler+0x398>)
     e6e:	7b93      	ldrb	r3, [r2, #14]
     e70:	2101      	movs	r1, #1
     e72:	430b      	orrs	r3, r1
     e74:	7393      	strb	r3, [r2, #14]
}
     e76:	b007      	add	sp, #28
     e78:	bc3c      	pop	{r2, r3, r4, r5}
     e7a:	4690      	mov	r8, r2
     e7c:	4699      	mov	r9, r3
     e7e:	46a2      	mov	sl, r4
     e80:	46ab      	mov	fp, r5
     e82:	bdf0      	pop	{r4, r5, r6, r7, pc}
				y = 0;
     e84:	2200      	movs	r2, #0
     e86:	4b70      	ldr	r3, [pc, #448]	; (1048 <TC6_Handler+0x380>)
     e88:	601a      	str	r2, [r3, #0]
     e8a:	e7d0      	b.n	e2e <TC6_Handler+0x166>
			key_position = keypad*400/360; //normalize keypad angle input
     e8c:	4b61      	ldr	r3, [pc, #388]	; (1014 <TC6_Handler+0x34c>)
     e8e:	681b      	ldr	r3, [r3, #0]
     e90:	20c8      	movs	r0, #200	; 0xc8
     e92:	0040      	lsls	r0, r0, #1
     e94:	4358      	muls	r0, r3
     e96:	21b4      	movs	r1, #180	; 0xb4
     e98:	0049      	lsls	r1, r1, #1
     e9a:	4b72      	ldr	r3, [pc, #456]	; (1064 <TC6_Handler+0x39c>)
     e9c:	4798      	blx	r3
     e9e:	4b57      	ldr	r3, [pc, #348]	; (ffc <TC6_Handler+0x334>)
     ea0:	4798      	blx	r3
     ea2:	4b71      	ldr	r3, [pc, #452]	; (1068 <TC6_Handler+0x3a0>)
     ea4:	6018      	str	r0, [r3, #0]
		 	if(i == 0){
     ea6:	4b5a      	ldr	r3, [pc, #360]	; (1010 <TC6_Handler+0x348>)
     ea8:	681b      	ldr	r3, [r3, #0]
     eaa:	2b00      	cmp	r3, #0
     eac:	d102      	bne.n	eb4 <TC6_Handler+0x1ec>
 				countEICs = 0;
     eae:	2200      	movs	r2, #0
     eb0:	4b45      	ldr	r3, [pc, #276]	; (fc8 <TC6_Handler+0x300>)
     eb2:	601a      	str	r2, [r3, #0]
 			errorPos = countEICs-(int)key_position;
     eb4:	4d44      	ldr	r5, [pc, #272]	; (fc8 <TC6_Handler+0x300>)
     eb6:	682c      	ldr	r4, [r5, #0]
     eb8:	4b6b      	ldr	r3, [pc, #428]	; (1068 <TC6_Handler+0x3a0>)
     eba:	6818      	ldr	r0, [r3, #0]
     ebc:	4b50      	ldr	r3, [pc, #320]	; (1000 <TC6_Handler+0x338>)
     ebe:	4798      	blx	r3
     ec0:	1a20      	subs	r0, r4, r0
     ec2:	4c4e      	ldr	r4, [pc, #312]	; (ffc <TC6_Handler+0x334>)
     ec4:	47a0      	blx	r4
     ec6:	4b69      	ldr	r3, [pc, #420]	; (106c <TC6_Handler+0x3a4>)
     ec8:	6018      	str	r0, [r3, #0]
 			temp = ((float)countEICs / 400);
     eca:	6828      	ldr	r0, [r5, #0]
     ecc:	47a0      	blx	r4
     ece:	4968      	ldr	r1, [pc, #416]	; (1070 <TC6_Handler+0x3a8>)
     ed0:	4b57      	ldr	r3, [pc, #348]	; (1030 <TC6_Handler+0x368>)
     ed2:	4798      	blx	r3
     ed4:	4b67      	ldr	r3, [pc, #412]	; (1074 <TC6_Handler+0x3ac>)
     ed6:	6018      	str	r0, [r3, #0]
 			if(temp < 0){
     ed8:	6818      	ldr	r0, [r3, #0]
     eda:	2100      	movs	r1, #0
     edc:	4b5d      	ldr	r3, [pc, #372]	; (1054 <TC6_Handler+0x38c>)
     ede:	4798      	blx	r3
     ee0:	2800      	cmp	r0, #0
     ee2:	d167      	bne.n	fb4 <TC6_Handler+0x2ec>
 			else if(temp != 0){
     ee4:	4b63      	ldr	r3, [pc, #396]	; (1074 <TC6_Handler+0x3ac>)
     ee6:	6818      	ldr	r0, [r3, #0]
     ee8:	2100      	movs	r1, #0
     eea:	4b63      	ldr	r3, [pc, #396]	; (1078 <TC6_Handler+0x3b0>)
     eec:	4798      	blx	r3
     eee:	2800      	cmp	r0, #0
     ef0:	d10a      	bne.n	f08 <TC6_Handler+0x240>
 				errorDisplay = (countEICs*360)/400;
     ef2:	4b35      	ldr	r3, [pc, #212]	; (fc8 <TC6_Handler+0x300>)
     ef4:	681b      	ldr	r3, [r3, #0]
     ef6:	3069      	adds	r0, #105	; 0x69
     ef8:	30ff      	adds	r0, #255	; 0xff
     efa:	4358      	muls	r0, r3
     efc:	21c8      	movs	r1, #200	; 0xc8
     efe:	0049      	lsls	r1, r1, #1
     f00:	4b58      	ldr	r3, [pc, #352]	; (1064 <TC6_Handler+0x39c>)
     f02:	4798      	blx	r3
     f04:	4b5d      	ldr	r3, [pc, #372]	; (107c <TC6_Handler+0x3b4>)
     f06:	6018      	str	r0, [r3, #0]
 			integralx = integralx + (Ts * errorPos);
     f08:	4b44      	ldr	r3, [pc, #272]	; (101c <TC6_Handler+0x354>)
     f0a:	4699      	mov	r9, r3
     f0c:	6818      	ldr	r0, [r3, #0]
     f0e:	4c57      	ldr	r4, [pc, #348]	; (106c <TC6_Handler+0x3a4>)
     f10:	6821      	ldr	r1, [r4, #0]
     f12:	4b5b      	ldr	r3, [pc, #364]	; (1080 <TC6_Handler+0x3b8>)
     f14:	4698      	mov	r8, r3
     f16:	681f      	ldr	r7, [r3, #0]
     f18:	4d42      	ldr	r5, [pc, #264]	; (1024 <TC6_Handler+0x35c>)
     f1a:	47a8      	blx	r5
     f1c:	4e42      	ldr	r6, [pc, #264]	; (1028 <TC6_Handler+0x360>)
     f1e:	1c39      	adds	r1, r7, #0
     f20:	47b0      	blx	r6
     f22:	4643      	mov	r3, r8
     f24:	6018      	str	r0, [r3, #0]
 			Diffx = ((errorPos - errorPos1) / Ts);
     f26:	6820      	ldr	r0, [r4, #0]
     f28:	4f56      	ldr	r7, [pc, #344]	; (1084 <TC6_Handler+0x3bc>)
     f2a:	6839      	ldr	r1, [r7, #0]
     f2c:	464b      	mov	r3, r9
     f2e:	681b      	ldr	r3, [r3, #0]
     f30:	4699      	mov	r9, r3
     f32:	4b55      	ldr	r3, [pc, #340]	; (1088 <TC6_Handler+0x3c0>)
     f34:	4798      	blx	r3
     f36:	4649      	mov	r1, r9
     f38:	4b3d      	ldr	r3, [pc, #244]	; (1030 <TC6_Handler+0x368>)
     f3a:	4798      	blx	r3
     f3c:	4b53      	ldr	r3, [pc, #332]	; (108c <TC6_Handler+0x3c4>)
     f3e:	6018      	str	r0, [r3, #0]
 			x = (Kpp * errorPos) + (Kip * integralx) + (Kdp * Diffx);
     f40:	4a53      	ldr	r2, [pc, #332]	; (1090 <TC6_Handler+0x3c8>)
     f42:	6810      	ldr	r0, [r2, #0]
     f44:	6821      	ldr	r1, [r4, #0]
     f46:	4a53      	ldr	r2, [pc, #332]	; (1094 <TC6_Handler+0x3cc>)
     f48:	6812      	ldr	r2, [r2, #0]
     f4a:	4692      	mov	sl, r2
     f4c:	4642      	mov	r2, r8
     f4e:	6812      	ldr	r2, [r2, #0]
     f50:	4693      	mov	fp, r2
     f52:	4a51      	ldr	r2, [pc, #324]	; (1098 <TC6_Handler+0x3d0>)
     f54:	6812      	ldr	r2, [r2, #0]
     f56:	4690      	mov	r8, r2
     f58:	681b      	ldr	r3, [r3, #0]
     f5a:	4699      	mov	r9, r3
     f5c:	47a8      	blx	r5
     f5e:	9000      	str	r0, [sp, #0]
     f60:	4659      	mov	r1, fp
     f62:	4650      	mov	r0, sl
     f64:	47a8      	blx	r5
     f66:	1c01      	adds	r1, r0, #0
     f68:	9800      	ldr	r0, [sp, #0]
     f6a:	47b0      	blx	r6
     f6c:	9000      	str	r0, [sp, #0]
     f6e:	4649      	mov	r1, r9
     f70:	4640      	mov	r0, r8
     f72:	47a8      	blx	r5
     f74:	1c01      	adds	r1, r0, #0
     f76:	9800      	ldr	r0, [sp, #0]
     f78:	47b0      	blx	r6
     f7a:	4b48      	ldr	r3, [pc, #288]	; (109c <TC6_Handler+0x3d4>)
     f7c:	6018      	str	r0, [r3, #0]
 			x_int = x;
     f7e:	6818      	ldr	r0, [r3, #0]
     f80:	4b1f      	ldr	r3, [pc, #124]	; (1000 <TC6_Handler+0x338>)
     f82:	4798      	blx	r3
     f84:	4a46      	ldr	r2, [pc, #280]	; (10a0 <TC6_Handler+0x3d8>)
     f86:	6010      	str	r0, [r2, #0]
 			errorPos1 = errorPos;
     f88:	6823      	ldr	r3, [r4, #0]
     f8a:	603b      	str	r3, [r7, #0]
 			tc4->CC[0].reg = 255-(x_int+127);
     f8c:	6811      	ldr	r1, [r2, #0]
     f8e:	2380      	movs	r3, #128	; 0x80
     f90:	425b      	negs	r3, r3
     f92:	1a5b      	subs	r3, r3, r1
     f94:	b2db      	uxtb	r3, r3
     f96:	491d      	ldr	r1, [pc, #116]	; (100c <TC6_Handler+0x344>)
     f98:	760b      	strb	r3, [r1, #24]
 			tc4->CC[1].reg = (x_int+127);
     f9a:	6813      	ldr	r3, [r2, #0]
     f9c:	337f      	adds	r3, #127	; 0x7f
     f9e:	b2db      	uxtb	r3, r3
     fa0:	764b      	strb	r3, [r1, #25]
 			while(tc4->STATUS.bit.SYNCBUSY){}
     fa2:	000a      	movs	r2, r1
     fa4:	7bd3      	ldrb	r3, [r2, #15]
     fa6:	09db      	lsrs	r3, r3, #7
     fa8:	d1fc      	bne.n	fa4 <TC6_Handler+0x2dc>
			i++;
     faa:	4a19      	ldr	r2, [pc, #100]	; (1010 <TC6_Handler+0x348>)
     fac:	6813      	ldr	r3, [r2, #0]
     fae:	3301      	adds	r3, #1
     fb0:	6013      	str	r3, [r2, #0]
 			break;
     fb2:	e75b      	b.n	e6c <TC6_Handler+0x1a4>
 				errorDisplay = (countEICs*360)/400 * -1;
     fb4:	682b      	ldr	r3, [r5, #0]
     fb6:	483b      	ldr	r0, [pc, #236]	; (10a4 <TC6_Handler+0x3dc>)
     fb8:	4358      	muls	r0, r3
     fba:	21c8      	movs	r1, #200	; 0xc8
     fbc:	0049      	lsls	r1, r1, #1
     fbe:	4b29      	ldr	r3, [pc, #164]	; (1064 <TC6_Handler+0x39c>)
     fc0:	4798      	blx	r3
     fc2:	4b2e      	ldr	r3, [pc, #184]	; (107c <TC6_Handler+0x3b4>)
     fc4:	6018      	str	r0, [r3, #0]
     fc6:	e79f      	b.n	f08 <TC6_Handler+0x240>
     fc8:	2000007c 	.word	0x2000007c
     fcc:	200000d4 	.word	0x200000d4
     fd0:	20000094 	.word	0x20000094
     fd4:	2000008c 	.word	0x2000008c
     fd8:	00002dc1 	.word	0x00002dc1
     fdc:	000028c1 	.word	0x000028c1
     fe0:	00d1b717 	.word	0x00d1b717
     fe4:	3fef02de 	.word	0x3fef02de
     fe8:	29dc725c 	.word	0x29dc725c
     fec:	3f9fac1d 	.word	0x3f9fac1d
     ff0:	000022a1 	.word	0x000022a1
     ff4:	00002e65 	.word	0x00002e65
     ff8:	20000090 	.word	0x20000090
     ffc:	00002201 	.word	0x00002201
    1000:	000021c1 	.word	0x000021c1
    1004:	20000088 	.word	0x20000088
    1008:	20000034 	.word	0x20000034
    100c:	42003000 	.word	0x42003000
    1010:	20000098 	.word	0x20000098
    1014:	200000dc 	.word	0x200000dc
    1018:	200000cc 	.word	0x200000cc
    101c:	20000024 	.word	0x20000024
    1020:	200000a0 	.word	0x200000a0
    1024:	00001c49 	.word	0x00001c49
    1028:	00001545 	.word	0x00001545
    102c:	20000084 	.word	0x20000084
    1030:	00001869 	.word	0x00001869
    1034:	200000e4 	.word	0x200000e4
    1038:	2000001c 	.word	0x2000001c
    103c:	20000014 	.word	0x20000014
    1040:	20000008 	.word	0x20000008
    1044:	2000000c 	.word	0x2000000c
    1048:	200000e8 	.word	0x200000e8
    104c:	459c4000 	.word	0x459c4000
    1050:	0000151d 	.word	0x0000151d
    1054:	000014f5 	.word	0x000014f5
    1058:	42fe0000 	.word	0x42fe0000
    105c:	200000f0 	.word	0x200000f0
    1060:	42003800 	.word	0x42003800
    1064:	000012f9 	.word	0x000012f9
    1068:	200000a8 	.word	0x200000a8
    106c:	200000ec 	.word	0x200000ec
    1070:	43c80000 	.word	0x43c80000
    1074:	200000d0 	.word	0x200000d0
    1078:	000014e9 	.word	0x000014e9
    107c:	200000b8 	.word	0x200000b8
    1080:	200000a4 	.word	0x200000a4
    1084:	20000080 	.word	0x20000080
    1088:	00001e89 	.word	0x00001e89
    108c:	200000e0 	.word	0x200000e0
    1090:	20000018 	.word	0x20000018
    1094:	20000010 	.word	0x20000010
    1098:	20000004 	.word	0x20000004
    109c:	200000bc 	.word	0x200000bc
    10a0:	200000b4 	.word	0x200000b4
    10a4:	fffffe98 	.word	0xfffffe98

000010a8 <convert>:

void convert(int t){
    10a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    10aa:	46ce      	mov	lr, r9
    10ac:	4647      	mov	r7, r8
    10ae:	b580      	push	{r7, lr}
    10b0:	b083      	sub	sp, #12
	volatile int a = t;
    10b2:	9001      	str	r0, [sp, #4]
	//int a = 4312;   // our value
	//volatile char arrADC[4];
	//volatile char *arrPtr;
	//arrPtr = arrADC;
	int m = 1;  //counter
	int n = 1000;    //increment to divisor
    10b4:	23fa      	movs	r3, #250	; 0xfa
    10b6:	009b      	lsls	r3, r3, #2
    10b8:	4699      	mov	r9, r3
	int m = 1;  //counter
    10ba:	2401      	movs	r4, #1
	int j = 0;  //array counter
    10bc:	2600      	movs	r6, #0
	int i = 1000;   //divisor
    10be:	001d      	movs	r5, r3

	while(j <= 3){
		int b = a % i;
    10c0:	4f34      	ldr	r7, [pc, #208]	; (1194 <convert+0xec>)
    10c2:	e058      	b.n	1176 <convert+0xce>
				i = 100;
				n = 100;
			}
			if(j == 2){
				i = 10;
				n = 10;
    10c4:	230a      	movs	r3, #10
    10c6:	4699      	mov	r9, r3
			m = 1;
    10c8:	2401      	movs	r4, #1
				i = 10;
    10ca:	250a      	movs	r5, #10
    10cc:	e053      	b.n	1176 <convert+0xce>
			int p = (m-1);
    10ce:	3c01      	subs	r4, #1
			switch(p) {
    10d0:	2c09      	cmp	r4, #9
    10d2:	d845      	bhi.n	1160 <convert+0xb8>
    10d4:	00a3      	lsls	r3, r4, #2
    10d6:	4a30      	ldr	r2, [pc, #192]	; (1198 <convert+0xf0>)
    10d8:	58d3      	ldr	r3, [r2, r3]
    10da:	469f      	mov	pc, r3
				ConArray[j++] = '0';
    10dc:	2230      	movs	r2, #48	; 0x30
    10de:	4b2f      	ldr	r3, [pc, #188]	; (119c <convert+0xf4>)
    10e0:	559a      	strb	r2, [r3, r6]
    10e2:	3601      	adds	r6, #1
			a = a - (n*(m-1));
    10e4:	9b01      	ldr	r3, [sp, #4]
    10e6:	464a      	mov	r2, r9
    10e8:	4354      	muls	r4, r2
    10ea:	1b1c      	subs	r4, r3, r4
    10ec:	9401      	str	r4, [sp, #4]
			if(j == 1){
    10ee:	2e01      	cmp	r6, #1
    10f0:	d03b      	beq.n	116a <convert+0xc2>
			if(j == 2){
    10f2:	2e02      	cmp	r6, #2
    10f4:	d0e6      	beq.n	10c4 <convert+0x1c>
			m = 1;
    10f6:	2401      	movs	r4, #1
			}
			if(j == 3){
    10f8:	2e03      	cmp	r6, #3
    10fa:	d13a      	bne.n	1172 <convert+0xca>
				i = 1;
				n = 1;
    10fc:	2301      	movs	r3, #1
    10fe:	4699      	mov	r9, r3
			m = 1;
    1100:	2401      	movs	r4, #1
				i = 1;
    1102:	2501      	movs	r5, #1
    1104:	e037      	b.n	1176 <convert+0xce>
				ConArray[j++] = '1';
    1106:	2231      	movs	r2, #49	; 0x31
    1108:	4b24      	ldr	r3, [pc, #144]	; (119c <convert+0xf4>)
    110a:	559a      	strb	r2, [r3, r6]
    110c:	3601      	adds	r6, #1
				break;
    110e:	e7e9      	b.n	10e4 <convert+0x3c>
				ConArray[j++] = '2';
    1110:	2232      	movs	r2, #50	; 0x32
    1112:	4b22      	ldr	r3, [pc, #136]	; (119c <convert+0xf4>)
    1114:	559a      	strb	r2, [r3, r6]
    1116:	3601      	adds	r6, #1
				break;
    1118:	e7e4      	b.n	10e4 <convert+0x3c>
				ConArray[j++] = '3';
    111a:	2233      	movs	r2, #51	; 0x33
    111c:	4b1f      	ldr	r3, [pc, #124]	; (119c <convert+0xf4>)
    111e:	559a      	strb	r2, [r3, r6]
    1120:	3601      	adds	r6, #1
				break;
    1122:	e7df      	b.n	10e4 <convert+0x3c>
				ConArray[j++] = '4';
    1124:	2234      	movs	r2, #52	; 0x34
    1126:	4b1d      	ldr	r3, [pc, #116]	; (119c <convert+0xf4>)
    1128:	559a      	strb	r2, [r3, r6]
    112a:	3601      	adds	r6, #1
				break;
    112c:	e7da      	b.n	10e4 <convert+0x3c>
				ConArray[j++] = '5';
    112e:	2335      	movs	r3, #53	; 0x35
    1130:	4a1a      	ldr	r2, [pc, #104]	; (119c <convert+0xf4>)
    1132:	5593      	strb	r3, [r2, r6]
    1134:	3601      	adds	r6, #1
				break;
    1136:	e7d5      	b.n	10e4 <convert+0x3c>
				ConArray[j++] = '6';
    1138:	2336      	movs	r3, #54	; 0x36
    113a:	4a18      	ldr	r2, [pc, #96]	; (119c <convert+0xf4>)
    113c:	5593      	strb	r3, [r2, r6]
    113e:	3601      	adds	r6, #1
				break;
    1140:	e7d0      	b.n	10e4 <convert+0x3c>
				ConArray[j++] = '7';
    1142:	2337      	movs	r3, #55	; 0x37
    1144:	4a15      	ldr	r2, [pc, #84]	; (119c <convert+0xf4>)
    1146:	5593      	strb	r3, [r2, r6]
    1148:	3601      	adds	r6, #1
				break;
    114a:	e7cb      	b.n	10e4 <convert+0x3c>
				ConArray[j++] = '8';
    114c:	2338      	movs	r3, #56	; 0x38
    114e:	4a13      	ldr	r2, [pc, #76]	; (119c <convert+0xf4>)
    1150:	5593      	strb	r3, [r2, r6]
    1152:	3601      	adds	r6, #1
				break;
    1154:	e7c6      	b.n	10e4 <convert+0x3c>
				ConArray[j++] = '9';
    1156:	2339      	movs	r3, #57	; 0x39
    1158:	4a10      	ldr	r2, [pc, #64]	; (119c <convert+0xf4>)
    115a:	5593      	strb	r3, [r2, r6]
    115c:	3601      	adds	r6, #1
				break;
    115e:	e7c1      	b.n	10e4 <convert+0x3c>
				ConArray[j++] = 'A';
    1160:	2341      	movs	r3, #65	; 0x41
    1162:	4a0e      	ldr	r2, [pc, #56]	; (119c <convert+0xf4>)
    1164:	5593      	strb	r3, [r2, r6]
    1166:	3601      	adds	r6, #1
				break;
    1168:	e7bc      	b.n	10e4 <convert+0x3c>
			m = 1;
    116a:	0034      	movs	r4, r6
				n = 100;
    116c:	2364      	movs	r3, #100	; 0x64
    116e:	4699      	mov	r9, r3
				i = 100;
    1170:	2564      	movs	r5, #100	; 0x64
	while(j <= 3){
    1172:	2e03      	cmp	r6, #3
    1174:	dc09      	bgt.n	118a <convert+0xe2>
		int b = a % i;
    1176:	9801      	ldr	r0, [sp, #4]
		if(b == a) {
    1178:	9b01      	ldr	r3, [sp, #4]
    117a:	4698      	mov	r8, r3
		int b = a % i;
    117c:	0029      	movs	r1, r5
    117e:	47b8      	blx	r7
		if(b == a) {
    1180:	4541      	cmp	r1, r8
    1182:	d0a4      	beq.n	10ce <convert+0x26>
			}
		}
		else{
			m++;
    1184:	3401      	adds	r4, #1
			i = i + n;
    1186:	444d      	add	r5, r9
    1188:	e7f3      	b.n	1172 <convert+0xca>
		}
	}
}
    118a:	b003      	add	sp, #12
    118c:	bc0c      	pop	{r2, r3}
    118e:	4690      	mov	r8, r2
    1190:	4699      	mov	r9, r3
    1192:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1194:	000014c5 	.word	0x000014c5
    1198:	00003020 	.word	0x00003020
    119c:	200000c8 	.word	0x200000c8

000011a0 <display>:
	int i = 0;
	Port *ports = PORT_INSTS;
	PortGroup *porA = &(ports->Group[0]);
	PortGroup *porB = &(ports->Group[1]);
	
	switch(*a){
    11a0:	7803      	ldrb	r3, [r0, #0]
    11a2:	3b30      	subs	r3, #48	; 0x30
    11a4:	b2da      	uxtb	r2, r3
    11a6:	2a09      	cmp	r2, #9
    11a8:	d840      	bhi.n	122c <display+0x8c>
    11aa:	0093      	lsls	r3, r2, #2
    11ac:	4a22      	ldr	r2, [pc, #136]	; (1238 <display+0x98>)
    11ae:	58d3      	ldr	r3, [r2, r3]
    11b0:	469f      	mov	pc, r3
		
		case '0':
		porB -> OUTSET.reg = PORT_PB07 | PORT_PB06;//display "0"
    11b2:	4b22      	ldr	r3, [pc, #136]	; (123c <display+0x9c>)
    11b4:	22c0      	movs	r2, #192	; 0xc0
    11b6:	619a      	str	r2, [r3, #24]
		porB -> OUTCLR.reg = PORT_PB00 | PORT_PB01 | PORT_PB02 | PORT_PB03 | PORT_PB04 | PORT_PB05;//display "0"
    11b8:	3a81      	subs	r2, #129	; 0x81
    11ba:	615a      	str	r2, [r3, #20]
		default:
		porB -> OUTSET.reg = PORT_PB03 | PORT_PB07;//display "A"
		porB -> OUTCLR.reg = PORT_PB00 | PORT_PB01 | PORT_PB02 | PORT_PB04 | PORT_PB05 | PORT_PB06;//display "A"
		break;
	}
    11bc:	4770      	bx	lr
		porB -> OUTSET.reg = PORT_PB00 | PORT_PB03 | PORT_PB04 | PORT_PB05 | PORT_PB06 | PORT_PB07;//display "1"
    11be:	4b1f      	ldr	r3, [pc, #124]	; (123c <display+0x9c>)
    11c0:	22f9      	movs	r2, #249	; 0xf9
    11c2:	619a      	str	r2, [r3, #24]
		porB -> OUTCLR.reg = PORT_PB01 | PORT_PB02;//display "1"
    11c4:	3af3      	subs	r2, #243	; 0xf3
    11c6:	615a      	str	r2, [r3, #20]
		break;
    11c8:	e7f8      	b.n	11bc <display+0x1c>
		porB -> OUTSET.reg =  PORT_PB02 | PORT_PB05 | PORT_PB07;//display "2"
    11ca:	4b1c      	ldr	r3, [pc, #112]	; (123c <display+0x9c>)
    11cc:	22a4      	movs	r2, #164	; 0xa4
    11ce:	619a      	str	r2, [r3, #24]
		porB -> OUTCLR.reg = PORT_PB00 | PORT_PB01 | PORT_PB03 | PORT_PB04 | PORT_PB06;//display "2"
    11d0:	3a49      	subs	r2, #73	; 0x49
    11d2:	615a      	str	r2, [r3, #20]
		break;
    11d4:	e7f2      	b.n	11bc <display+0x1c>
		porB -> OUTSET.reg = PORT_PB04 | PORT_PB05 | PORT_PB07;//display "3"
    11d6:	4b19      	ldr	r3, [pc, #100]	; (123c <display+0x9c>)
    11d8:	22b0      	movs	r2, #176	; 0xb0
    11da:	619a      	str	r2, [r3, #24]
		porB -> OUTCLR.reg = PORT_PB00 | PORT_PB01 | PORT_PB02 | PORT_PB03 | PORT_PB06;//display "3"
    11dc:	3a61      	subs	r2, #97	; 0x61
    11de:	615a      	str	r2, [r3, #20]
		break;
    11e0:	e7ec      	b.n	11bc <display+0x1c>
		porB -> OUTSET.reg = PORT_PB00 | PORT_PB03 | PORT_PB04 | PORT_PB07;//display "4"
    11e2:	4b16      	ldr	r3, [pc, #88]	; (123c <display+0x9c>)
    11e4:	2299      	movs	r2, #153	; 0x99
    11e6:	619a      	str	r2, [r3, #24]
		porB -> OUTCLR.reg = PORT_PB01 | PORT_PB02 | PORT_PB05 | PORT_PB06;//display "4"
    11e8:	3a33      	subs	r2, #51	; 0x33
    11ea:	615a      	str	r2, [r3, #20]
		break;
    11ec:	e7e6      	b.n	11bc <display+0x1c>
		porB -> OUTSET.reg = PORT_PB01 | PORT_PB04 | PORT_PB07;//display "5"
    11ee:	4b13      	ldr	r3, [pc, #76]	; (123c <display+0x9c>)
    11f0:	2292      	movs	r2, #146	; 0x92
    11f2:	619a      	str	r2, [r3, #24]
		porB -> OUTCLR.reg = PORT_PB00 | PORT_PB02 | PORT_PB03 | PORT_PB05 | PORT_PB06;//display "5"
    11f4:	3a25      	subs	r2, #37	; 0x25
    11f6:	615a      	str	r2, [r3, #20]
		break;
    11f8:	e7e0      	b.n	11bc <display+0x1c>
		porB -> OUTCLR.reg = PORT_PB00 | PORT_PB02 | PORT_PB03 | PORT_PB04 | PORT_PB05 | PORT_PB06;//display "6"
    11fa:	4b10      	ldr	r3, [pc, #64]	; (123c <display+0x9c>)
    11fc:	227d      	movs	r2, #125	; 0x7d
    11fe:	615a      	str	r2, [r3, #20]
		porB -> OUTSET.reg = PORT_PB01 | PORT_PB07;//display "6"
    1200:	3205      	adds	r2, #5
    1202:	619a      	str	r2, [r3, #24]
		break;
    1204:	e7da      	b.n	11bc <display+0x1c>
		porB -> OUTCLR.reg = PORT_PB00 | PORT_PB01 | PORT_PB02;//display "7"
    1206:	4b0d      	ldr	r3, [pc, #52]	; (123c <display+0x9c>)
    1208:	2207      	movs	r2, #7
    120a:	615a      	str	r2, [r3, #20]
		porB -> OUTSET.reg = PORT_PB03 | PORT_PB04| PORT_PB05 | PORT_PB06 | PORT_PB07;//display "7"
    120c:	32f1      	adds	r2, #241	; 0xf1
    120e:	619a      	str	r2, [r3, #24]
		break;
    1210:	e7d4      	b.n	11bc <display+0x1c>
		porB -> OUTCLR.reg = PORT_PB00 | PORT_PB01 | PORT_PB02 | PORT_PB03 | PORT_PB04| PORT_PB05 | PORT_PB06;//display "8"
    1212:	2280      	movs	r2, #128	; 0x80
    1214:	4b0a      	ldr	r3, [pc, #40]	; (1240 <display+0xa0>)
    1216:	18d3      	adds	r3, r2, r3
    1218:	217f      	movs	r1, #127	; 0x7f
    121a:	6159      	str	r1, [r3, #20]
		porB -> OUTSET.reg = PORT_PB07;//display "8"
    121c:	619a      	str	r2, [r3, #24]
		break;
    121e:	e7cd      	b.n	11bc <display+0x1c>
		porB -> OUTCLR.reg = PORT_PB00 | PORT_PB01 | PORT_PB02 | PORT_PB05 | PORT_PB06;//display "9"
    1220:	4b06      	ldr	r3, [pc, #24]	; (123c <display+0x9c>)
    1222:	2267      	movs	r2, #103	; 0x67
    1224:	615a      	str	r2, [r3, #20]
		porB -> OUTSET.reg = PORT_PB03 | PORT_PB04 | PORT_PB07;//display "9"
    1226:	3231      	adds	r2, #49	; 0x31
    1228:	619a      	str	r2, [r3, #24]
		break;
    122a:	e7c7      	b.n	11bc <display+0x1c>
		porB -> OUTSET.reg = PORT_PB03 | PORT_PB07;//display "A"
    122c:	4b03      	ldr	r3, [pc, #12]	; (123c <display+0x9c>)
    122e:	2288      	movs	r2, #136	; 0x88
    1230:	619a      	str	r2, [r3, #24]
		porB -> OUTCLR.reg = PORT_PB00 | PORT_PB01 | PORT_PB02 | PORT_PB04 | PORT_PB05 | PORT_PB06;//display "A"
    1232:	3a11      	subs	r2, #17
    1234:	615a      	str	r2, [r3, #20]
    1236:	e7c1      	b.n	11bc <display+0x1c>
    1238:	00003048 	.word	0x00003048
    123c:	41004480 	.word	0x41004480
    1240:	41004400 	.word	0x41004400

00001244 <TC5_Handler>:
TC5_Handler(){	//60Hz 
    1244:	b5f0      	push	{r4, r5, r6, r7, lr}
    1246:	46c6      	mov	lr, r8
    1248:	b500      	push	{lr}
	poll();			//read keypad
    124a:	4b21      	ldr	r3, [pc, #132]	; (12d0 <TC5_Handler+0x8c>)
    124c:	4798      	blx	r3
	tc5->INTFLAG.bit.OVF = 1;
    124e:	4a21      	ldr	r2, [pc, #132]	; (12d4 <TC5_Handler+0x90>)
    1250:	7b93      	ldrb	r3, [r2, #14]
    1252:	2101      	movs	r1, #1
    1254:	430b      	orrs	r3, r1
    1256:	7393      	strb	r3, [r2, #14]
		if(mode == 0){
    1258:	4b1f      	ldr	r3, [pc, #124]	; (12d8 <TC5_Handler+0x94>)
    125a:	681b      	ldr	r3, [r3, #0]
    125c:	2b00      	cmp	r3, #0
    125e:	d031      	beq.n	12c4 <TC5_Handler+0x80>
			convert(errorDisplay);
    1260:	4b1e      	ldr	r3, [pc, #120]	; (12dc <TC5_Handler+0x98>)
    1262:	6818      	ldr	r0, [r3, #0]
    1264:	4b1e      	ldr	r3, [pc, #120]	; (12e0 <TC5_Handler+0x9c>)
    1266:	4798      	blx	r3
	porA->OUTCLR.reg = 	PORT_PA07;
    1268:	4c1e      	ldr	r4, [pc, #120]	; (12e4 <TC5_Handler+0xa0>)
    126a:	2380      	movs	r3, #128	; 0x80
    126c:	4698      	mov	r8, r3
    126e:	6163      	str	r3, [r4, #20]
	display(ConArrayPtr);
    1270:	4f1d      	ldr	r7, [pc, #116]	; (12e8 <TC5_Handler+0xa4>)
    1272:	6838      	ldr	r0, [r7, #0]
    1274:	4e1d      	ldr	r6, [pc, #116]	; (12ec <TC5_Handler+0xa8>)
    1276:	47b0      	blx	r6
	wait(1);
    1278:	2001      	movs	r0, #1
    127a:	4d1d      	ldr	r5, [pc, #116]	; (12f0 <TC5_Handler+0xac>)
    127c:	47a8      	blx	r5
	porA->OUTSET.reg = 	PORT_PA07;
    127e:	4643      	mov	r3, r8
    1280:	61a3      	str	r3, [r4, #24]
	porA->OUTCLR.reg = 	PORT_PA06;
    1282:	3b40      	subs	r3, #64	; 0x40
    1284:	4698      	mov	r8, r3
    1286:	6163      	str	r3, [r4, #20]
	display(ConArrayPtr + 1);
    1288:	683b      	ldr	r3, [r7, #0]
    128a:	1c58      	adds	r0, r3, #1
    128c:	47b0      	blx	r6
	wait(1);
    128e:	2001      	movs	r0, #1
    1290:	47a8      	blx	r5
	porA->OUTSET.reg = 	PORT_PA06;
    1292:	4643      	mov	r3, r8
    1294:	61a3      	str	r3, [r4, #24]
	porA->OUTCLR.reg = 	PORT_PA05;
    1296:	3b20      	subs	r3, #32
    1298:	4698      	mov	r8, r3
    129a:	6163      	str	r3, [r4, #20]
	display(ConArrayPtr + 2);
    129c:	683b      	ldr	r3, [r7, #0]
    129e:	1c98      	adds	r0, r3, #2
    12a0:	47b0      	blx	r6
	wait(1);
    12a2:	2001      	movs	r0, #1
    12a4:	47a8      	blx	r5
	porA->OUTSET.reg = 	PORT_PA05;
    12a6:	4643      	mov	r3, r8
    12a8:	61a3      	str	r3, [r4, #24]
	porA->OUTCLR.reg = 	PORT_PA04;
    12aa:	3b10      	subs	r3, #16
    12ac:	4698      	mov	r8, r3
    12ae:	6163      	str	r3, [r4, #20]
	display(ConArrayPtr + 3);
    12b0:	6838      	ldr	r0, [r7, #0]
    12b2:	3003      	adds	r0, #3
    12b4:	47b0      	blx	r6
	wait(1);
    12b6:	2001      	movs	r0, #1
    12b8:	47a8      	blx	r5
	porA->OUTSET.reg = 	PORT_PA04;
    12ba:	4643      	mov	r3, r8
    12bc:	61a3      	str	r3, [r4, #24]
}
    12be:	bc04      	pop	{r2}
    12c0:	4690      	mov	r8, r2
    12c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
			convert(filterRawSpeed);
    12c4:	4b0b      	ldr	r3, [pc, #44]	; (12f4 <TC5_Handler+0xb0>)
    12c6:	6818      	ldr	r0, [r3, #0]
    12c8:	4b05      	ldr	r3, [pc, #20]	; (12e0 <TC5_Handler+0x9c>)
    12ca:	4798      	blx	r3
    12cc:	e7cc      	b.n	1268 <TC5_Handler+0x24>
    12ce:	46c0      	nop			; (mov r8, r8)
    12d0:	000007d1 	.word	0x000007d1
    12d4:	42003400 	.word	0x42003400
    12d8:	20000034 	.word	0x20000034
    12dc:	200000b8 	.word	0x200000b8
    12e0:	000010a9 	.word	0x000010a9
    12e4:	41004400 	.word	0x41004400
    12e8:	200000c4 	.word	0x200000c4
    12ec:	000011a1 	.word	0x000011a1
    12f0:	0000075d 	.word	0x0000075d
    12f4:	20000088 	.word	0x20000088

000012f8 <__divsi3>:
    12f8:	4603      	mov	r3, r0
    12fa:	430b      	orrs	r3, r1
    12fc:	d47f      	bmi.n	13fe <__divsi3+0x106>
    12fe:	2200      	movs	r2, #0
    1300:	0843      	lsrs	r3, r0, #1
    1302:	428b      	cmp	r3, r1
    1304:	d374      	bcc.n	13f0 <__divsi3+0xf8>
    1306:	0903      	lsrs	r3, r0, #4
    1308:	428b      	cmp	r3, r1
    130a:	d35f      	bcc.n	13cc <__divsi3+0xd4>
    130c:	0a03      	lsrs	r3, r0, #8
    130e:	428b      	cmp	r3, r1
    1310:	d344      	bcc.n	139c <__divsi3+0xa4>
    1312:	0b03      	lsrs	r3, r0, #12
    1314:	428b      	cmp	r3, r1
    1316:	d328      	bcc.n	136a <__divsi3+0x72>
    1318:	0c03      	lsrs	r3, r0, #16
    131a:	428b      	cmp	r3, r1
    131c:	d30d      	bcc.n	133a <__divsi3+0x42>
    131e:	22ff      	movs	r2, #255	; 0xff
    1320:	0209      	lsls	r1, r1, #8
    1322:	ba12      	rev	r2, r2
    1324:	0c03      	lsrs	r3, r0, #16
    1326:	428b      	cmp	r3, r1
    1328:	d302      	bcc.n	1330 <__divsi3+0x38>
    132a:	1212      	asrs	r2, r2, #8
    132c:	0209      	lsls	r1, r1, #8
    132e:	d065      	beq.n	13fc <__divsi3+0x104>
    1330:	0b03      	lsrs	r3, r0, #12
    1332:	428b      	cmp	r3, r1
    1334:	d319      	bcc.n	136a <__divsi3+0x72>
    1336:	e000      	b.n	133a <__divsi3+0x42>
    1338:	0a09      	lsrs	r1, r1, #8
    133a:	0bc3      	lsrs	r3, r0, #15
    133c:	428b      	cmp	r3, r1
    133e:	d301      	bcc.n	1344 <__divsi3+0x4c>
    1340:	03cb      	lsls	r3, r1, #15
    1342:	1ac0      	subs	r0, r0, r3
    1344:	4152      	adcs	r2, r2
    1346:	0b83      	lsrs	r3, r0, #14
    1348:	428b      	cmp	r3, r1
    134a:	d301      	bcc.n	1350 <__divsi3+0x58>
    134c:	038b      	lsls	r3, r1, #14
    134e:	1ac0      	subs	r0, r0, r3
    1350:	4152      	adcs	r2, r2
    1352:	0b43      	lsrs	r3, r0, #13
    1354:	428b      	cmp	r3, r1
    1356:	d301      	bcc.n	135c <__divsi3+0x64>
    1358:	034b      	lsls	r3, r1, #13
    135a:	1ac0      	subs	r0, r0, r3
    135c:	4152      	adcs	r2, r2
    135e:	0b03      	lsrs	r3, r0, #12
    1360:	428b      	cmp	r3, r1
    1362:	d301      	bcc.n	1368 <__divsi3+0x70>
    1364:	030b      	lsls	r3, r1, #12
    1366:	1ac0      	subs	r0, r0, r3
    1368:	4152      	adcs	r2, r2
    136a:	0ac3      	lsrs	r3, r0, #11
    136c:	428b      	cmp	r3, r1
    136e:	d301      	bcc.n	1374 <__divsi3+0x7c>
    1370:	02cb      	lsls	r3, r1, #11
    1372:	1ac0      	subs	r0, r0, r3
    1374:	4152      	adcs	r2, r2
    1376:	0a83      	lsrs	r3, r0, #10
    1378:	428b      	cmp	r3, r1
    137a:	d301      	bcc.n	1380 <__divsi3+0x88>
    137c:	028b      	lsls	r3, r1, #10
    137e:	1ac0      	subs	r0, r0, r3
    1380:	4152      	adcs	r2, r2
    1382:	0a43      	lsrs	r3, r0, #9
    1384:	428b      	cmp	r3, r1
    1386:	d301      	bcc.n	138c <__divsi3+0x94>
    1388:	024b      	lsls	r3, r1, #9
    138a:	1ac0      	subs	r0, r0, r3
    138c:	4152      	adcs	r2, r2
    138e:	0a03      	lsrs	r3, r0, #8
    1390:	428b      	cmp	r3, r1
    1392:	d301      	bcc.n	1398 <__divsi3+0xa0>
    1394:	020b      	lsls	r3, r1, #8
    1396:	1ac0      	subs	r0, r0, r3
    1398:	4152      	adcs	r2, r2
    139a:	d2cd      	bcs.n	1338 <__divsi3+0x40>
    139c:	09c3      	lsrs	r3, r0, #7
    139e:	428b      	cmp	r3, r1
    13a0:	d301      	bcc.n	13a6 <__divsi3+0xae>
    13a2:	01cb      	lsls	r3, r1, #7
    13a4:	1ac0      	subs	r0, r0, r3
    13a6:	4152      	adcs	r2, r2
    13a8:	0983      	lsrs	r3, r0, #6
    13aa:	428b      	cmp	r3, r1
    13ac:	d301      	bcc.n	13b2 <__divsi3+0xba>
    13ae:	018b      	lsls	r3, r1, #6
    13b0:	1ac0      	subs	r0, r0, r3
    13b2:	4152      	adcs	r2, r2
    13b4:	0943      	lsrs	r3, r0, #5
    13b6:	428b      	cmp	r3, r1
    13b8:	d301      	bcc.n	13be <__divsi3+0xc6>
    13ba:	014b      	lsls	r3, r1, #5
    13bc:	1ac0      	subs	r0, r0, r3
    13be:	4152      	adcs	r2, r2
    13c0:	0903      	lsrs	r3, r0, #4
    13c2:	428b      	cmp	r3, r1
    13c4:	d301      	bcc.n	13ca <__divsi3+0xd2>
    13c6:	010b      	lsls	r3, r1, #4
    13c8:	1ac0      	subs	r0, r0, r3
    13ca:	4152      	adcs	r2, r2
    13cc:	08c3      	lsrs	r3, r0, #3
    13ce:	428b      	cmp	r3, r1
    13d0:	d301      	bcc.n	13d6 <__divsi3+0xde>
    13d2:	00cb      	lsls	r3, r1, #3
    13d4:	1ac0      	subs	r0, r0, r3
    13d6:	4152      	adcs	r2, r2
    13d8:	0883      	lsrs	r3, r0, #2
    13da:	428b      	cmp	r3, r1
    13dc:	d301      	bcc.n	13e2 <__divsi3+0xea>
    13de:	008b      	lsls	r3, r1, #2
    13e0:	1ac0      	subs	r0, r0, r3
    13e2:	4152      	adcs	r2, r2
    13e4:	0843      	lsrs	r3, r0, #1
    13e6:	428b      	cmp	r3, r1
    13e8:	d301      	bcc.n	13ee <__divsi3+0xf6>
    13ea:	004b      	lsls	r3, r1, #1
    13ec:	1ac0      	subs	r0, r0, r3
    13ee:	4152      	adcs	r2, r2
    13f0:	1a41      	subs	r1, r0, r1
    13f2:	d200      	bcs.n	13f6 <__divsi3+0xfe>
    13f4:	4601      	mov	r1, r0
    13f6:	4152      	adcs	r2, r2
    13f8:	4610      	mov	r0, r2
    13fa:	4770      	bx	lr
    13fc:	e05d      	b.n	14ba <__divsi3+0x1c2>
    13fe:	0fca      	lsrs	r2, r1, #31
    1400:	d000      	beq.n	1404 <__divsi3+0x10c>
    1402:	4249      	negs	r1, r1
    1404:	1003      	asrs	r3, r0, #32
    1406:	d300      	bcc.n	140a <__divsi3+0x112>
    1408:	4240      	negs	r0, r0
    140a:	4053      	eors	r3, r2
    140c:	2200      	movs	r2, #0
    140e:	469c      	mov	ip, r3
    1410:	0903      	lsrs	r3, r0, #4
    1412:	428b      	cmp	r3, r1
    1414:	d32d      	bcc.n	1472 <__divsi3+0x17a>
    1416:	0a03      	lsrs	r3, r0, #8
    1418:	428b      	cmp	r3, r1
    141a:	d312      	bcc.n	1442 <__divsi3+0x14a>
    141c:	22fc      	movs	r2, #252	; 0xfc
    141e:	0189      	lsls	r1, r1, #6
    1420:	ba12      	rev	r2, r2
    1422:	0a03      	lsrs	r3, r0, #8
    1424:	428b      	cmp	r3, r1
    1426:	d30c      	bcc.n	1442 <__divsi3+0x14a>
    1428:	0189      	lsls	r1, r1, #6
    142a:	1192      	asrs	r2, r2, #6
    142c:	428b      	cmp	r3, r1
    142e:	d308      	bcc.n	1442 <__divsi3+0x14a>
    1430:	0189      	lsls	r1, r1, #6
    1432:	1192      	asrs	r2, r2, #6
    1434:	428b      	cmp	r3, r1
    1436:	d304      	bcc.n	1442 <__divsi3+0x14a>
    1438:	0189      	lsls	r1, r1, #6
    143a:	d03a      	beq.n	14b2 <__divsi3+0x1ba>
    143c:	1192      	asrs	r2, r2, #6
    143e:	e000      	b.n	1442 <__divsi3+0x14a>
    1440:	0989      	lsrs	r1, r1, #6
    1442:	09c3      	lsrs	r3, r0, #7
    1444:	428b      	cmp	r3, r1
    1446:	d301      	bcc.n	144c <__divsi3+0x154>
    1448:	01cb      	lsls	r3, r1, #7
    144a:	1ac0      	subs	r0, r0, r3
    144c:	4152      	adcs	r2, r2
    144e:	0983      	lsrs	r3, r0, #6
    1450:	428b      	cmp	r3, r1
    1452:	d301      	bcc.n	1458 <__divsi3+0x160>
    1454:	018b      	lsls	r3, r1, #6
    1456:	1ac0      	subs	r0, r0, r3
    1458:	4152      	adcs	r2, r2
    145a:	0943      	lsrs	r3, r0, #5
    145c:	428b      	cmp	r3, r1
    145e:	d301      	bcc.n	1464 <__divsi3+0x16c>
    1460:	014b      	lsls	r3, r1, #5
    1462:	1ac0      	subs	r0, r0, r3
    1464:	4152      	adcs	r2, r2
    1466:	0903      	lsrs	r3, r0, #4
    1468:	428b      	cmp	r3, r1
    146a:	d301      	bcc.n	1470 <__divsi3+0x178>
    146c:	010b      	lsls	r3, r1, #4
    146e:	1ac0      	subs	r0, r0, r3
    1470:	4152      	adcs	r2, r2
    1472:	08c3      	lsrs	r3, r0, #3
    1474:	428b      	cmp	r3, r1
    1476:	d301      	bcc.n	147c <__divsi3+0x184>
    1478:	00cb      	lsls	r3, r1, #3
    147a:	1ac0      	subs	r0, r0, r3
    147c:	4152      	adcs	r2, r2
    147e:	0883      	lsrs	r3, r0, #2
    1480:	428b      	cmp	r3, r1
    1482:	d301      	bcc.n	1488 <__divsi3+0x190>
    1484:	008b      	lsls	r3, r1, #2
    1486:	1ac0      	subs	r0, r0, r3
    1488:	4152      	adcs	r2, r2
    148a:	d2d9      	bcs.n	1440 <__divsi3+0x148>
    148c:	0843      	lsrs	r3, r0, #1
    148e:	428b      	cmp	r3, r1
    1490:	d301      	bcc.n	1496 <__divsi3+0x19e>
    1492:	004b      	lsls	r3, r1, #1
    1494:	1ac0      	subs	r0, r0, r3
    1496:	4152      	adcs	r2, r2
    1498:	1a41      	subs	r1, r0, r1
    149a:	d200      	bcs.n	149e <__divsi3+0x1a6>
    149c:	4601      	mov	r1, r0
    149e:	4663      	mov	r3, ip
    14a0:	4152      	adcs	r2, r2
    14a2:	105b      	asrs	r3, r3, #1
    14a4:	4610      	mov	r0, r2
    14a6:	d301      	bcc.n	14ac <__divsi3+0x1b4>
    14a8:	4240      	negs	r0, r0
    14aa:	2b00      	cmp	r3, #0
    14ac:	d500      	bpl.n	14b0 <__divsi3+0x1b8>
    14ae:	4249      	negs	r1, r1
    14b0:	4770      	bx	lr
    14b2:	4663      	mov	r3, ip
    14b4:	105b      	asrs	r3, r3, #1
    14b6:	d300      	bcc.n	14ba <__divsi3+0x1c2>
    14b8:	4240      	negs	r0, r0
    14ba:	b501      	push	{r0, lr}
    14bc:	2000      	movs	r0, #0
    14be:	f000 f805 	bl	14cc <__aeabi_idiv0>
    14c2:	bd02      	pop	{r1, pc}

000014c4 <__aeabi_idivmod>:
    14c4:	2900      	cmp	r1, #0
    14c6:	d0f8      	beq.n	14ba <__divsi3+0x1c2>
    14c8:	e716      	b.n	12f8 <__divsi3>
    14ca:	4770      	bx	lr

000014cc <__aeabi_idiv0>:
    14cc:	4770      	bx	lr
    14ce:	46c0      	nop			; (mov r8, r8)

000014d0 <__aeabi_cfrcmple>:
    14d0:	4684      	mov	ip, r0
    14d2:	1c08      	adds	r0, r1, #0
    14d4:	4661      	mov	r1, ip
    14d6:	e7ff      	b.n	14d8 <__aeabi_cfcmpeq>

000014d8 <__aeabi_cfcmpeq>:
    14d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    14da:	f000 fb73 	bl	1bc4 <__lesf2>
    14de:	2800      	cmp	r0, #0
    14e0:	d401      	bmi.n	14e6 <__aeabi_cfcmpeq+0xe>
    14e2:	2100      	movs	r1, #0
    14e4:	42c8      	cmn	r0, r1
    14e6:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000014e8 <__aeabi_fcmpeq>:
    14e8:	b510      	push	{r4, lr}
    14ea:	f000 fb05 	bl	1af8 <__eqsf2>
    14ee:	4240      	negs	r0, r0
    14f0:	3001      	adds	r0, #1
    14f2:	bd10      	pop	{r4, pc}

000014f4 <__aeabi_fcmplt>:
    14f4:	b510      	push	{r4, lr}
    14f6:	f000 fb65 	bl	1bc4 <__lesf2>
    14fa:	2800      	cmp	r0, #0
    14fc:	db01      	blt.n	1502 <__aeabi_fcmplt+0xe>
    14fe:	2000      	movs	r0, #0
    1500:	bd10      	pop	{r4, pc}
    1502:	2001      	movs	r0, #1
    1504:	bd10      	pop	{r4, pc}
    1506:	46c0      	nop			; (mov r8, r8)

00001508 <__aeabi_fcmple>:
    1508:	b510      	push	{r4, lr}
    150a:	f000 fb5b 	bl	1bc4 <__lesf2>
    150e:	2800      	cmp	r0, #0
    1510:	dd01      	ble.n	1516 <__aeabi_fcmple+0xe>
    1512:	2000      	movs	r0, #0
    1514:	bd10      	pop	{r4, pc}
    1516:	2001      	movs	r0, #1
    1518:	bd10      	pop	{r4, pc}
    151a:	46c0      	nop			; (mov r8, r8)

0000151c <__aeabi_fcmpgt>:
    151c:	b510      	push	{r4, lr}
    151e:	f000 fb11 	bl	1b44 <__gesf2>
    1522:	2800      	cmp	r0, #0
    1524:	dc01      	bgt.n	152a <__aeabi_fcmpgt+0xe>
    1526:	2000      	movs	r0, #0
    1528:	bd10      	pop	{r4, pc}
    152a:	2001      	movs	r0, #1
    152c:	bd10      	pop	{r4, pc}
    152e:	46c0      	nop			; (mov r8, r8)

00001530 <__aeabi_fcmpge>:
    1530:	b510      	push	{r4, lr}
    1532:	f000 fb07 	bl	1b44 <__gesf2>
    1536:	2800      	cmp	r0, #0
    1538:	da01      	bge.n	153e <__aeabi_fcmpge+0xe>
    153a:	2000      	movs	r0, #0
    153c:	bd10      	pop	{r4, pc}
    153e:	2001      	movs	r0, #1
    1540:	bd10      	pop	{r4, pc}
    1542:	46c0      	nop			; (mov r8, r8)

00001544 <__aeabi_fadd>:
    1544:	b5f0      	push	{r4, r5, r6, r7, lr}
    1546:	46c6      	mov	lr, r8
    1548:	024e      	lsls	r6, r1, #9
    154a:	0247      	lsls	r7, r0, #9
    154c:	0a76      	lsrs	r6, r6, #9
    154e:	0a7b      	lsrs	r3, r7, #9
    1550:	0044      	lsls	r4, r0, #1
    1552:	0fc5      	lsrs	r5, r0, #31
    1554:	00f7      	lsls	r7, r6, #3
    1556:	0048      	lsls	r0, r1, #1
    1558:	4698      	mov	r8, r3
    155a:	b500      	push	{lr}
    155c:	0e24      	lsrs	r4, r4, #24
    155e:	002a      	movs	r2, r5
    1560:	00db      	lsls	r3, r3, #3
    1562:	0e00      	lsrs	r0, r0, #24
    1564:	0fc9      	lsrs	r1, r1, #31
    1566:	46bc      	mov	ip, r7
    1568:	428d      	cmp	r5, r1
    156a:	d067      	beq.n	163c <__aeabi_fadd+0xf8>
    156c:	1a22      	subs	r2, r4, r0
    156e:	2a00      	cmp	r2, #0
    1570:	dc00      	bgt.n	1574 <__aeabi_fadd+0x30>
    1572:	e0a5      	b.n	16c0 <__aeabi_fadd+0x17c>
    1574:	2800      	cmp	r0, #0
    1576:	d13a      	bne.n	15ee <__aeabi_fadd+0xaa>
    1578:	2f00      	cmp	r7, #0
    157a:	d100      	bne.n	157e <__aeabi_fadd+0x3a>
    157c:	e093      	b.n	16a6 <__aeabi_fadd+0x162>
    157e:	1e51      	subs	r1, r2, #1
    1580:	2900      	cmp	r1, #0
    1582:	d000      	beq.n	1586 <__aeabi_fadd+0x42>
    1584:	e0bc      	b.n	1700 <__aeabi_fadd+0x1bc>
    1586:	2401      	movs	r4, #1
    1588:	1bdb      	subs	r3, r3, r7
    158a:	015a      	lsls	r2, r3, #5
    158c:	d546      	bpl.n	161c <__aeabi_fadd+0xd8>
    158e:	019b      	lsls	r3, r3, #6
    1590:	099e      	lsrs	r6, r3, #6
    1592:	0030      	movs	r0, r6
    1594:	f001 fcf0 	bl	2f78 <__clzsi2>
    1598:	3805      	subs	r0, #5
    159a:	4086      	lsls	r6, r0
    159c:	4284      	cmp	r4, r0
    159e:	dd00      	ble.n	15a2 <__aeabi_fadd+0x5e>
    15a0:	e09d      	b.n	16de <__aeabi_fadd+0x19a>
    15a2:	1b04      	subs	r4, r0, r4
    15a4:	0032      	movs	r2, r6
    15a6:	2020      	movs	r0, #32
    15a8:	3401      	adds	r4, #1
    15aa:	40e2      	lsrs	r2, r4
    15ac:	1b04      	subs	r4, r0, r4
    15ae:	40a6      	lsls	r6, r4
    15b0:	0033      	movs	r3, r6
    15b2:	1e5e      	subs	r6, r3, #1
    15b4:	41b3      	sbcs	r3, r6
    15b6:	2400      	movs	r4, #0
    15b8:	4313      	orrs	r3, r2
    15ba:	075a      	lsls	r2, r3, #29
    15bc:	d004      	beq.n	15c8 <__aeabi_fadd+0x84>
    15be:	220f      	movs	r2, #15
    15c0:	401a      	ands	r2, r3
    15c2:	2a04      	cmp	r2, #4
    15c4:	d000      	beq.n	15c8 <__aeabi_fadd+0x84>
    15c6:	3304      	adds	r3, #4
    15c8:	015a      	lsls	r2, r3, #5
    15ca:	d529      	bpl.n	1620 <__aeabi_fadd+0xdc>
    15cc:	3401      	adds	r4, #1
    15ce:	2cff      	cmp	r4, #255	; 0xff
    15d0:	d100      	bne.n	15d4 <__aeabi_fadd+0x90>
    15d2:	e081      	b.n	16d8 <__aeabi_fadd+0x194>
    15d4:	002a      	movs	r2, r5
    15d6:	019b      	lsls	r3, r3, #6
    15d8:	0a5b      	lsrs	r3, r3, #9
    15da:	b2e4      	uxtb	r4, r4
    15dc:	025b      	lsls	r3, r3, #9
    15de:	05e4      	lsls	r4, r4, #23
    15e0:	0a58      	lsrs	r0, r3, #9
    15e2:	07d2      	lsls	r2, r2, #31
    15e4:	4320      	orrs	r0, r4
    15e6:	4310      	orrs	r0, r2
    15e8:	bc04      	pop	{r2}
    15ea:	4690      	mov	r8, r2
    15ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    15ee:	2cff      	cmp	r4, #255	; 0xff
    15f0:	d0e3      	beq.n	15ba <__aeabi_fadd+0x76>
    15f2:	2180      	movs	r1, #128	; 0x80
    15f4:	0038      	movs	r0, r7
    15f6:	04c9      	lsls	r1, r1, #19
    15f8:	4308      	orrs	r0, r1
    15fa:	4684      	mov	ip, r0
    15fc:	2a1b      	cmp	r2, #27
    15fe:	dd00      	ble.n	1602 <__aeabi_fadd+0xbe>
    1600:	e082      	b.n	1708 <__aeabi_fadd+0x1c4>
    1602:	2020      	movs	r0, #32
    1604:	4661      	mov	r1, ip
    1606:	40d1      	lsrs	r1, r2
    1608:	1a82      	subs	r2, r0, r2
    160a:	4660      	mov	r0, ip
    160c:	4090      	lsls	r0, r2
    160e:	0002      	movs	r2, r0
    1610:	1e50      	subs	r0, r2, #1
    1612:	4182      	sbcs	r2, r0
    1614:	430a      	orrs	r2, r1
    1616:	1a9b      	subs	r3, r3, r2
    1618:	015a      	lsls	r2, r3, #5
    161a:	d4b8      	bmi.n	158e <__aeabi_fadd+0x4a>
    161c:	075a      	lsls	r2, r3, #29
    161e:	d1ce      	bne.n	15be <__aeabi_fadd+0x7a>
    1620:	08de      	lsrs	r6, r3, #3
    1622:	002a      	movs	r2, r5
    1624:	2cff      	cmp	r4, #255	; 0xff
    1626:	d13a      	bne.n	169e <__aeabi_fadd+0x15a>
    1628:	2e00      	cmp	r6, #0
    162a:	d100      	bne.n	162e <__aeabi_fadd+0xea>
    162c:	e0ae      	b.n	178c <__aeabi_fadd+0x248>
    162e:	2380      	movs	r3, #128	; 0x80
    1630:	03db      	lsls	r3, r3, #15
    1632:	4333      	orrs	r3, r6
    1634:	025b      	lsls	r3, r3, #9
    1636:	0a5b      	lsrs	r3, r3, #9
    1638:	24ff      	movs	r4, #255	; 0xff
    163a:	e7cf      	b.n	15dc <__aeabi_fadd+0x98>
    163c:	1a21      	subs	r1, r4, r0
    163e:	2900      	cmp	r1, #0
    1640:	dd52      	ble.n	16e8 <__aeabi_fadd+0x1a4>
    1642:	2800      	cmp	r0, #0
    1644:	d031      	beq.n	16aa <__aeabi_fadd+0x166>
    1646:	2cff      	cmp	r4, #255	; 0xff
    1648:	d0b7      	beq.n	15ba <__aeabi_fadd+0x76>
    164a:	2080      	movs	r0, #128	; 0x80
    164c:	003e      	movs	r6, r7
    164e:	04c0      	lsls	r0, r0, #19
    1650:	4306      	orrs	r6, r0
    1652:	46b4      	mov	ip, r6
    1654:	291b      	cmp	r1, #27
    1656:	dd00      	ble.n	165a <__aeabi_fadd+0x116>
    1658:	e0aa      	b.n	17b0 <__aeabi_fadd+0x26c>
    165a:	2620      	movs	r6, #32
    165c:	4660      	mov	r0, ip
    165e:	40c8      	lsrs	r0, r1
    1660:	1a71      	subs	r1, r6, r1
    1662:	4666      	mov	r6, ip
    1664:	408e      	lsls	r6, r1
    1666:	0031      	movs	r1, r6
    1668:	1e4e      	subs	r6, r1, #1
    166a:	41b1      	sbcs	r1, r6
    166c:	4301      	orrs	r1, r0
    166e:	185b      	adds	r3, r3, r1
    1670:	0159      	lsls	r1, r3, #5
    1672:	d5d3      	bpl.n	161c <__aeabi_fadd+0xd8>
    1674:	3401      	adds	r4, #1
    1676:	2cff      	cmp	r4, #255	; 0xff
    1678:	d100      	bne.n	167c <__aeabi_fadd+0x138>
    167a:	e087      	b.n	178c <__aeabi_fadd+0x248>
    167c:	2201      	movs	r2, #1
    167e:	4978      	ldr	r1, [pc, #480]	; (1860 <__aeabi_fadd+0x31c>)
    1680:	401a      	ands	r2, r3
    1682:	085b      	lsrs	r3, r3, #1
    1684:	400b      	ands	r3, r1
    1686:	4313      	orrs	r3, r2
    1688:	e797      	b.n	15ba <__aeabi_fadd+0x76>
    168a:	2c00      	cmp	r4, #0
    168c:	d000      	beq.n	1690 <__aeabi_fadd+0x14c>
    168e:	e0a7      	b.n	17e0 <__aeabi_fadd+0x29c>
    1690:	2b00      	cmp	r3, #0
    1692:	d000      	beq.n	1696 <__aeabi_fadd+0x152>
    1694:	e0b6      	b.n	1804 <__aeabi_fadd+0x2c0>
    1696:	1e3b      	subs	r3, r7, #0
    1698:	d162      	bne.n	1760 <__aeabi_fadd+0x21c>
    169a:	2600      	movs	r6, #0
    169c:	2200      	movs	r2, #0
    169e:	0273      	lsls	r3, r6, #9
    16a0:	0a5b      	lsrs	r3, r3, #9
    16a2:	b2e4      	uxtb	r4, r4
    16a4:	e79a      	b.n	15dc <__aeabi_fadd+0x98>
    16a6:	0014      	movs	r4, r2
    16a8:	e787      	b.n	15ba <__aeabi_fadd+0x76>
    16aa:	2f00      	cmp	r7, #0
    16ac:	d04d      	beq.n	174a <__aeabi_fadd+0x206>
    16ae:	1e48      	subs	r0, r1, #1
    16b0:	2800      	cmp	r0, #0
    16b2:	d157      	bne.n	1764 <__aeabi_fadd+0x220>
    16b4:	4463      	add	r3, ip
    16b6:	2401      	movs	r4, #1
    16b8:	015a      	lsls	r2, r3, #5
    16ba:	d5af      	bpl.n	161c <__aeabi_fadd+0xd8>
    16bc:	2402      	movs	r4, #2
    16be:	e7dd      	b.n	167c <__aeabi_fadd+0x138>
    16c0:	2a00      	cmp	r2, #0
    16c2:	d124      	bne.n	170e <__aeabi_fadd+0x1ca>
    16c4:	1c62      	adds	r2, r4, #1
    16c6:	b2d2      	uxtb	r2, r2
    16c8:	2a01      	cmp	r2, #1
    16ca:	ddde      	ble.n	168a <__aeabi_fadd+0x146>
    16cc:	1bde      	subs	r6, r3, r7
    16ce:	0172      	lsls	r2, r6, #5
    16d0:	d535      	bpl.n	173e <__aeabi_fadd+0x1fa>
    16d2:	1afe      	subs	r6, r7, r3
    16d4:	000d      	movs	r5, r1
    16d6:	e75c      	b.n	1592 <__aeabi_fadd+0x4e>
    16d8:	002a      	movs	r2, r5
    16da:	2300      	movs	r3, #0
    16dc:	e77e      	b.n	15dc <__aeabi_fadd+0x98>
    16de:	0033      	movs	r3, r6
    16e0:	4a60      	ldr	r2, [pc, #384]	; (1864 <__aeabi_fadd+0x320>)
    16e2:	1a24      	subs	r4, r4, r0
    16e4:	4013      	ands	r3, r2
    16e6:	e768      	b.n	15ba <__aeabi_fadd+0x76>
    16e8:	2900      	cmp	r1, #0
    16ea:	d163      	bne.n	17b4 <__aeabi_fadd+0x270>
    16ec:	1c61      	adds	r1, r4, #1
    16ee:	b2c8      	uxtb	r0, r1
    16f0:	2801      	cmp	r0, #1
    16f2:	dd4e      	ble.n	1792 <__aeabi_fadd+0x24e>
    16f4:	29ff      	cmp	r1, #255	; 0xff
    16f6:	d049      	beq.n	178c <__aeabi_fadd+0x248>
    16f8:	4463      	add	r3, ip
    16fa:	085b      	lsrs	r3, r3, #1
    16fc:	000c      	movs	r4, r1
    16fe:	e75c      	b.n	15ba <__aeabi_fadd+0x76>
    1700:	2aff      	cmp	r2, #255	; 0xff
    1702:	d041      	beq.n	1788 <__aeabi_fadd+0x244>
    1704:	000a      	movs	r2, r1
    1706:	e779      	b.n	15fc <__aeabi_fadd+0xb8>
    1708:	2201      	movs	r2, #1
    170a:	1a9b      	subs	r3, r3, r2
    170c:	e784      	b.n	1618 <__aeabi_fadd+0xd4>
    170e:	2c00      	cmp	r4, #0
    1710:	d01d      	beq.n	174e <__aeabi_fadd+0x20a>
    1712:	28ff      	cmp	r0, #255	; 0xff
    1714:	d022      	beq.n	175c <__aeabi_fadd+0x218>
    1716:	2480      	movs	r4, #128	; 0x80
    1718:	04e4      	lsls	r4, r4, #19
    171a:	4252      	negs	r2, r2
    171c:	4323      	orrs	r3, r4
    171e:	2a1b      	cmp	r2, #27
    1720:	dd00      	ble.n	1724 <__aeabi_fadd+0x1e0>
    1722:	e08a      	b.n	183a <__aeabi_fadd+0x2f6>
    1724:	001c      	movs	r4, r3
    1726:	2520      	movs	r5, #32
    1728:	40d4      	lsrs	r4, r2
    172a:	1aaa      	subs	r2, r5, r2
    172c:	4093      	lsls	r3, r2
    172e:	1e5a      	subs	r2, r3, #1
    1730:	4193      	sbcs	r3, r2
    1732:	4323      	orrs	r3, r4
    1734:	4662      	mov	r2, ip
    1736:	0004      	movs	r4, r0
    1738:	1ad3      	subs	r3, r2, r3
    173a:	000d      	movs	r5, r1
    173c:	e725      	b.n	158a <__aeabi_fadd+0x46>
    173e:	2e00      	cmp	r6, #0
    1740:	d000      	beq.n	1744 <__aeabi_fadd+0x200>
    1742:	e726      	b.n	1592 <__aeabi_fadd+0x4e>
    1744:	2200      	movs	r2, #0
    1746:	2400      	movs	r4, #0
    1748:	e7a9      	b.n	169e <__aeabi_fadd+0x15a>
    174a:	000c      	movs	r4, r1
    174c:	e735      	b.n	15ba <__aeabi_fadd+0x76>
    174e:	2b00      	cmp	r3, #0
    1750:	d04d      	beq.n	17ee <__aeabi_fadd+0x2aa>
    1752:	43d2      	mvns	r2, r2
    1754:	2a00      	cmp	r2, #0
    1756:	d0ed      	beq.n	1734 <__aeabi_fadd+0x1f0>
    1758:	28ff      	cmp	r0, #255	; 0xff
    175a:	d1e0      	bne.n	171e <__aeabi_fadd+0x1da>
    175c:	4663      	mov	r3, ip
    175e:	24ff      	movs	r4, #255	; 0xff
    1760:	000d      	movs	r5, r1
    1762:	e72a      	b.n	15ba <__aeabi_fadd+0x76>
    1764:	29ff      	cmp	r1, #255	; 0xff
    1766:	d00f      	beq.n	1788 <__aeabi_fadd+0x244>
    1768:	0001      	movs	r1, r0
    176a:	e773      	b.n	1654 <__aeabi_fadd+0x110>
    176c:	2b00      	cmp	r3, #0
    176e:	d061      	beq.n	1834 <__aeabi_fadd+0x2f0>
    1770:	24ff      	movs	r4, #255	; 0xff
    1772:	2f00      	cmp	r7, #0
    1774:	d100      	bne.n	1778 <__aeabi_fadd+0x234>
    1776:	e720      	b.n	15ba <__aeabi_fadd+0x76>
    1778:	2280      	movs	r2, #128	; 0x80
    177a:	4641      	mov	r1, r8
    177c:	03d2      	lsls	r2, r2, #15
    177e:	4211      	tst	r1, r2
    1780:	d002      	beq.n	1788 <__aeabi_fadd+0x244>
    1782:	4216      	tst	r6, r2
    1784:	d100      	bne.n	1788 <__aeabi_fadd+0x244>
    1786:	003b      	movs	r3, r7
    1788:	24ff      	movs	r4, #255	; 0xff
    178a:	e716      	b.n	15ba <__aeabi_fadd+0x76>
    178c:	24ff      	movs	r4, #255	; 0xff
    178e:	2300      	movs	r3, #0
    1790:	e724      	b.n	15dc <__aeabi_fadd+0x98>
    1792:	2c00      	cmp	r4, #0
    1794:	d1ea      	bne.n	176c <__aeabi_fadd+0x228>
    1796:	2b00      	cmp	r3, #0
    1798:	d058      	beq.n	184c <__aeabi_fadd+0x308>
    179a:	2f00      	cmp	r7, #0
    179c:	d100      	bne.n	17a0 <__aeabi_fadd+0x25c>
    179e:	e70c      	b.n	15ba <__aeabi_fadd+0x76>
    17a0:	4463      	add	r3, ip
    17a2:	015a      	lsls	r2, r3, #5
    17a4:	d400      	bmi.n	17a8 <__aeabi_fadd+0x264>
    17a6:	e739      	b.n	161c <__aeabi_fadd+0xd8>
    17a8:	4a2e      	ldr	r2, [pc, #184]	; (1864 <__aeabi_fadd+0x320>)
    17aa:	000c      	movs	r4, r1
    17ac:	4013      	ands	r3, r2
    17ae:	e704      	b.n	15ba <__aeabi_fadd+0x76>
    17b0:	2101      	movs	r1, #1
    17b2:	e75c      	b.n	166e <__aeabi_fadd+0x12a>
    17b4:	2c00      	cmp	r4, #0
    17b6:	d11e      	bne.n	17f6 <__aeabi_fadd+0x2b2>
    17b8:	2b00      	cmp	r3, #0
    17ba:	d040      	beq.n	183e <__aeabi_fadd+0x2fa>
    17bc:	43c9      	mvns	r1, r1
    17be:	2900      	cmp	r1, #0
    17c0:	d00b      	beq.n	17da <__aeabi_fadd+0x296>
    17c2:	28ff      	cmp	r0, #255	; 0xff
    17c4:	d036      	beq.n	1834 <__aeabi_fadd+0x2f0>
    17c6:	291b      	cmp	r1, #27
    17c8:	dc47      	bgt.n	185a <__aeabi_fadd+0x316>
    17ca:	001c      	movs	r4, r3
    17cc:	2620      	movs	r6, #32
    17ce:	40cc      	lsrs	r4, r1
    17d0:	1a71      	subs	r1, r6, r1
    17d2:	408b      	lsls	r3, r1
    17d4:	1e59      	subs	r1, r3, #1
    17d6:	418b      	sbcs	r3, r1
    17d8:	4323      	orrs	r3, r4
    17da:	4463      	add	r3, ip
    17dc:	0004      	movs	r4, r0
    17de:	e747      	b.n	1670 <__aeabi_fadd+0x12c>
    17e0:	2b00      	cmp	r3, #0
    17e2:	d118      	bne.n	1816 <__aeabi_fadd+0x2d2>
    17e4:	1e3b      	subs	r3, r7, #0
    17e6:	d02d      	beq.n	1844 <__aeabi_fadd+0x300>
    17e8:	000d      	movs	r5, r1
    17ea:	24ff      	movs	r4, #255	; 0xff
    17ec:	e6e5      	b.n	15ba <__aeabi_fadd+0x76>
    17ee:	003b      	movs	r3, r7
    17f0:	0004      	movs	r4, r0
    17f2:	000d      	movs	r5, r1
    17f4:	e6e1      	b.n	15ba <__aeabi_fadd+0x76>
    17f6:	28ff      	cmp	r0, #255	; 0xff
    17f8:	d01c      	beq.n	1834 <__aeabi_fadd+0x2f0>
    17fa:	2480      	movs	r4, #128	; 0x80
    17fc:	04e4      	lsls	r4, r4, #19
    17fe:	4249      	negs	r1, r1
    1800:	4323      	orrs	r3, r4
    1802:	e7e0      	b.n	17c6 <__aeabi_fadd+0x282>
    1804:	2f00      	cmp	r7, #0
    1806:	d100      	bne.n	180a <__aeabi_fadd+0x2c6>
    1808:	e6d7      	b.n	15ba <__aeabi_fadd+0x76>
    180a:	1bde      	subs	r6, r3, r7
    180c:	0172      	lsls	r2, r6, #5
    180e:	d51f      	bpl.n	1850 <__aeabi_fadd+0x30c>
    1810:	1afb      	subs	r3, r7, r3
    1812:	000d      	movs	r5, r1
    1814:	e6d1      	b.n	15ba <__aeabi_fadd+0x76>
    1816:	24ff      	movs	r4, #255	; 0xff
    1818:	2f00      	cmp	r7, #0
    181a:	d100      	bne.n	181e <__aeabi_fadd+0x2da>
    181c:	e6cd      	b.n	15ba <__aeabi_fadd+0x76>
    181e:	2280      	movs	r2, #128	; 0x80
    1820:	4640      	mov	r0, r8
    1822:	03d2      	lsls	r2, r2, #15
    1824:	4210      	tst	r0, r2
    1826:	d0af      	beq.n	1788 <__aeabi_fadd+0x244>
    1828:	4216      	tst	r6, r2
    182a:	d1ad      	bne.n	1788 <__aeabi_fadd+0x244>
    182c:	003b      	movs	r3, r7
    182e:	000d      	movs	r5, r1
    1830:	24ff      	movs	r4, #255	; 0xff
    1832:	e6c2      	b.n	15ba <__aeabi_fadd+0x76>
    1834:	4663      	mov	r3, ip
    1836:	24ff      	movs	r4, #255	; 0xff
    1838:	e6bf      	b.n	15ba <__aeabi_fadd+0x76>
    183a:	2301      	movs	r3, #1
    183c:	e77a      	b.n	1734 <__aeabi_fadd+0x1f0>
    183e:	003b      	movs	r3, r7
    1840:	0004      	movs	r4, r0
    1842:	e6ba      	b.n	15ba <__aeabi_fadd+0x76>
    1844:	2680      	movs	r6, #128	; 0x80
    1846:	2200      	movs	r2, #0
    1848:	03f6      	lsls	r6, r6, #15
    184a:	e6f0      	b.n	162e <__aeabi_fadd+0xea>
    184c:	003b      	movs	r3, r7
    184e:	e6b4      	b.n	15ba <__aeabi_fadd+0x76>
    1850:	1e33      	subs	r3, r6, #0
    1852:	d000      	beq.n	1856 <__aeabi_fadd+0x312>
    1854:	e6e2      	b.n	161c <__aeabi_fadd+0xd8>
    1856:	2200      	movs	r2, #0
    1858:	e721      	b.n	169e <__aeabi_fadd+0x15a>
    185a:	2301      	movs	r3, #1
    185c:	e7bd      	b.n	17da <__aeabi_fadd+0x296>
    185e:	46c0      	nop			; (mov r8, r8)
    1860:	7dffffff 	.word	0x7dffffff
    1864:	fbffffff 	.word	0xfbffffff

00001868 <__aeabi_fdiv>:
    1868:	b5f0      	push	{r4, r5, r6, r7, lr}
    186a:	4657      	mov	r7, sl
    186c:	464e      	mov	r6, r9
    186e:	46de      	mov	lr, fp
    1870:	4645      	mov	r5, r8
    1872:	b5e0      	push	{r5, r6, r7, lr}
    1874:	0244      	lsls	r4, r0, #9
    1876:	0043      	lsls	r3, r0, #1
    1878:	0fc6      	lsrs	r6, r0, #31
    187a:	b083      	sub	sp, #12
    187c:	1c0f      	adds	r7, r1, #0
    187e:	0a64      	lsrs	r4, r4, #9
    1880:	0e1b      	lsrs	r3, r3, #24
    1882:	46b2      	mov	sl, r6
    1884:	d053      	beq.n	192e <__aeabi_fdiv+0xc6>
    1886:	2bff      	cmp	r3, #255	; 0xff
    1888:	d027      	beq.n	18da <__aeabi_fdiv+0x72>
    188a:	2280      	movs	r2, #128	; 0x80
    188c:	00e4      	lsls	r4, r4, #3
    188e:	04d2      	lsls	r2, r2, #19
    1890:	4314      	orrs	r4, r2
    1892:	227f      	movs	r2, #127	; 0x7f
    1894:	4252      	negs	r2, r2
    1896:	4690      	mov	r8, r2
    1898:	4498      	add	r8, r3
    189a:	2300      	movs	r3, #0
    189c:	4699      	mov	r9, r3
    189e:	469b      	mov	fp, r3
    18a0:	027d      	lsls	r5, r7, #9
    18a2:	0078      	lsls	r0, r7, #1
    18a4:	0ffb      	lsrs	r3, r7, #31
    18a6:	0a6d      	lsrs	r5, r5, #9
    18a8:	0e00      	lsrs	r0, r0, #24
    18aa:	9300      	str	r3, [sp, #0]
    18ac:	d024      	beq.n	18f8 <__aeabi_fdiv+0x90>
    18ae:	28ff      	cmp	r0, #255	; 0xff
    18b0:	d046      	beq.n	1940 <__aeabi_fdiv+0xd8>
    18b2:	2380      	movs	r3, #128	; 0x80
    18b4:	2100      	movs	r1, #0
    18b6:	00ed      	lsls	r5, r5, #3
    18b8:	04db      	lsls	r3, r3, #19
    18ba:	431d      	orrs	r5, r3
    18bc:	387f      	subs	r0, #127	; 0x7f
    18be:	4647      	mov	r7, r8
    18c0:	1a38      	subs	r0, r7, r0
    18c2:	464f      	mov	r7, r9
    18c4:	430f      	orrs	r7, r1
    18c6:	00bf      	lsls	r7, r7, #2
    18c8:	46b9      	mov	r9, r7
    18ca:	0033      	movs	r3, r6
    18cc:	9a00      	ldr	r2, [sp, #0]
    18ce:	4f87      	ldr	r7, [pc, #540]	; (1aec <__aeabi_fdiv+0x284>)
    18d0:	4053      	eors	r3, r2
    18d2:	464a      	mov	r2, r9
    18d4:	58ba      	ldr	r2, [r7, r2]
    18d6:	9301      	str	r3, [sp, #4]
    18d8:	4697      	mov	pc, r2
    18da:	2c00      	cmp	r4, #0
    18dc:	d14e      	bne.n	197c <__aeabi_fdiv+0x114>
    18de:	2308      	movs	r3, #8
    18e0:	4699      	mov	r9, r3
    18e2:	33f7      	adds	r3, #247	; 0xf7
    18e4:	4698      	mov	r8, r3
    18e6:	3bfd      	subs	r3, #253	; 0xfd
    18e8:	469b      	mov	fp, r3
    18ea:	027d      	lsls	r5, r7, #9
    18ec:	0078      	lsls	r0, r7, #1
    18ee:	0ffb      	lsrs	r3, r7, #31
    18f0:	0a6d      	lsrs	r5, r5, #9
    18f2:	0e00      	lsrs	r0, r0, #24
    18f4:	9300      	str	r3, [sp, #0]
    18f6:	d1da      	bne.n	18ae <__aeabi_fdiv+0x46>
    18f8:	2d00      	cmp	r5, #0
    18fa:	d126      	bne.n	194a <__aeabi_fdiv+0xe2>
    18fc:	2000      	movs	r0, #0
    18fe:	2101      	movs	r1, #1
    1900:	0033      	movs	r3, r6
    1902:	9a00      	ldr	r2, [sp, #0]
    1904:	4f7a      	ldr	r7, [pc, #488]	; (1af0 <__aeabi_fdiv+0x288>)
    1906:	4053      	eors	r3, r2
    1908:	4642      	mov	r2, r8
    190a:	1a10      	subs	r0, r2, r0
    190c:	464a      	mov	r2, r9
    190e:	430a      	orrs	r2, r1
    1910:	0092      	lsls	r2, r2, #2
    1912:	58ba      	ldr	r2, [r7, r2]
    1914:	001d      	movs	r5, r3
    1916:	4697      	mov	pc, r2
    1918:	9b00      	ldr	r3, [sp, #0]
    191a:	002c      	movs	r4, r5
    191c:	469a      	mov	sl, r3
    191e:	468b      	mov	fp, r1
    1920:	465b      	mov	r3, fp
    1922:	2b02      	cmp	r3, #2
    1924:	d131      	bne.n	198a <__aeabi_fdiv+0x122>
    1926:	4653      	mov	r3, sl
    1928:	21ff      	movs	r1, #255	; 0xff
    192a:	2400      	movs	r4, #0
    192c:	e038      	b.n	19a0 <__aeabi_fdiv+0x138>
    192e:	2c00      	cmp	r4, #0
    1930:	d117      	bne.n	1962 <__aeabi_fdiv+0xfa>
    1932:	2304      	movs	r3, #4
    1934:	4699      	mov	r9, r3
    1936:	2300      	movs	r3, #0
    1938:	4698      	mov	r8, r3
    193a:	3301      	adds	r3, #1
    193c:	469b      	mov	fp, r3
    193e:	e7af      	b.n	18a0 <__aeabi_fdiv+0x38>
    1940:	20ff      	movs	r0, #255	; 0xff
    1942:	2d00      	cmp	r5, #0
    1944:	d10b      	bne.n	195e <__aeabi_fdiv+0xf6>
    1946:	2102      	movs	r1, #2
    1948:	e7da      	b.n	1900 <__aeabi_fdiv+0x98>
    194a:	0028      	movs	r0, r5
    194c:	f001 fb14 	bl	2f78 <__clzsi2>
    1950:	1f43      	subs	r3, r0, #5
    1952:	409d      	lsls	r5, r3
    1954:	2376      	movs	r3, #118	; 0x76
    1956:	425b      	negs	r3, r3
    1958:	1a18      	subs	r0, r3, r0
    195a:	2100      	movs	r1, #0
    195c:	e7af      	b.n	18be <__aeabi_fdiv+0x56>
    195e:	2103      	movs	r1, #3
    1960:	e7ad      	b.n	18be <__aeabi_fdiv+0x56>
    1962:	0020      	movs	r0, r4
    1964:	f001 fb08 	bl	2f78 <__clzsi2>
    1968:	1f43      	subs	r3, r0, #5
    196a:	409c      	lsls	r4, r3
    196c:	2376      	movs	r3, #118	; 0x76
    196e:	425b      	negs	r3, r3
    1970:	1a1b      	subs	r3, r3, r0
    1972:	4698      	mov	r8, r3
    1974:	2300      	movs	r3, #0
    1976:	4699      	mov	r9, r3
    1978:	469b      	mov	fp, r3
    197a:	e791      	b.n	18a0 <__aeabi_fdiv+0x38>
    197c:	230c      	movs	r3, #12
    197e:	4699      	mov	r9, r3
    1980:	33f3      	adds	r3, #243	; 0xf3
    1982:	4698      	mov	r8, r3
    1984:	3bfc      	subs	r3, #252	; 0xfc
    1986:	469b      	mov	fp, r3
    1988:	e78a      	b.n	18a0 <__aeabi_fdiv+0x38>
    198a:	2b03      	cmp	r3, #3
    198c:	d100      	bne.n	1990 <__aeabi_fdiv+0x128>
    198e:	e0a5      	b.n	1adc <__aeabi_fdiv+0x274>
    1990:	4655      	mov	r5, sl
    1992:	2b01      	cmp	r3, #1
    1994:	d000      	beq.n	1998 <__aeabi_fdiv+0x130>
    1996:	e081      	b.n	1a9c <__aeabi_fdiv+0x234>
    1998:	2301      	movs	r3, #1
    199a:	2100      	movs	r1, #0
    199c:	2400      	movs	r4, #0
    199e:	402b      	ands	r3, r5
    19a0:	0264      	lsls	r4, r4, #9
    19a2:	05c9      	lsls	r1, r1, #23
    19a4:	0a60      	lsrs	r0, r4, #9
    19a6:	07db      	lsls	r3, r3, #31
    19a8:	4308      	orrs	r0, r1
    19aa:	4318      	orrs	r0, r3
    19ac:	b003      	add	sp, #12
    19ae:	bc3c      	pop	{r2, r3, r4, r5}
    19b0:	4690      	mov	r8, r2
    19b2:	4699      	mov	r9, r3
    19b4:	46a2      	mov	sl, r4
    19b6:	46ab      	mov	fp, r5
    19b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    19ba:	2480      	movs	r4, #128	; 0x80
    19bc:	2300      	movs	r3, #0
    19be:	03e4      	lsls	r4, r4, #15
    19c0:	21ff      	movs	r1, #255	; 0xff
    19c2:	e7ed      	b.n	19a0 <__aeabi_fdiv+0x138>
    19c4:	21ff      	movs	r1, #255	; 0xff
    19c6:	2400      	movs	r4, #0
    19c8:	e7ea      	b.n	19a0 <__aeabi_fdiv+0x138>
    19ca:	2301      	movs	r3, #1
    19cc:	1a59      	subs	r1, r3, r1
    19ce:	291b      	cmp	r1, #27
    19d0:	dd66      	ble.n	1aa0 <__aeabi_fdiv+0x238>
    19d2:	9a01      	ldr	r2, [sp, #4]
    19d4:	4013      	ands	r3, r2
    19d6:	2100      	movs	r1, #0
    19d8:	2400      	movs	r4, #0
    19da:	e7e1      	b.n	19a0 <__aeabi_fdiv+0x138>
    19dc:	2380      	movs	r3, #128	; 0x80
    19de:	03db      	lsls	r3, r3, #15
    19e0:	421c      	tst	r4, r3
    19e2:	d038      	beq.n	1a56 <__aeabi_fdiv+0x1ee>
    19e4:	421d      	tst	r5, r3
    19e6:	d051      	beq.n	1a8c <__aeabi_fdiv+0x224>
    19e8:	431c      	orrs	r4, r3
    19ea:	0264      	lsls	r4, r4, #9
    19ec:	0a64      	lsrs	r4, r4, #9
    19ee:	0033      	movs	r3, r6
    19f0:	21ff      	movs	r1, #255	; 0xff
    19f2:	e7d5      	b.n	19a0 <__aeabi_fdiv+0x138>
    19f4:	0163      	lsls	r3, r4, #5
    19f6:	016c      	lsls	r4, r5, #5
    19f8:	42a3      	cmp	r3, r4
    19fa:	d23b      	bcs.n	1a74 <__aeabi_fdiv+0x20c>
    19fc:	261b      	movs	r6, #27
    19fe:	2100      	movs	r1, #0
    1a00:	3801      	subs	r0, #1
    1a02:	2501      	movs	r5, #1
    1a04:	001f      	movs	r7, r3
    1a06:	0049      	lsls	r1, r1, #1
    1a08:	005b      	lsls	r3, r3, #1
    1a0a:	2f00      	cmp	r7, #0
    1a0c:	db01      	blt.n	1a12 <__aeabi_fdiv+0x1aa>
    1a0e:	429c      	cmp	r4, r3
    1a10:	d801      	bhi.n	1a16 <__aeabi_fdiv+0x1ae>
    1a12:	1b1b      	subs	r3, r3, r4
    1a14:	4329      	orrs	r1, r5
    1a16:	3e01      	subs	r6, #1
    1a18:	2e00      	cmp	r6, #0
    1a1a:	d1f3      	bne.n	1a04 <__aeabi_fdiv+0x19c>
    1a1c:	001c      	movs	r4, r3
    1a1e:	1e63      	subs	r3, r4, #1
    1a20:	419c      	sbcs	r4, r3
    1a22:	430c      	orrs	r4, r1
    1a24:	0001      	movs	r1, r0
    1a26:	317f      	adds	r1, #127	; 0x7f
    1a28:	2900      	cmp	r1, #0
    1a2a:	ddce      	ble.n	19ca <__aeabi_fdiv+0x162>
    1a2c:	0763      	lsls	r3, r4, #29
    1a2e:	d004      	beq.n	1a3a <__aeabi_fdiv+0x1d2>
    1a30:	230f      	movs	r3, #15
    1a32:	4023      	ands	r3, r4
    1a34:	2b04      	cmp	r3, #4
    1a36:	d000      	beq.n	1a3a <__aeabi_fdiv+0x1d2>
    1a38:	3404      	adds	r4, #4
    1a3a:	0123      	lsls	r3, r4, #4
    1a3c:	d503      	bpl.n	1a46 <__aeabi_fdiv+0x1de>
    1a3e:	0001      	movs	r1, r0
    1a40:	4b2c      	ldr	r3, [pc, #176]	; (1af4 <__aeabi_fdiv+0x28c>)
    1a42:	3180      	adds	r1, #128	; 0x80
    1a44:	401c      	ands	r4, r3
    1a46:	29fe      	cmp	r1, #254	; 0xfe
    1a48:	dd0d      	ble.n	1a66 <__aeabi_fdiv+0x1fe>
    1a4a:	2301      	movs	r3, #1
    1a4c:	9a01      	ldr	r2, [sp, #4]
    1a4e:	21ff      	movs	r1, #255	; 0xff
    1a50:	4013      	ands	r3, r2
    1a52:	2400      	movs	r4, #0
    1a54:	e7a4      	b.n	19a0 <__aeabi_fdiv+0x138>
    1a56:	2380      	movs	r3, #128	; 0x80
    1a58:	03db      	lsls	r3, r3, #15
    1a5a:	431c      	orrs	r4, r3
    1a5c:	0264      	lsls	r4, r4, #9
    1a5e:	0a64      	lsrs	r4, r4, #9
    1a60:	0033      	movs	r3, r6
    1a62:	21ff      	movs	r1, #255	; 0xff
    1a64:	e79c      	b.n	19a0 <__aeabi_fdiv+0x138>
    1a66:	2301      	movs	r3, #1
    1a68:	9a01      	ldr	r2, [sp, #4]
    1a6a:	01a4      	lsls	r4, r4, #6
    1a6c:	0a64      	lsrs	r4, r4, #9
    1a6e:	b2c9      	uxtb	r1, r1
    1a70:	4013      	ands	r3, r2
    1a72:	e795      	b.n	19a0 <__aeabi_fdiv+0x138>
    1a74:	1b1b      	subs	r3, r3, r4
    1a76:	261a      	movs	r6, #26
    1a78:	2101      	movs	r1, #1
    1a7a:	e7c2      	b.n	1a02 <__aeabi_fdiv+0x19a>
    1a7c:	9b00      	ldr	r3, [sp, #0]
    1a7e:	468b      	mov	fp, r1
    1a80:	469a      	mov	sl, r3
    1a82:	2400      	movs	r4, #0
    1a84:	e74c      	b.n	1920 <__aeabi_fdiv+0xb8>
    1a86:	0263      	lsls	r3, r4, #9
    1a88:	d5e5      	bpl.n	1a56 <__aeabi_fdiv+0x1ee>
    1a8a:	2500      	movs	r5, #0
    1a8c:	2480      	movs	r4, #128	; 0x80
    1a8e:	03e4      	lsls	r4, r4, #15
    1a90:	432c      	orrs	r4, r5
    1a92:	0264      	lsls	r4, r4, #9
    1a94:	0a64      	lsrs	r4, r4, #9
    1a96:	9b00      	ldr	r3, [sp, #0]
    1a98:	21ff      	movs	r1, #255	; 0xff
    1a9a:	e781      	b.n	19a0 <__aeabi_fdiv+0x138>
    1a9c:	9501      	str	r5, [sp, #4]
    1a9e:	e7c1      	b.n	1a24 <__aeabi_fdiv+0x1bc>
    1aa0:	0023      	movs	r3, r4
    1aa2:	2020      	movs	r0, #32
    1aa4:	40cb      	lsrs	r3, r1
    1aa6:	1a41      	subs	r1, r0, r1
    1aa8:	408c      	lsls	r4, r1
    1aaa:	1e61      	subs	r1, r4, #1
    1aac:	418c      	sbcs	r4, r1
    1aae:	431c      	orrs	r4, r3
    1ab0:	0763      	lsls	r3, r4, #29
    1ab2:	d004      	beq.n	1abe <__aeabi_fdiv+0x256>
    1ab4:	230f      	movs	r3, #15
    1ab6:	4023      	ands	r3, r4
    1ab8:	2b04      	cmp	r3, #4
    1aba:	d000      	beq.n	1abe <__aeabi_fdiv+0x256>
    1abc:	3404      	adds	r4, #4
    1abe:	0163      	lsls	r3, r4, #5
    1ac0:	d505      	bpl.n	1ace <__aeabi_fdiv+0x266>
    1ac2:	2301      	movs	r3, #1
    1ac4:	9a01      	ldr	r2, [sp, #4]
    1ac6:	2101      	movs	r1, #1
    1ac8:	4013      	ands	r3, r2
    1aca:	2400      	movs	r4, #0
    1acc:	e768      	b.n	19a0 <__aeabi_fdiv+0x138>
    1ace:	2301      	movs	r3, #1
    1ad0:	9a01      	ldr	r2, [sp, #4]
    1ad2:	01a4      	lsls	r4, r4, #6
    1ad4:	0a64      	lsrs	r4, r4, #9
    1ad6:	4013      	ands	r3, r2
    1ad8:	2100      	movs	r1, #0
    1ada:	e761      	b.n	19a0 <__aeabi_fdiv+0x138>
    1adc:	2380      	movs	r3, #128	; 0x80
    1ade:	03db      	lsls	r3, r3, #15
    1ae0:	431c      	orrs	r4, r3
    1ae2:	0264      	lsls	r4, r4, #9
    1ae4:	0a64      	lsrs	r4, r4, #9
    1ae6:	4653      	mov	r3, sl
    1ae8:	21ff      	movs	r1, #255	; 0xff
    1aea:	e759      	b.n	19a0 <__aeabi_fdiv+0x138>
    1aec:	00003070 	.word	0x00003070
    1af0:	000030b0 	.word	0x000030b0
    1af4:	f7ffffff 	.word	0xf7ffffff

00001af8 <__eqsf2>:
    1af8:	b570      	push	{r4, r5, r6, lr}
    1afa:	0042      	lsls	r2, r0, #1
    1afc:	0245      	lsls	r5, r0, #9
    1afe:	024e      	lsls	r6, r1, #9
    1b00:	004c      	lsls	r4, r1, #1
    1b02:	0fc3      	lsrs	r3, r0, #31
    1b04:	0a6d      	lsrs	r5, r5, #9
    1b06:	0e12      	lsrs	r2, r2, #24
    1b08:	0a76      	lsrs	r6, r6, #9
    1b0a:	0e24      	lsrs	r4, r4, #24
    1b0c:	0fc9      	lsrs	r1, r1, #31
    1b0e:	2001      	movs	r0, #1
    1b10:	2aff      	cmp	r2, #255	; 0xff
    1b12:	d006      	beq.n	1b22 <__eqsf2+0x2a>
    1b14:	2cff      	cmp	r4, #255	; 0xff
    1b16:	d003      	beq.n	1b20 <__eqsf2+0x28>
    1b18:	42a2      	cmp	r2, r4
    1b1a:	d101      	bne.n	1b20 <__eqsf2+0x28>
    1b1c:	42b5      	cmp	r5, r6
    1b1e:	d006      	beq.n	1b2e <__eqsf2+0x36>
    1b20:	bd70      	pop	{r4, r5, r6, pc}
    1b22:	2d00      	cmp	r5, #0
    1b24:	d1fc      	bne.n	1b20 <__eqsf2+0x28>
    1b26:	2cff      	cmp	r4, #255	; 0xff
    1b28:	d1fa      	bne.n	1b20 <__eqsf2+0x28>
    1b2a:	2e00      	cmp	r6, #0
    1b2c:	d1f8      	bne.n	1b20 <__eqsf2+0x28>
    1b2e:	428b      	cmp	r3, r1
    1b30:	d006      	beq.n	1b40 <__eqsf2+0x48>
    1b32:	2001      	movs	r0, #1
    1b34:	2a00      	cmp	r2, #0
    1b36:	d1f3      	bne.n	1b20 <__eqsf2+0x28>
    1b38:	0028      	movs	r0, r5
    1b3a:	1e45      	subs	r5, r0, #1
    1b3c:	41a8      	sbcs	r0, r5
    1b3e:	e7ef      	b.n	1b20 <__eqsf2+0x28>
    1b40:	2000      	movs	r0, #0
    1b42:	e7ed      	b.n	1b20 <__eqsf2+0x28>

00001b44 <__gesf2>:
    1b44:	b5f0      	push	{r4, r5, r6, r7, lr}
    1b46:	0042      	lsls	r2, r0, #1
    1b48:	0245      	lsls	r5, r0, #9
    1b4a:	024c      	lsls	r4, r1, #9
    1b4c:	0fc3      	lsrs	r3, r0, #31
    1b4e:	0048      	lsls	r0, r1, #1
    1b50:	0a6d      	lsrs	r5, r5, #9
    1b52:	0e12      	lsrs	r2, r2, #24
    1b54:	0a64      	lsrs	r4, r4, #9
    1b56:	0e00      	lsrs	r0, r0, #24
    1b58:	0fc9      	lsrs	r1, r1, #31
    1b5a:	2aff      	cmp	r2, #255	; 0xff
    1b5c:	d01e      	beq.n	1b9c <__gesf2+0x58>
    1b5e:	28ff      	cmp	r0, #255	; 0xff
    1b60:	d021      	beq.n	1ba6 <__gesf2+0x62>
    1b62:	2a00      	cmp	r2, #0
    1b64:	d10a      	bne.n	1b7c <__gesf2+0x38>
    1b66:	426e      	negs	r6, r5
    1b68:	416e      	adcs	r6, r5
    1b6a:	b2f6      	uxtb	r6, r6
    1b6c:	2800      	cmp	r0, #0
    1b6e:	d10f      	bne.n	1b90 <__gesf2+0x4c>
    1b70:	2c00      	cmp	r4, #0
    1b72:	d10d      	bne.n	1b90 <__gesf2+0x4c>
    1b74:	2000      	movs	r0, #0
    1b76:	2d00      	cmp	r5, #0
    1b78:	d009      	beq.n	1b8e <__gesf2+0x4a>
    1b7a:	e005      	b.n	1b88 <__gesf2+0x44>
    1b7c:	2800      	cmp	r0, #0
    1b7e:	d101      	bne.n	1b84 <__gesf2+0x40>
    1b80:	2c00      	cmp	r4, #0
    1b82:	d001      	beq.n	1b88 <__gesf2+0x44>
    1b84:	428b      	cmp	r3, r1
    1b86:	d011      	beq.n	1bac <__gesf2+0x68>
    1b88:	2101      	movs	r1, #1
    1b8a:	4258      	negs	r0, r3
    1b8c:	4308      	orrs	r0, r1
    1b8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1b90:	2e00      	cmp	r6, #0
    1b92:	d0f7      	beq.n	1b84 <__gesf2+0x40>
    1b94:	2001      	movs	r0, #1
    1b96:	3901      	subs	r1, #1
    1b98:	4308      	orrs	r0, r1
    1b9a:	e7f8      	b.n	1b8e <__gesf2+0x4a>
    1b9c:	2d00      	cmp	r5, #0
    1b9e:	d0de      	beq.n	1b5e <__gesf2+0x1a>
    1ba0:	2002      	movs	r0, #2
    1ba2:	4240      	negs	r0, r0
    1ba4:	e7f3      	b.n	1b8e <__gesf2+0x4a>
    1ba6:	2c00      	cmp	r4, #0
    1ba8:	d0db      	beq.n	1b62 <__gesf2+0x1e>
    1baa:	e7f9      	b.n	1ba0 <__gesf2+0x5c>
    1bac:	4282      	cmp	r2, r0
    1bae:	dceb      	bgt.n	1b88 <__gesf2+0x44>
    1bb0:	db04      	blt.n	1bbc <__gesf2+0x78>
    1bb2:	42a5      	cmp	r5, r4
    1bb4:	d8e8      	bhi.n	1b88 <__gesf2+0x44>
    1bb6:	2000      	movs	r0, #0
    1bb8:	42a5      	cmp	r5, r4
    1bba:	d2e8      	bcs.n	1b8e <__gesf2+0x4a>
    1bbc:	2101      	movs	r1, #1
    1bbe:	1e58      	subs	r0, r3, #1
    1bc0:	4308      	orrs	r0, r1
    1bc2:	e7e4      	b.n	1b8e <__gesf2+0x4a>

00001bc4 <__lesf2>:
    1bc4:	b5f0      	push	{r4, r5, r6, r7, lr}
    1bc6:	0042      	lsls	r2, r0, #1
    1bc8:	024d      	lsls	r5, r1, #9
    1bca:	004c      	lsls	r4, r1, #1
    1bcc:	0246      	lsls	r6, r0, #9
    1bce:	0a76      	lsrs	r6, r6, #9
    1bd0:	0e12      	lsrs	r2, r2, #24
    1bd2:	0fc3      	lsrs	r3, r0, #31
    1bd4:	0a6d      	lsrs	r5, r5, #9
    1bd6:	0e24      	lsrs	r4, r4, #24
    1bd8:	0fc9      	lsrs	r1, r1, #31
    1bda:	2aff      	cmp	r2, #255	; 0xff
    1bdc:	d016      	beq.n	1c0c <__lesf2+0x48>
    1bde:	2cff      	cmp	r4, #255	; 0xff
    1be0:	d018      	beq.n	1c14 <__lesf2+0x50>
    1be2:	2a00      	cmp	r2, #0
    1be4:	d10a      	bne.n	1bfc <__lesf2+0x38>
    1be6:	4270      	negs	r0, r6
    1be8:	4170      	adcs	r0, r6
    1bea:	b2c0      	uxtb	r0, r0
    1bec:	2c00      	cmp	r4, #0
    1bee:	d015      	beq.n	1c1c <__lesf2+0x58>
    1bf0:	2800      	cmp	r0, #0
    1bf2:	d005      	beq.n	1c00 <__lesf2+0x3c>
    1bf4:	2001      	movs	r0, #1
    1bf6:	3901      	subs	r1, #1
    1bf8:	4308      	orrs	r0, r1
    1bfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1bfc:	2c00      	cmp	r4, #0
    1bfe:	d013      	beq.n	1c28 <__lesf2+0x64>
    1c00:	4299      	cmp	r1, r3
    1c02:	d014      	beq.n	1c2e <__lesf2+0x6a>
    1c04:	2001      	movs	r0, #1
    1c06:	425b      	negs	r3, r3
    1c08:	4318      	orrs	r0, r3
    1c0a:	e7f6      	b.n	1bfa <__lesf2+0x36>
    1c0c:	2002      	movs	r0, #2
    1c0e:	2e00      	cmp	r6, #0
    1c10:	d1f3      	bne.n	1bfa <__lesf2+0x36>
    1c12:	e7e4      	b.n	1bde <__lesf2+0x1a>
    1c14:	2002      	movs	r0, #2
    1c16:	2d00      	cmp	r5, #0
    1c18:	d1ef      	bne.n	1bfa <__lesf2+0x36>
    1c1a:	e7e2      	b.n	1be2 <__lesf2+0x1e>
    1c1c:	2d00      	cmp	r5, #0
    1c1e:	d1e7      	bne.n	1bf0 <__lesf2+0x2c>
    1c20:	2000      	movs	r0, #0
    1c22:	2e00      	cmp	r6, #0
    1c24:	d0e9      	beq.n	1bfa <__lesf2+0x36>
    1c26:	e7ed      	b.n	1c04 <__lesf2+0x40>
    1c28:	2d00      	cmp	r5, #0
    1c2a:	d1e9      	bne.n	1c00 <__lesf2+0x3c>
    1c2c:	e7ea      	b.n	1c04 <__lesf2+0x40>
    1c2e:	42a2      	cmp	r2, r4
    1c30:	dc06      	bgt.n	1c40 <__lesf2+0x7c>
    1c32:	dbdf      	blt.n	1bf4 <__lesf2+0x30>
    1c34:	42ae      	cmp	r6, r5
    1c36:	d803      	bhi.n	1c40 <__lesf2+0x7c>
    1c38:	2000      	movs	r0, #0
    1c3a:	42ae      	cmp	r6, r5
    1c3c:	d3da      	bcc.n	1bf4 <__lesf2+0x30>
    1c3e:	e7dc      	b.n	1bfa <__lesf2+0x36>
    1c40:	2001      	movs	r0, #1
    1c42:	4249      	negs	r1, r1
    1c44:	4308      	orrs	r0, r1
    1c46:	e7d8      	b.n	1bfa <__lesf2+0x36>

00001c48 <__aeabi_fmul>:
    1c48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1c4a:	4657      	mov	r7, sl
    1c4c:	464e      	mov	r6, r9
    1c4e:	4645      	mov	r5, r8
    1c50:	46de      	mov	lr, fp
    1c52:	b5e0      	push	{r5, r6, r7, lr}
    1c54:	0247      	lsls	r7, r0, #9
    1c56:	0046      	lsls	r6, r0, #1
    1c58:	4688      	mov	r8, r1
    1c5a:	0a7f      	lsrs	r7, r7, #9
    1c5c:	0e36      	lsrs	r6, r6, #24
    1c5e:	0fc4      	lsrs	r4, r0, #31
    1c60:	2e00      	cmp	r6, #0
    1c62:	d047      	beq.n	1cf4 <__aeabi_fmul+0xac>
    1c64:	2eff      	cmp	r6, #255	; 0xff
    1c66:	d024      	beq.n	1cb2 <__aeabi_fmul+0x6a>
    1c68:	00fb      	lsls	r3, r7, #3
    1c6a:	2780      	movs	r7, #128	; 0x80
    1c6c:	04ff      	lsls	r7, r7, #19
    1c6e:	431f      	orrs	r7, r3
    1c70:	2300      	movs	r3, #0
    1c72:	4699      	mov	r9, r3
    1c74:	469a      	mov	sl, r3
    1c76:	3e7f      	subs	r6, #127	; 0x7f
    1c78:	4643      	mov	r3, r8
    1c7a:	025d      	lsls	r5, r3, #9
    1c7c:	0058      	lsls	r0, r3, #1
    1c7e:	0fdb      	lsrs	r3, r3, #31
    1c80:	0a6d      	lsrs	r5, r5, #9
    1c82:	0e00      	lsrs	r0, r0, #24
    1c84:	4698      	mov	r8, r3
    1c86:	d043      	beq.n	1d10 <__aeabi_fmul+0xc8>
    1c88:	28ff      	cmp	r0, #255	; 0xff
    1c8a:	d03b      	beq.n	1d04 <__aeabi_fmul+0xbc>
    1c8c:	00eb      	lsls	r3, r5, #3
    1c8e:	2580      	movs	r5, #128	; 0x80
    1c90:	2200      	movs	r2, #0
    1c92:	04ed      	lsls	r5, r5, #19
    1c94:	431d      	orrs	r5, r3
    1c96:	387f      	subs	r0, #127	; 0x7f
    1c98:	1836      	adds	r6, r6, r0
    1c9a:	1c73      	adds	r3, r6, #1
    1c9c:	4641      	mov	r1, r8
    1c9e:	469b      	mov	fp, r3
    1ca0:	464b      	mov	r3, r9
    1ca2:	4061      	eors	r1, r4
    1ca4:	4313      	orrs	r3, r2
    1ca6:	2b0f      	cmp	r3, #15
    1ca8:	d864      	bhi.n	1d74 <__aeabi_fmul+0x12c>
    1caa:	4875      	ldr	r0, [pc, #468]	; (1e80 <__aeabi_fmul+0x238>)
    1cac:	009b      	lsls	r3, r3, #2
    1cae:	58c3      	ldr	r3, [r0, r3]
    1cb0:	469f      	mov	pc, r3
    1cb2:	2f00      	cmp	r7, #0
    1cb4:	d142      	bne.n	1d3c <__aeabi_fmul+0xf4>
    1cb6:	2308      	movs	r3, #8
    1cb8:	4699      	mov	r9, r3
    1cba:	3b06      	subs	r3, #6
    1cbc:	26ff      	movs	r6, #255	; 0xff
    1cbe:	469a      	mov	sl, r3
    1cc0:	e7da      	b.n	1c78 <__aeabi_fmul+0x30>
    1cc2:	4641      	mov	r1, r8
    1cc4:	2a02      	cmp	r2, #2
    1cc6:	d028      	beq.n	1d1a <__aeabi_fmul+0xd2>
    1cc8:	2a03      	cmp	r2, #3
    1cca:	d100      	bne.n	1cce <__aeabi_fmul+0x86>
    1ccc:	e0ce      	b.n	1e6c <__aeabi_fmul+0x224>
    1cce:	2a01      	cmp	r2, #1
    1cd0:	d000      	beq.n	1cd4 <__aeabi_fmul+0x8c>
    1cd2:	e0ac      	b.n	1e2e <__aeabi_fmul+0x1e6>
    1cd4:	4011      	ands	r1, r2
    1cd6:	2000      	movs	r0, #0
    1cd8:	2200      	movs	r2, #0
    1cda:	b2cc      	uxtb	r4, r1
    1cdc:	0240      	lsls	r0, r0, #9
    1cde:	05d2      	lsls	r2, r2, #23
    1ce0:	0a40      	lsrs	r0, r0, #9
    1ce2:	07e4      	lsls	r4, r4, #31
    1ce4:	4310      	orrs	r0, r2
    1ce6:	4320      	orrs	r0, r4
    1ce8:	bc3c      	pop	{r2, r3, r4, r5}
    1cea:	4690      	mov	r8, r2
    1cec:	4699      	mov	r9, r3
    1cee:	46a2      	mov	sl, r4
    1cf0:	46ab      	mov	fp, r5
    1cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1cf4:	2f00      	cmp	r7, #0
    1cf6:	d115      	bne.n	1d24 <__aeabi_fmul+0xdc>
    1cf8:	2304      	movs	r3, #4
    1cfa:	4699      	mov	r9, r3
    1cfc:	3b03      	subs	r3, #3
    1cfe:	2600      	movs	r6, #0
    1d00:	469a      	mov	sl, r3
    1d02:	e7b9      	b.n	1c78 <__aeabi_fmul+0x30>
    1d04:	20ff      	movs	r0, #255	; 0xff
    1d06:	2202      	movs	r2, #2
    1d08:	2d00      	cmp	r5, #0
    1d0a:	d0c5      	beq.n	1c98 <__aeabi_fmul+0x50>
    1d0c:	2203      	movs	r2, #3
    1d0e:	e7c3      	b.n	1c98 <__aeabi_fmul+0x50>
    1d10:	2d00      	cmp	r5, #0
    1d12:	d119      	bne.n	1d48 <__aeabi_fmul+0x100>
    1d14:	2000      	movs	r0, #0
    1d16:	2201      	movs	r2, #1
    1d18:	e7be      	b.n	1c98 <__aeabi_fmul+0x50>
    1d1a:	2401      	movs	r4, #1
    1d1c:	22ff      	movs	r2, #255	; 0xff
    1d1e:	400c      	ands	r4, r1
    1d20:	2000      	movs	r0, #0
    1d22:	e7db      	b.n	1cdc <__aeabi_fmul+0x94>
    1d24:	0038      	movs	r0, r7
    1d26:	f001 f927 	bl	2f78 <__clzsi2>
    1d2a:	2676      	movs	r6, #118	; 0x76
    1d2c:	1f43      	subs	r3, r0, #5
    1d2e:	409f      	lsls	r7, r3
    1d30:	2300      	movs	r3, #0
    1d32:	4276      	negs	r6, r6
    1d34:	1a36      	subs	r6, r6, r0
    1d36:	4699      	mov	r9, r3
    1d38:	469a      	mov	sl, r3
    1d3a:	e79d      	b.n	1c78 <__aeabi_fmul+0x30>
    1d3c:	230c      	movs	r3, #12
    1d3e:	4699      	mov	r9, r3
    1d40:	3b09      	subs	r3, #9
    1d42:	26ff      	movs	r6, #255	; 0xff
    1d44:	469a      	mov	sl, r3
    1d46:	e797      	b.n	1c78 <__aeabi_fmul+0x30>
    1d48:	0028      	movs	r0, r5
    1d4a:	f001 f915 	bl	2f78 <__clzsi2>
    1d4e:	1f43      	subs	r3, r0, #5
    1d50:	409d      	lsls	r5, r3
    1d52:	2376      	movs	r3, #118	; 0x76
    1d54:	425b      	negs	r3, r3
    1d56:	1a18      	subs	r0, r3, r0
    1d58:	2200      	movs	r2, #0
    1d5a:	e79d      	b.n	1c98 <__aeabi_fmul+0x50>
    1d5c:	2080      	movs	r0, #128	; 0x80
    1d5e:	2400      	movs	r4, #0
    1d60:	03c0      	lsls	r0, r0, #15
    1d62:	22ff      	movs	r2, #255	; 0xff
    1d64:	e7ba      	b.n	1cdc <__aeabi_fmul+0x94>
    1d66:	003d      	movs	r5, r7
    1d68:	4652      	mov	r2, sl
    1d6a:	e7ab      	b.n	1cc4 <__aeabi_fmul+0x7c>
    1d6c:	003d      	movs	r5, r7
    1d6e:	0021      	movs	r1, r4
    1d70:	4652      	mov	r2, sl
    1d72:	e7a7      	b.n	1cc4 <__aeabi_fmul+0x7c>
    1d74:	0c3b      	lsrs	r3, r7, #16
    1d76:	469c      	mov	ip, r3
    1d78:	042a      	lsls	r2, r5, #16
    1d7a:	0c12      	lsrs	r2, r2, #16
    1d7c:	0c2b      	lsrs	r3, r5, #16
    1d7e:	0014      	movs	r4, r2
    1d80:	4660      	mov	r0, ip
    1d82:	4665      	mov	r5, ip
    1d84:	043f      	lsls	r7, r7, #16
    1d86:	0c3f      	lsrs	r7, r7, #16
    1d88:	437c      	muls	r4, r7
    1d8a:	4342      	muls	r2, r0
    1d8c:	435d      	muls	r5, r3
    1d8e:	437b      	muls	r3, r7
    1d90:	0c27      	lsrs	r7, r4, #16
    1d92:	189b      	adds	r3, r3, r2
    1d94:	18ff      	adds	r7, r7, r3
    1d96:	42ba      	cmp	r2, r7
    1d98:	d903      	bls.n	1da2 <__aeabi_fmul+0x15a>
    1d9a:	2380      	movs	r3, #128	; 0x80
    1d9c:	025b      	lsls	r3, r3, #9
    1d9e:	469c      	mov	ip, r3
    1da0:	4465      	add	r5, ip
    1da2:	0424      	lsls	r4, r4, #16
    1da4:	043a      	lsls	r2, r7, #16
    1da6:	0c24      	lsrs	r4, r4, #16
    1da8:	1912      	adds	r2, r2, r4
    1daa:	0193      	lsls	r3, r2, #6
    1dac:	1e5c      	subs	r4, r3, #1
    1dae:	41a3      	sbcs	r3, r4
    1db0:	0c3f      	lsrs	r7, r7, #16
    1db2:	0e92      	lsrs	r2, r2, #26
    1db4:	197d      	adds	r5, r7, r5
    1db6:	431a      	orrs	r2, r3
    1db8:	01ad      	lsls	r5, r5, #6
    1dba:	4315      	orrs	r5, r2
    1dbc:	012b      	lsls	r3, r5, #4
    1dbe:	d504      	bpl.n	1dca <__aeabi_fmul+0x182>
    1dc0:	2301      	movs	r3, #1
    1dc2:	465e      	mov	r6, fp
    1dc4:	086a      	lsrs	r2, r5, #1
    1dc6:	401d      	ands	r5, r3
    1dc8:	4315      	orrs	r5, r2
    1dca:	0032      	movs	r2, r6
    1dcc:	327f      	adds	r2, #127	; 0x7f
    1dce:	2a00      	cmp	r2, #0
    1dd0:	dd25      	ble.n	1e1e <__aeabi_fmul+0x1d6>
    1dd2:	076b      	lsls	r3, r5, #29
    1dd4:	d004      	beq.n	1de0 <__aeabi_fmul+0x198>
    1dd6:	230f      	movs	r3, #15
    1dd8:	402b      	ands	r3, r5
    1dda:	2b04      	cmp	r3, #4
    1ddc:	d000      	beq.n	1de0 <__aeabi_fmul+0x198>
    1dde:	3504      	adds	r5, #4
    1de0:	012b      	lsls	r3, r5, #4
    1de2:	d503      	bpl.n	1dec <__aeabi_fmul+0x1a4>
    1de4:	0032      	movs	r2, r6
    1de6:	4b27      	ldr	r3, [pc, #156]	; (1e84 <__aeabi_fmul+0x23c>)
    1de8:	3280      	adds	r2, #128	; 0x80
    1dea:	401d      	ands	r5, r3
    1dec:	2afe      	cmp	r2, #254	; 0xfe
    1dee:	dc94      	bgt.n	1d1a <__aeabi_fmul+0xd2>
    1df0:	2401      	movs	r4, #1
    1df2:	01a8      	lsls	r0, r5, #6
    1df4:	0a40      	lsrs	r0, r0, #9
    1df6:	b2d2      	uxtb	r2, r2
    1df8:	400c      	ands	r4, r1
    1dfa:	e76f      	b.n	1cdc <__aeabi_fmul+0x94>
    1dfc:	2080      	movs	r0, #128	; 0x80
    1dfe:	03c0      	lsls	r0, r0, #15
    1e00:	4207      	tst	r7, r0
    1e02:	d007      	beq.n	1e14 <__aeabi_fmul+0x1cc>
    1e04:	4205      	tst	r5, r0
    1e06:	d105      	bne.n	1e14 <__aeabi_fmul+0x1cc>
    1e08:	4328      	orrs	r0, r5
    1e0a:	0240      	lsls	r0, r0, #9
    1e0c:	0a40      	lsrs	r0, r0, #9
    1e0e:	4644      	mov	r4, r8
    1e10:	22ff      	movs	r2, #255	; 0xff
    1e12:	e763      	b.n	1cdc <__aeabi_fmul+0x94>
    1e14:	4338      	orrs	r0, r7
    1e16:	0240      	lsls	r0, r0, #9
    1e18:	0a40      	lsrs	r0, r0, #9
    1e1a:	22ff      	movs	r2, #255	; 0xff
    1e1c:	e75e      	b.n	1cdc <__aeabi_fmul+0x94>
    1e1e:	2401      	movs	r4, #1
    1e20:	1aa3      	subs	r3, r4, r2
    1e22:	2b1b      	cmp	r3, #27
    1e24:	dd05      	ble.n	1e32 <__aeabi_fmul+0x1ea>
    1e26:	400c      	ands	r4, r1
    1e28:	2200      	movs	r2, #0
    1e2a:	2000      	movs	r0, #0
    1e2c:	e756      	b.n	1cdc <__aeabi_fmul+0x94>
    1e2e:	465e      	mov	r6, fp
    1e30:	e7cb      	b.n	1dca <__aeabi_fmul+0x182>
    1e32:	002a      	movs	r2, r5
    1e34:	2020      	movs	r0, #32
    1e36:	40da      	lsrs	r2, r3
    1e38:	1ac3      	subs	r3, r0, r3
    1e3a:	409d      	lsls	r5, r3
    1e3c:	002b      	movs	r3, r5
    1e3e:	1e5d      	subs	r5, r3, #1
    1e40:	41ab      	sbcs	r3, r5
    1e42:	4313      	orrs	r3, r2
    1e44:	075a      	lsls	r2, r3, #29
    1e46:	d004      	beq.n	1e52 <__aeabi_fmul+0x20a>
    1e48:	220f      	movs	r2, #15
    1e4a:	401a      	ands	r2, r3
    1e4c:	2a04      	cmp	r2, #4
    1e4e:	d000      	beq.n	1e52 <__aeabi_fmul+0x20a>
    1e50:	3304      	adds	r3, #4
    1e52:	015a      	lsls	r2, r3, #5
    1e54:	d504      	bpl.n	1e60 <__aeabi_fmul+0x218>
    1e56:	2401      	movs	r4, #1
    1e58:	2201      	movs	r2, #1
    1e5a:	400c      	ands	r4, r1
    1e5c:	2000      	movs	r0, #0
    1e5e:	e73d      	b.n	1cdc <__aeabi_fmul+0x94>
    1e60:	2401      	movs	r4, #1
    1e62:	019b      	lsls	r3, r3, #6
    1e64:	0a58      	lsrs	r0, r3, #9
    1e66:	400c      	ands	r4, r1
    1e68:	2200      	movs	r2, #0
    1e6a:	e737      	b.n	1cdc <__aeabi_fmul+0x94>
    1e6c:	2080      	movs	r0, #128	; 0x80
    1e6e:	2401      	movs	r4, #1
    1e70:	03c0      	lsls	r0, r0, #15
    1e72:	4328      	orrs	r0, r5
    1e74:	0240      	lsls	r0, r0, #9
    1e76:	0a40      	lsrs	r0, r0, #9
    1e78:	400c      	ands	r4, r1
    1e7a:	22ff      	movs	r2, #255	; 0xff
    1e7c:	e72e      	b.n	1cdc <__aeabi_fmul+0x94>
    1e7e:	46c0      	nop			; (mov r8, r8)
    1e80:	000030f0 	.word	0x000030f0
    1e84:	f7ffffff 	.word	0xf7ffffff

00001e88 <__aeabi_fsub>:
    1e88:	b5f0      	push	{r4, r5, r6, r7, lr}
    1e8a:	464f      	mov	r7, r9
    1e8c:	46d6      	mov	lr, sl
    1e8e:	4646      	mov	r6, r8
    1e90:	0044      	lsls	r4, r0, #1
    1e92:	b5c0      	push	{r6, r7, lr}
    1e94:	0fc2      	lsrs	r2, r0, #31
    1e96:	0247      	lsls	r7, r0, #9
    1e98:	0248      	lsls	r0, r1, #9
    1e9a:	0a40      	lsrs	r0, r0, #9
    1e9c:	4684      	mov	ip, r0
    1e9e:	4666      	mov	r6, ip
    1ea0:	0a7b      	lsrs	r3, r7, #9
    1ea2:	0048      	lsls	r0, r1, #1
    1ea4:	0fc9      	lsrs	r1, r1, #31
    1ea6:	469a      	mov	sl, r3
    1ea8:	0e24      	lsrs	r4, r4, #24
    1eaa:	0015      	movs	r5, r2
    1eac:	00db      	lsls	r3, r3, #3
    1eae:	0e00      	lsrs	r0, r0, #24
    1eb0:	4689      	mov	r9, r1
    1eb2:	00f6      	lsls	r6, r6, #3
    1eb4:	28ff      	cmp	r0, #255	; 0xff
    1eb6:	d100      	bne.n	1eba <__aeabi_fsub+0x32>
    1eb8:	e08f      	b.n	1fda <__aeabi_fsub+0x152>
    1eba:	2101      	movs	r1, #1
    1ebc:	464f      	mov	r7, r9
    1ebe:	404f      	eors	r7, r1
    1ec0:	0039      	movs	r1, r7
    1ec2:	4291      	cmp	r1, r2
    1ec4:	d066      	beq.n	1f94 <__aeabi_fsub+0x10c>
    1ec6:	1a22      	subs	r2, r4, r0
    1ec8:	2a00      	cmp	r2, #0
    1eca:	dc00      	bgt.n	1ece <__aeabi_fsub+0x46>
    1ecc:	e09d      	b.n	200a <STACK_SIZE+0xa>
    1ece:	2800      	cmp	r0, #0
    1ed0:	d13d      	bne.n	1f4e <__aeabi_fsub+0xc6>
    1ed2:	2e00      	cmp	r6, #0
    1ed4:	d100      	bne.n	1ed8 <__aeabi_fsub+0x50>
    1ed6:	e08b      	b.n	1ff0 <__aeabi_fsub+0x168>
    1ed8:	1e51      	subs	r1, r2, #1
    1eda:	2900      	cmp	r1, #0
    1edc:	d000      	beq.n	1ee0 <__aeabi_fsub+0x58>
    1ede:	e0b5      	b.n	204c <STACK_SIZE+0x4c>
    1ee0:	2401      	movs	r4, #1
    1ee2:	1b9b      	subs	r3, r3, r6
    1ee4:	015a      	lsls	r2, r3, #5
    1ee6:	d544      	bpl.n	1f72 <__aeabi_fsub+0xea>
    1ee8:	019b      	lsls	r3, r3, #6
    1eea:	099f      	lsrs	r7, r3, #6
    1eec:	0038      	movs	r0, r7
    1eee:	f001 f843 	bl	2f78 <__clzsi2>
    1ef2:	3805      	subs	r0, #5
    1ef4:	4087      	lsls	r7, r0
    1ef6:	4284      	cmp	r4, r0
    1ef8:	dd00      	ble.n	1efc <__aeabi_fsub+0x74>
    1efa:	e096      	b.n	202a <STACK_SIZE+0x2a>
    1efc:	1b04      	subs	r4, r0, r4
    1efe:	003a      	movs	r2, r7
    1f00:	2020      	movs	r0, #32
    1f02:	3401      	adds	r4, #1
    1f04:	40e2      	lsrs	r2, r4
    1f06:	1b04      	subs	r4, r0, r4
    1f08:	40a7      	lsls	r7, r4
    1f0a:	003b      	movs	r3, r7
    1f0c:	1e5f      	subs	r7, r3, #1
    1f0e:	41bb      	sbcs	r3, r7
    1f10:	2400      	movs	r4, #0
    1f12:	4313      	orrs	r3, r2
    1f14:	075a      	lsls	r2, r3, #29
    1f16:	d004      	beq.n	1f22 <__aeabi_fsub+0x9a>
    1f18:	220f      	movs	r2, #15
    1f1a:	401a      	ands	r2, r3
    1f1c:	2a04      	cmp	r2, #4
    1f1e:	d000      	beq.n	1f22 <__aeabi_fsub+0x9a>
    1f20:	3304      	adds	r3, #4
    1f22:	015a      	lsls	r2, r3, #5
    1f24:	d527      	bpl.n	1f76 <__aeabi_fsub+0xee>
    1f26:	3401      	adds	r4, #1
    1f28:	2cff      	cmp	r4, #255	; 0xff
    1f2a:	d100      	bne.n	1f2e <__aeabi_fsub+0xa6>
    1f2c:	e079      	b.n	2022 <STACK_SIZE+0x22>
    1f2e:	2201      	movs	r2, #1
    1f30:	019b      	lsls	r3, r3, #6
    1f32:	0a5b      	lsrs	r3, r3, #9
    1f34:	b2e4      	uxtb	r4, r4
    1f36:	402a      	ands	r2, r5
    1f38:	025b      	lsls	r3, r3, #9
    1f3a:	05e4      	lsls	r4, r4, #23
    1f3c:	0a58      	lsrs	r0, r3, #9
    1f3e:	07d2      	lsls	r2, r2, #31
    1f40:	4320      	orrs	r0, r4
    1f42:	4310      	orrs	r0, r2
    1f44:	bc1c      	pop	{r2, r3, r4}
    1f46:	4690      	mov	r8, r2
    1f48:	4699      	mov	r9, r3
    1f4a:	46a2      	mov	sl, r4
    1f4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1f4e:	2cff      	cmp	r4, #255	; 0xff
    1f50:	d0e0      	beq.n	1f14 <__aeabi_fsub+0x8c>
    1f52:	2180      	movs	r1, #128	; 0x80
    1f54:	04c9      	lsls	r1, r1, #19
    1f56:	430e      	orrs	r6, r1
    1f58:	2a1b      	cmp	r2, #27
    1f5a:	dc7b      	bgt.n	2054 <STACK_SIZE+0x54>
    1f5c:	0031      	movs	r1, r6
    1f5e:	2020      	movs	r0, #32
    1f60:	40d1      	lsrs	r1, r2
    1f62:	1a82      	subs	r2, r0, r2
    1f64:	4096      	lsls	r6, r2
    1f66:	1e72      	subs	r2, r6, #1
    1f68:	4196      	sbcs	r6, r2
    1f6a:	430e      	orrs	r6, r1
    1f6c:	1b9b      	subs	r3, r3, r6
    1f6e:	015a      	lsls	r2, r3, #5
    1f70:	d4ba      	bmi.n	1ee8 <__aeabi_fsub+0x60>
    1f72:	075a      	lsls	r2, r3, #29
    1f74:	d1d0      	bne.n	1f18 <__aeabi_fsub+0x90>
    1f76:	2201      	movs	r2, #1
    1f78:	08df      	lsrs	r7, r3, #3
    1f7a:	402a      	ands	r2, r5
    1f7c:	2cff      	cmp	r4, #255	; 0xff
    1f7e:	d133      	bne.n	1fe8 <__aeabi_fsub+0x160>
    1f80:	2f00      	cmp	r7, #0
    1f82:	d100      	bne.n	1f86 <__aeabi_fsub+0xfe>
    1f84:	e0a8      	b.n	20d8 <STACK_SIZE+0xd8>
    1f86:	2380      	movs	r3, #128	; 0x80
    1f88:	03db      	lsls	r3, r3, #15
    1f8a:	433b      	orrs	r3, r7
    1f8c:	025b      	lsls	r3, r3, #9
    1f8e:	0a5b      	lsrs	r3, r3, #9
    1f90:	24ff      	movs	r4, #255	; 0xff
    1f92:	e7d1      	b.n	1f38 <__aeabi_fsub+0xb0>
    1f94:	1a21      	subs	r1, r4, r0
    1f96:	2900      	cmp	r1, #0
    1f98:	dd4c      	ble.n	2034 <STACK_SIZE+0x34>
    1f9a:	2800      	cmp	r0, #0
    1f9c:	d02a      	beq.n	1ff4 <__aeabi_fsub+0x16c>
    1f9e:	2cff      	cmp	r4, #255	; 0xff
    1fa0:	d0b8      	beq.n	1f14 <__aeabi_fsub+0x8c>
    1fa2:	2080      	movs	r0, #128	; 0x80
    1fa4:	04c0      	lsls	r0, r0, #19
    1fa6:	4306      	orrs	r6, r0
    1fa8:	291b      	cmp	r1, #27
    1faa:	dd00      	ble.n	1fae <__aeabi_fsub+0x126>
    1fac:	e0af      	b.n	210e <STACK_SIZE+0x10e>
    1fae:	0030      	movs	r0, r6
    1fb0:	2720      	movs	r7, #32
    1fb2:	40c8      	lsrs	r0, r1
    1fb4:	1a79      	subs	r1, r7, r1
    1fb6:	408e      	lsls	r6, r1
    1fb8:	1e71      	subs	r1, r6, #1
    1fba:	418e      	sbcs	r6, r1
    1fbc:	4306      	orrs	r6, r0
    1fbe:	199b      	adds	r3, r3, r6
    1fc0:	0159      	lsls	r1, r3, #5
    1fc2:	d5d6      	bpl.n	1f72 <__aeabi_fsub+0xea>
    1fc4:	3401      	adds	r4, #1
    1fc6:	2cff      	cmp	r4, #255	; 0xff
    1fc8:	d100      	bne.n	1fcc <__aeabi_fsub+0x144>
    1fca:	e085      	b.n	20d8 <STACK_SIZE+0xd8>
    1fcc:	2201      	movs	r2, #1
    1fce:	497a      	ldr	r1, [pc, #488]	; (21b8 <STACK_SIZE+0x1b8>)
    1fd0:	401a      	ands	r2, r3
    1fd2:	085b      	lsrs	r3, r3, #1
    1fd4:	400b      	ands	r3, r1
    1fd6:	4313      	orrs	r3, r2
    1fd8:	e79c      	b.n	1f14 <__aeabi_fsub+0x8c>
    1fda:	2e00      	cmp	r6, #0
    1fdc:	d000      	beq.n	1fe0 <__aeabi_fsub+0x158>
    1fde:	e770      	b.n	1ec2 <__aeabi_fsub+0x3a>
    1fe0:	e76b      	b.n	1eba <__aeabi_fsub+0x32>
    1fe2:	1e3b      	subs	r3, r7, #0
    1fe4:	d1c5      	bne.n	1f72 <__aeabi_fsub+0xea>
    1fe6:	2200      	movs	r2, #0
    1fe8:	027b      	lsls	r3, r7, #9
    1fea:	0a5b      	lsrs	r3, r3, #9
    1fec:	b2e4      	uxtb	r4, r4
    1fee:	e7a3      	b.n	1f38 <__aeabi_fsub+0xb0>
    1ff0:	0014      	movs	r4, r2
    1ff2:	e78f      	b.n	1f14 <__aeabi_fsub+0x8c>
    1ff4:	2e00      	cmp	r6, #0
    1ff6:	d04d      	beq.n	2094 <STACK_SIZE+0x94>
    1ff8:	1e48      	subs	r0, r1, #1
    1ffa:	2800      	cmp	r0, #0
    1ffc:	d157      	bne.n	20ae <STACK_SIZE+0xae>
    1ffe:	199b      	adds	r3, r3, r6
    2000:	2401      	movs	r4, #1
    2002:	015a      	lsls	r2, r3, #5
    2004:	d5b5      	bpl.n	1f72 <__aeabi_fsub+0xea>
    2006:	2402      	movs	r4, #2
    2008:	e7e0      	b.n	1fcc <__aeabi_fsub+0x144>
    200a:	2a00      	cmp	r2, #0
    200c:	d125      	bne.n	205a <STACK_SIZE+0x5a>
    200e:	1c62      	adds	r2, r4, #1
    2010:	b2d2      	uxtb	r2, r2
    2012:	2a01      	cmp	r2, #1
    2014:	dd72      	ble.n	20fc <STACK_SIZE+0xfc>
    2016:	1b9f      	subs	r7, r3, r6
    2018:	017a      	lsls	r2, r7, #5
    201a:	d535      	bpl.n	2088 <STACK_SIZE+0x88>
    201c:	1af7      	subs	r7, r6, r3
    201e:	000d      	movs	r5, r1
    2020:	e764      	b.n	1eec <__aeabi_fsub+0x64>
    2022:	2201      	movs	r2, #1
    2024:	2300      	movs	r3, #0
    2026:	402a      	ands	r2, r5
    2028:	e786      	b.n	1f38 <__aeabi_fsub+0xb0>
    202a:	003b      	movs	r3, r7
    202c:	4a63      	ldr	r2, [pc, #396]	; (21bc <STACK_SIZE+0x1bc>)
    202e:	1a24      	subs	r4, r4, r0
    2030:	4013      	ands	r3, r2
    2032:	e76f      	b.n	1f14 <__aeabi_fsub+0x8c>
    2034:	2900      	cmp	r1, #0
    2036:	d16c      	bne.n	2112 <STACK_SIZE+0x112>
    2038:	1c61      	adds	r1, r4, #1
    203a:	b2c8      	uxtb	r0, r1
    203c:	2801      	cmp	r0, #1
    203e:	dd4e      	ble.n	20de <STACK_SIZE+0xde>
    2040:	29ff      	cmp	r1, #255	; 0xff
    2042:	d049      	beq.n	20d8 <STACK_SIZE+0xd8>
    2044:	199b      	adds	r3, r3, r6
    2046:	085b      	lsrs	r3, r3, #1
    2048:	000c      	movs	r4, r1
    204a:	e763      	b.n	1f14 <__aeabi_fsub+0x8c>
    204c:	2aff      	cmp	r2, #255	; 0xff
    204e:	d041      	beq.n	20d4 <STACK_SIZE+0xd4>
    2050:	000a      	movs	r2, r1
    2052:	e781      	b.n	1f58 <__aeabi_fsub+0xd0>
    2054:	2601      	movs	r6, #1
    2056:	1b9b      	subs	r3, r3, r6
    2058:	e789      	b.n	1f6e <__aeabi_fsub+0xe6>
    205a:	2c00      	cmp	r4, #0
    205c:	d01c      	beq.n	2098 <STACK_SIZE+0x98>
    205e:	28ff      	cmp	r0, #255	; 0xff
    2060:	d021      	beq.n	20a6 <STACK_SIZE+0xa6>
    2062:	2480      	movs	r4, #128	; 0x80
    2064:	04e4      	lsls	r4, r4, #19
    2066:	4252      	negs	r2, r2
    2068:	4323      	orrs	r3, r4
    206a:	2a1b      	cmp	r2, #27
    206c:	dd00      	ble.n	2070 <STACK_SIZE+0x70>
    206e:	e096      	b.n	219e <STACK_SIZE+0x19e>
    2070:	001c      	movs	r4, r3
    2072:	2520      	movs	r5, #32
    2074:	40d4      	lsrs	r4, r2
    2076:	1aaa      	subs	r2, r5, r2
    2078:	4093      	lsls	r3, r2
    207a:	1e5a      	subs	r2, r3, #1
    207c:	4193      	sbcs	r3, r2
    207e:	4323      	orrs	r3, r4
    2080:	1af3      	subs	r3, r6, r3
    2082:	0004      	movs	r4, r0
    2084:	000d      	movs	r5, r1
    2086:	e72d      	b.n	1ee4 <__aeabi_fsub+0x5c>
    2088:	2f00      	cmp	r7, #0
    208a:	d000      	beq.n	208e <STACK_SIZE+0x8e>
    208c:	e72e      	b.n	1eec <__aeabi_fsub+0x64>
    208e:	2200      	movs	r2, #0
    2090:	2400      	movs	r4, #0
    2092:	e7a9      	b.n	1fe8 <__aeabi_fsub+0x160>
    2094:	000c      	movs	r4, r1
    2096:	e73d      	b.n	1f14 <__aeabi_fsub+0x8c>
    2098:	2b00      	cmp	r3, #0
    209a:	d058      	beq.n	214e <STACK_SIZE+0x14e>
    209c:	43d2      	mvns	r2, r2
    209e:	2a00      	cmp	r2, #0
    20a0:	d0ee      	beq.n	2080 <STACK_SIZE+0x80>
    20a2:	28ff      	cmp	r0, #255	; 0xff
    20a4:	d1e1      	bne.n	206a <STACK_SIZE+0x6a>
    20a6:	0033      	movs	r3, r6
    20a8:	24ff      	movs	r4, #255	; 0xff
    20aa:	000d      	movs	r5, r1
    20ac:	e732      	b.n	1f14 <__aeabi_fsub+0x8c>
    20ae:	29ff      	cmp	r1, #255	; 0xff
    20b0:	d010      	beq.n	20d4 <STACK_SIZE+0xd4>
    20b2:	0001      	movs	r1, r0
    20b4:	e778      	b.n	1fa8 <__aeabi_fsub+0x120>
    20b6:	2b00      	cmp	r3, #0
    20b8:	d06e      	beq.n	2198 <STACK_SIZE+0x198>
    20ba:	24ff      	movs	r4, #255	; 0xff
    20bc:	2e00      	cmp	r6, #0
    20be:	d100      	bne.n	20c2 <STACK_SIZE+0xc2>
    20c0:	e728      	b.n	1f14 <__aeabi_fsub+0x8c>
    20c2:	2280      	movs	r2, #128	; 0x80
    20c4:	4651      	mov	r1, sl
    20c6:	03d2      	lsls	r2, r2, #15
    20c8:	4211      	tst	r1, r2
    20ca:	d003      	beq.n	20d4 <STACK_SIZE+0xd4>
    20cc:	4661      	mov	r1, ip
    20ce:	4211      	tst	r1, r2
    20d0:	d100      	bne.n	20d4 <STACK_SIZE+0xd4>
    20d2:	0033      	movs	r3, r6
    20d4:	24ff      	movs	r4, #255	; 0xff
    20d6:	e71d      	b.n	1f14 <__aeabi_fsub+0x8c>
    20d8:	24ff      	movs	r4, #255	; 0xff
    20da:	2300      	movs	r3, #0
    20dc:	e72c      	b.n	1f38 <__aeabi_fsub+0xb0>
    20de:	2c00      	cmp	r4, #0
    20e0:	d1e9      	bne.n	20b6 <STACK_SIZE+0xb6>
    20e2:	2b00      	cmp	r3, #0
    20e4:	d063      	beq.n	21ae <STACK_SIZE+0x1ae>
    20e6:	2e00      	cmp	r6, #0
    20e8:	d100      	bne.n	20ec <STACK_SIZE+0xec>
    20ea:	e713      	b.n	1f14 <__aeabi_fsub+0x8c>
    20ec:	199b      	adds	r3, r3, r6
    20ee:	015a      	lsls	r2, r3, #5
    20f0:	d400      	bmi.n	20f4 <STACK_SIZE+0xf4>
    20f2:	e73e      	b.n	1f72 <__aeabi_fsub+0xea>
    20f4:	4a31      	ldr	r2, [pc, #196]	; (21bc <STACK_SIZE+0x1bc>)
    20f6:	000c      	movs	r4, r1
    20f8:	4013      	ands	r3, r2
    20fa:	e70b      	b.n	1f14 <__aeabi_fsub+0x8c>
    20fc:	2c00      	cmp	r4, #0
    20fe:	d11e      	bne.n	213e <STACK_SIZE+0x13e>
    2100:	2b00      	cmp	r3, #0
    2102:	d12f      	bne.n	2164 <STACK_SIZE+0x164>
    2104:	2e00      	cmp	r6, #0
    2106:	d04f      	beq.n	21a8 <STACK_SIZE+0x1a8>
    2108:	0033      	movs	r3, r6
    210a:	000d      	movs	r5, r1
    210c:	e702      	b.n	1f14 <__aeabi_fsub+0x8c>
    210e:	2601      	movs	r6, #1
    2110:	e755      	b.n	1fbe <__aeabi_fsub+0x136>
    2112:	2c00      	cmp	r4, #0
    2114:	d11f      	bne.n	2156 <STACK_SIZE+0x156>
    2116:	2b00      	cmp	r3, #0
    2118:	d043      	beq.n	21a2 <STACK_SIZE+0x1a2>
    211a:	43c9      	mvns	r1, r1
    211c:	2900      	cmp	r1, #0
    211e:	d00b      	beq.n	2138 <STACK_SIZE+0x138>
    2120:	28ff      	cmp	r0, #255	; 0xff
    2122:	d039      	beq.n	2198 <STACK_SIZE+0x198>
    2124:	291b      	cmp	r1, #27
    2126:	dc44      	bgt.n	21b2 <STACK_SIZE+0x1b2>
    2128:	001c      	movs	r4, r3
    212a:	2720      	movs	r7, #32
    212c:	40cc      	lsrs	r4, r1
    212e:	1a79      	subs	r1, r7, r1
    2130:	408b      	lsls	r3, r1
    2132:	1e59      	subs	r1, r3, #1
    2134:	418b      	sbcs	r3, r1
    2136:	4323      	orrs	r3, r4
    2138:	199b      	adds	r3, r3, r6
    213a:	0004      	movs	r4, r0
    213c:	e740      	b.n	1fc0 <__aeabi_fsub+0x138>
    213e:	2b00      	cmp	r3, #0
    2140:	d11a      	bne.n	2178 <STACK_SIZE+0x178>
    2142:	2e00      	cmp	r6, #0
    2144:	d124      	bne.n	2190 <STACK_SIZE+0x190>
    2146:	2780      	movs	r7, #128	; 0x80
    2148:	2200      	movs	r2, #0
    214a:	03ff      	lsls	r7, r7, #15
    214c:	e71b      	b.n	1f86 <__aeabi_fsub+0xfe>
    214e:	0033      	movs	r3, r6
    2150:	0004      	movs	r4, r0
    2152:	000d      	movs	r5, r1
    2154:	e6de      	b.n	1f14 <__aeabi_fsub+0x8c>
    2156:	28ff      	cmp	r0, #255	; 0xff
    2158:	d01e      	beq.n	2198 <STACK_SIZE+0x198>
    215a:	2480      	movs	r4, #128	; 0x80
    215c:	04e4      	lsls	r4, r4, #19
    215e:	4249      	negs	r1, r1
    2160:	4323      	orrs	r3, r4
    2162:	e7df      	b.n	2124 <STACK_SIZE+0x124>
    2164:	2e00      	cmp	r6, #0
    2166:	d100      	bne.n	216a <STACK_SIZE+0x16a>
    2168:	e6d4      	b.n	1f14 <__aeabi_fsub+0x8c>
    216a:	1b9f      	subs	r7, r3, r6
    216c:	017a      	lsls	r2, r7, #5
    216e:	d400      	bmi.n	2172 <STACK_SIZE+0x172>
    2170:	e737      	b.n	1fe2 <__aeabi_fsub+0x15a>
    2172:	1af3      	subs	r3, r6, r3
    2174:	000d      	movs	r5, r1
    2176:	e6cd      	b.n	1f14 <__aeabi_fsub+0x8c>
    2178:	24ff      	movs	r4, #255	; 0xff
    217a:	2e00      	cmp	r6, #0
    217c:	d100      	bne.n	2180 <STACK_SIZE+0x180>
    217e:	e6c9      	b.n	1f14 <__aeabi_fsub+0x8c>
    2180:	2280      	movs	r2, #128	; 0x80
    2182:	4650      	mov	r0, sl
    2184:	03d2      	lsls	r2, r2, #15
    2186:	4210      	tst	r0, r2
    2188:	d0a4      	beq.n	20d4 <STACK_SIZE+0xd4>
    218a:	4660      	mov	r0, ip
    218c:	4210      	tst	r0, r2
    218e:	d1a1      	bne.n	20d4 <STACK_SIZE+0xd4>
    2190:	0033      	movs	r3, r6
    2192:	000d      	movs	r5, r1
    2194:	24ff      	movs	r4, #255	; 0xff
    2196:	e6bd      	b.n	1f14 <__aeabi_fsub+0x8c>
    2198:	0033      	movs	r3, r6
    219a:	24ff      	movs	r4, #255	; 0xff
    219c:	e6ba      	b.n	1f14 <__aeabi_fsub+0x8c>
    219e:	2301      	movs	r3, #1
    21a0:	e76e      	b.n	2080 <STACK_SIZE+0x80>
    21a2:	0033      	movs	r3, r6
    21a4:	0004      	movs	r4, r0
    21a6:	e6b5      	b.n	1f14 <__aeabi_fsub+0x8c>
    21a8:	2700      	movs	r7, #0
    21aa:	2200      	movs	r2, #0
    21ac:	e71c      	b.n	1fe8 <__aeabi_fsub+0x160>
    21ae:	0033      	movs	r3, r6
    21b0:	e6b0      	b.n	1f14 <__aeabi_fsub+0x8c>
    21b2:	2301      	movs	r3, #1
    21b4:	e7c0      	b.n	2138 <STACK_SIZE+0x138>
    21b6:	46c0      	nop			; (mov r8, r8)
    21b8:	7dffffff 	.word	0x7dffffff
    21bc:	fbffffff 	.word	0xfbffffff

000021c0 <__aeabi_f2iz>:
    21c0:	0241      	lsls	r1, r0, #9
    21c2:	0043      	lsls	r3, r0, #1
    21c4:	0fc2      	lsrs	r2, r0, #31
    21c6:	0a49      	lsrs	r1, r1, #9
    21c8:	0e1b      	lsrs	r3, r3, #24
    21ca:	2000      	movs	r0, #0
    21cc:	2b7e      	cmp	r3, #126	; 0x7e
    21ce:	dd0d      	ble.n	21ec <__aeabi_f2iz+0x2c>
    21d0:	2b9d      	cmp	r3, #157	; 0x9d
    21d2:	dc0c      	bgt.n	21ee <__aeabi_f2iz+0x2e>
    21d4:	2080      	movs	r0, #128	; 0x80
    21d6:	0400      	lsls	r0, r0, #16
    21d8:	4301      	orrs	r1, r0
    21da:	2b95      	cmp	r3, #149	; 0x95
    21dc:	dc0a      	bgt.n	21f4 <__aeabi_f2iz+0x34>
    21de:	2096      	movs	r0, #150	; 0x96
    21e0:	1ac3      	subs	r3, r0, r3
    21e2:	40d9      	lsrs	r1, r3
    21e4:	4248      	negs	r0, r1
    21e6:	2a00      	cmp	r2, #0
    21e8:	d100      	bne.n	21ec <__aeabi_f2iz+0x2c>
    21ea:	0008      	movs	r0, r1
    21ec:	4770      	bx	lr
    21ee:	4b03      	ldr	r3, [pc, #12]	; (21fc <__aeabi_f2iz+0x3c>)
    21f0:	18d0      	adds	r0, r2, r3
    21f2:	e7fb      	b.n	21ec <__aeabi_f2iz+0x2c>
    21f4:	3b96      	subs	r3, #150	; 0x96
    21f6:	4099      	lsls	r1, r3
    21f8:	e7f4      	b.n	21e4 <__aeabi_f2iz+0x24>
    21fa:	46c0      	nop			; (mov r8, r8)
    21fc:	7fffffff 	.word	0x7fffffff

00002200 <__aeabi_i2f>:
    2200:	b570      	push	{r4, r5, r6, lr}
    2202:	2800      	cmp	r0, #0
    2204:	d030      	beq.n	2268 <__aeabi_i2f+0x68>
    2206:	17c3      	asrs	r3, r0, #31
    2208:	18c4      	adds	r4, r0, r3
    220a:	405c      	eors	r4, r3
    220c:	0fc5      	lsrs	r5, r0, #31
    220e:	0020      	movs	r0, r4
    2210:	f000 feb2 	bl	2f78 <__clzsi2>
    2214:	239e      	movs	r3, #158	; 0x9e
    2216:	1a1b      	subs	r3, r3, r0
    2218:	2b96      	cmp	r3, #150	; 0x96
    221a:	dc0d      	bgt.n	2238 <__aeabi_i2f+0x38>
    221c:	2296      	movs	r2, #150	; 0x96
    221e:	1ad2      	subs	r2, r2, r3
    2220:	4094      	lsls	r4, r2
    2222:	002a      	movs	r2, r5
    2224:	0264      	lsls	r4, r4, #9
    2226:	0a64      	lsrs	r4, r4, #9
    2228:	b2db      	uxtb	r3, r3
    222a:	0264      	lsls	r4, r4, #9
    222c:	05db      	lsls	r3, r3, #23
    222e:	0a60      	lsrs	r0, r4, #9
    2230:	07d2      	lsls	r2, r2, #31
    2232:	4318      	orrs	r0, r3
    2234:	4310      	orrs	r0, r2
    2236:	bd70      	pop	{r4, r5, r6, pc}
    2238:	2b99      	cmp	r3, #153	; 0x99
    223a:	dc19      	bgt.n	2270 <__aeabi_i2f+0x70>
    223c:	2299      	movs	r2, #153	; 0x99
    223e:	1ad2      	subs	r2, r2, r3
    2240:	2a00      	cmp	r2, #0
    2242:	dd29      	ble.n	2298 <__aeabi_i2f+0x98>
    2244:	4094      	lsls	r4, r2
    2246:	0022      	movs	r2, r4
    2248:	4c14      	ldr	r4, [pc, #80]	; (229c <__aeabi_i2f+0x9c>)
    224a:	4014      	ands	r4, r2
    224c:	0751      	lsls	r1, r2, #29
    224e:	d004      	beq.n	225a <__aeabi_i2f+0x5a>
    2250:	210f      	movs	r1, #15
    2252:	400a      	ands	r2, r1
    2254:	2a04      	cmp	r2, #4
    2256:	d000      	beq.n	225a <__aeabi_i2f+0x5a>
    2258:	3404      	adds	r4, #4
    225a:	0162      	lsls	r2, r4, #5
    225c:	d413      	bmi.n	2286 <__aeabi_i2f+0x86>
    225e:	01a4      	lsls	r4, r4, #6
    2260:	0a64      	lsrs	r4, r4, #9
    2262:	b2db      	uxtb	r3, r3
    2264:	002a      	movs	r2, r5
    2266:	e7e0      	b.n	222a <__aeabi_i2f+0x2a>
    2268:	2200      	movs	r2, #0
    226a:	2300      	movs	r3, #0
    226c:	2400      	movs	r4, #0
    226e:	e7dc      	b.n	222a <__aeabi_i2f+0x2a>
    2270:	2205      	movs	r2, #5
    2272:	0021      	movs	r1, r4
    2274:	1a12      	subs	r2, r2, r0
    2276:	40d1      	lsrs	r1, r2
    2278:	22b9      	movs	r2, #185	; 0xb9
    227a:	1ad2      	subs	r2, r2, r3
    227c:	4094      	lsls	r4, r2
    227e:	1e62      	subs	r2, r4, #1
    2280:	4194      	sbcs	r4, r2
    2282:	430c      	orrs	r4, r1
    2284:	e7da      	b.n	223c <__aeabi_i2f+0x3c>
    2286:	4b05      	ldr	r3, [pc, #20]	; (229c <__aeabi_i2f+0x9c>)
    2288:	002a      	movs	r2, r5
    228a:	401c      	ands	r4, r3
    228c:	239f      	movs	r3, #159	; 0x9f
    228e:	01a4      	lsls	r4, r4, #6
    2290:	1a1b      	subs	r3, r3, r0
    2292:	0a64      	lsrs	r4, r4, #9
    2294:	b2db      	uxtb	r3, r3
    2296:	e7c8      	b.n	222a <__aeabi_i2f+0x2a>
    2298:	0022      	movs	r2, r4
    229a:	e7d5      	b.n	2248 <__aeabi_i2f+0x48>
    229c:	fbffffff 	.word	0xfbffffff

000022a0 <__aeabi_dadd>:
    22a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    22a2:	4645      	mov	r5, r8
    22a4:	46de      	mov	lr, fp
    22a6:	4657      	mov	r7, sl
    22a8:	464e      	mov	r6, r9
    22aa:	030c      	lsls	r4, r1, #12
    22ac:	b5e0      	push	{r5, r6, r7, lr}
    22ae:	004e      	lsls	r6, r1, #1
    22b0:	0fc9      	lsrs	r1, r1, #31
    22b2:	4688      	mov	r8, r1
    22b4:	000d      	movs	r5, r1
    22b6:	0a61      	lsrs	r1, r4, #9
    22b8:	0f44      	lsrs	r4, r0, #29
    22ba:	430c      	orrs	r4, r1
    22bc:	00c7      	lsls	r7, r0, #3
    22be:	0319      	lsls	r1, r3, #12
    22c0:	0058      	lsls	r0, r3, #1
    22c2:	0fdb      	lsrs	r3, r3, #31
    22c4:	469b      	mov	fp, r3
    22c6:	0a4b      	lsrs	r3, r1, #9
    22c8:	0f51      	lsrs	r1, r2, #29
    22ca:	430b      	orrs	r3, r1
    22cc:	0d76      	lsrs	r6, r6, #21
    22ce:	0d40      	lsrs	r0, r0, #21
    22d0:	0019      	movs	r1, r3
    22d2:	00d2      	lsls	r2, r2, #3
    22d4:	45d8      	cmp	r8, fp
    22d6:	d100      	bne.n	22da <__aeabi_dadd+0x3a>
    22d8:	e0ae      	b.n	2438 <__aeabi_dadd+0x198>
    22da:	1a35      	subs	r5, r6, r0
    22dc:	2d00      	cmp	r5, #0
    22de:	dc00      	bgt.n	22e2 <__aeabi_dadd+0x42>
    22e0:	e0f6      	b.n	24d0 <__aeabi_dadd+0x230>
    22e2:	2800      	cmp	r0, #0
    22e4:	d10f      	bne.n	2306 <__aeabi_dadd+0x66>
    22e6:	4313      	orrs	r3, r2
    22e8:	d100      	bne.n	22ec <__aeabi_dadd+0x4c>
    22ea:	e0db      	b.n	24a4 <__aeabi_dadd+0x204>
    22ec:	1e6b      	subs	r3, r5, #1
    22ee:	2b00      	cmp	r3, #0
    22f0:	d000      	beq.n	22f4 <__aeabi_dadd+0x54>
    22f2:	e137      	b.n	2564 <__aeabi_dadd+0x2c4>
    22f4:	1aba      	subs	r2, r7, r2
    22f6:	4297      	cmp	r7, r2
    22f8:	41bf      	sbcs	r7, r7
    22fa:	1a64      	subs	r4, r4, r1
    22fc:	427f      	negs	r7, r7
    22fe:	1be4      	subs	r4, r4, r7
    2300:	2601      	movs	r6, #1
    2302:	0017      	movs	r7, r2
    2304:	e024      	b.n	2350 <__aeabi_dadd+0xb0>
    2306:	4bc6      	ldr	r3, [pc, #792]	; (2620 <__aeabi_dadd+0x380>)
    2308:	429e      	cmp	r6, r3
    230a:	d04d      	beq.n	23a8 <__aeabi_dadd+0x108>
    230c:	2380      	movs	r3, #128	; 0x80
    230e:	041b      	lsls	r3, r3, #16
    2310:	4319      	orrs	r1, r3
    2312:	2d38      	cmp	r5, #56	; 0x38
    2314:	dd00      	ble.n	2318 <__aeabi_dadd+0x78>
    2316:	e107      	b.n	2528 <__aeabi_dadd+0x288>
    2318:	2d1f      	cmp	r5, #31
    231a:	dd00      	ble.n	231e <__aeabi_dadd+0x7e>
    231c:	e138      	b.n	2590 <__aeabi_dadd+0x2f0>
    231e:	2020      	movs	r0, #32
    2320:	1b43      	subs	r3, r0, r5
    2322:	469a      	mov	sl, r3
    2324:	000b      	movs	r3, r1
    2326:	4650      	mov	r0, sl
    2328:	4083      	lsls	r3, r0
    232a:	4699      	mov	r9, r3
    232c:	0013      	movs	r3, r2
    232e:	4648      	mov	r0, r9
    2330:	40eb      	lsrs	r3, r5
    2332:	4318      	orrs	r0, r3
    2334:	0003      	movs	r3, r0
    2336:	4650      	mov	r0, sl
    2338:	4082      	lsls	r2, r0
    233a:	1e50      	subs	r0, r2, #1
    233c:	4182      	sbcs	r2, r0
    233e:	40e9      	lsrs	r1, r5
    2340:	431a      	orrs	r2, r3
    2342:	1aba      	subs	r2, r7, r2
    2344:	1a61      	subs	r1, r4, r1
    2346:	4297      	cmp	r7, r2
    2348:	41a4      	sbcs	r4, r4
    234a:	0017      	movs	r7, r2
    234c:	4264      	negs	r4, r4
    234e:	1b0c      	subs	r4, r1, r4
    2350:	0223      	lsls	r3, r4, #8
    2352:	d562      	bpl.n	241a <__aeabi_dadd+0x17a>
    2354:	0264      	lsls	r4, r4, #9
    2356:	0a65      	lsrs	r5, r4, #9
    2358:	2d00      	cmp	r5, #0
    235a:	d100      	bne.n	235e <__aeabi_dadd+0xbe>
    235c:	e0df      	b.n	251e <__aeabi_dadd+0x27e>
    235e:	0028      	movs	r0, r5
    2360:	f000 fe0a 	bl	2f78 <__clzsi2>
    2364:	0003      	movs	r3, r0
    2366:	3b08      	subs	r3, #8
    2368:	2b1f      	cmp	r3, #31
    236a:	dd00      	ble.n	236e <__aeabi_dadd+0xce>
    236c:	e0d2      	b.n	2514 <__aeabi_dadd+0x274>
    236e:	2220      	movs	r2, #32
    2370:	003c      	movs	r4, r7
    2372:	1ad2      	subs	r2, r2, r3
    2374:	409d      	lsls	r5, r3
    2376:	40d4      	lsrs	r4, r2
    2378:	409f      	lsls	r7, r3
    237a:	4325      	orrs	r5, r4
    237c:	429e      	cmp	r6, r3
    237e:	dd00      	ble.n	2382 <__aeabi_dadd+0xe2>
    2380:	e0c4      	b.n	250c <__aeabi_dadd+0x26c>
    2382:	1b9e      	subs	r6, r3, r6
    2384:	1c73      	adds	r3, r6, #1
    2386:	2b1f      	cmp	r3, #31
    2388:	dd00      	ble.n	238c <__aeabi_dadd+0xec>
    238a:	e0f1      	b.n	2570 <__aeabi_dadd+0x2d0>
    238c:	2220      	movs	r2, #32
    238e:	0038      	movs	r0, r7
    2390:	0029      	movs	r1, r5
    2392:	1ad2      	subs	r2, r2, r3
    2394:	40d8      	lsrs	r0, r3
    2396:	4091      	lsls	r1, r2
    2398:	4097      	lsls	r7, r2
    239a:	002c      	movs	r4, r5
    239c:	4301      	orrs	r1, r0
    239e:	1e78      	subs	r0, r7, #1
    23a0:	4187      	sbcs	r7, r0
    23a2:	40dc      	lsrs	r4, r3
    23a4:	2600      	movs	r6, #0
    23a6:	430f      	orrs	r7, r1
    23a8:	077b      	lsls	r3, r7, #29
    23aa:	d009      	beq.n	23c0 <__aeabi_dadd+0x120>
    23ac:	230f      	movs	r3, #15
    23ae:	403b      	ands	r3, r7
    23b0:	2b04      	cmp	r3, #4
    23b2:	d005      	beq.n	23c0 <__aeabi_dadd+0x120>
    23b4:	1d3b      	adds	r3, r7, #4
    23b6:	42bb      	cmp	r3, r7
    23b8:	41bf      	sbcs	r7, r7
    23ba:	427f      	negs	r7, r7
    23bc:	19e4      	adds	r4, r4, r7
    23be:	001f      	movs	r7, r3
    23c0:	0223      	lsls	r3, r4, #8
    23c2:	d52c      	bpl.n	241e <__aeabi_dadd+0x17e>
    23c4:	4b96      	ldr	r3, [pc, #600]	; (2620 <__aeabi_dadd+0x380>)
    23c6:	3601      	adds	r6, #1
    23c8:	429e      	cmp	r6, r3
    23ca:	d100      	bne.n	23ce <__aeabi_dadd+0x12e>
    23cc:	e09a      	b.n	2504 <__aeabi_dadd+0x264>
    23ce:	4645      	mov	r5, r8
    23d0:	4b94      	ldr	r3, [pc, #592]	; (2624 <__aeabi_dadd+0x384>)
    23d2:	08ff      	lsrs	r7, r7, #3
    23d4:	401c      	ands	r4, r3
    23d6:	0760      	lsls	r0, r4, #29
    23d8:	0576      	lsls	r6, r6, #21
    23da:	0264      	lsls	r4, r4, #9
    23dc:	4307      	orrs	r7, r0
    23de:	0b24      	lsrs	r4, r4, #12
    23e0:	0d76      	lsrs	r6, r6, #21
    23e2:	2100      	movs	r1, #0
    23e4:	0324      	lsls	r4, r4, #12
    23e6:	0b23      	lsrs	r3, r4, #12
    23e8:	0d0c      	lsrs	r4, r1, #20
    23ea:	4a8f      	ldr	r2, [pc, #572]	; (2628 <__aeabi_dadd+0x388>)
    23ec:	0524      	lsls	r4, r4, #20
    23ee:	431c      	orrs	r4, r3
    23f0:	4014      	ands	r4, r2
    23f2:	0533      	lsls	r3, r6, #20
    23f4:	4323      	orrs	r3, r4
    23f6:	005b      	lsls	r3, r3, #1
    23f8:	07ed      	lsls	r5, r5, #31
    23fa:	085b      	lsrs	r3, r3, #1
    23fc:	432b      	orrs	r3, r5
    23fe:	0038      	movs	r0, r7
    2400:	0019      	movs	r1, r3
    2402:	bc3c      	pop	{r2, r3, r4, r5}
    2404:	4690      	mov	r8, r2
    2406:	4699      	mov	r9, r3
    2408:	46a2      	mov	sl, r4
    240a:	46ab      	mov	fp, r5
    240c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    240e:	4664      	mov	r4, ip
    2410:	4304      	orrs	r4, r0
    2412:	d100      	bne.n	2416 <__aeabi_dadd+0x176>
    2414:	e211      	b.n	283a <__aeabi_dadd+0x59a>
    2416:	0004      	movs	r4, r0
    2418:	4667      	mov	r7, ip
    241a:	077b      	lsls	r3, r7, #29
    241c:	d1c6      	bne.n	23ac <__aeabi_dadd+0x10c>
    241e:	4645      	mov	r5, r8
    2420:	0760      	lsls	r0, r4, #29
    2422:	08ff      	lsrs	r7, r7, #3
    2424:	4307      	orrs	r7, r0
    2426:	08e4      	lsrs	r4, r4, #3
    2428:	4b7d      	ldr	r3, [pc, #500]	; (2620 <__aeabi_dadd+0x380>)
    242a:	429e      	cmp	r6, r3
    242c:	d030      	beq.n	2490 <__aeabi_dadd+0x1f0>
    242e:	0324      	lsls	r4, r4, #12
    2430:	0576      	lsls	r6, r6, #21
    2432:	0b24      	lsrs	r4, r4, #12
    2434:	0d76      	lsrs	r6, r6, #21
    2436:	e7d4      	b.n	23e2 <__aeabi_dadd+0x142>
    2438:	1a33      	subs	r3, r6, r0
    243a:	469a      	mov	sl, r3
    243c:	2b00      	cmp	r3, #0
    243e:	dd78      	ble.n	2532 <__aeabi_dadd+0x292>
    2440:	2800      	cmp	r0, #0
    2442:	d031      	beq.n	24a8 <__aeabi_dadd+0x208>
    2444:	4876      	ldr	r0, [pc, #472]	; (2620 <__aeabi_dadd+0x380>)
    2446:	4286      	cmp	r6, r0
    2448:	d0ae      	beq.n	23a8 <__aeabi_dadd+0x108>
    244a:	2080      	movs	r0, #128	; 0x80
    244c:	0400      	lsls	r0, r0, #16
    244e:	4301      	orrs	r1, r0
    2450:	4653      	mov	r3, sl
    2452:	2b38      	cmp	r3, #56	; 0x38
    2454:	dc00      	bgt.n	2458 <__aeabi_dadd+0x1b8>
    2456:	e0e9      	b.n	262c <__aeabi_dadd+0x38c>
    2458:	430a      	orrs	r2, r1
    245a:	1e51      	subs	r1, r2, #1
    245c:	418a      	sbcs	r2, r1
    245e:	2100      	movs	r1, #0
    2460:	19d2      	adds	r2, r2, r7
    2462:	42ba      	cmp	r2, r7
    2464:	41bf      	sbcs	r7, r7
    2466:	1909      	adds	r1, r1, r4
    2468:	427c      	negs	r4, r7
    246a:	0017      	movs	r7, r2
    246c:	190c      	adds	r4, r1, r4
    246e:	0223      	lsls	r3, r4, #8
    2470:	d5d3      	bpl.n	241a <__aeabi_dadd+0x17a>
    2472:	4b6b      	ldr	r3, [pc, #428]	; (2620 <__aeabi_dadd+0x380>)
    2474:	3601      	adds	r6, #1
    2476:	429e      	cmp	r6, r3
    2478:	d100      	bne.n	247c <__aeabi_dadd+0x1dc>
    247a:	e13a      	b.n	26f2 <__aeabi_dadd+0x452>
    247c:	2001      	movs	r0, #1
    247e:	4b69      	ldr	r3, [pc, #420]	; (2624 <__aeabi_dadd+0x384>)
    2480:	401c      	ands	r4, r3
    2482:	087b      	lsrs	r3, r7, #1
    2484:	4007      	ands	r7, r0
    2486:	431f      	orrs	r7, r3
    2488:	07e0      	lsls	r0, r4, #31
    248a:	4307      	orrs	r7, r0
    248c:	0864      	lsrs	r4, r4, #1
    248e:	e78b      	b.n	23a8 <__aeabi_dadd+0x108>
    2490:	0023      	movs	r3, r4
    2492:	433b      	orrs	r3, r7
    2494:	d100      	bne.n	2498 <__aeabi_dadd+0x1f8>
    2496:	e1cb      	b.n	2830 <__aeabi_dadd+0x590>
    2498:	2280      	movs	r2, #128	; 0x80
    249a:	0312      	lsls	r2, r2, #12
    249c:	4314      	orrs	r4, r2
    249e:	0324      	lsls	r4, r4, #12
    24a0:	0b24      	lsrs	r4, r4, #12
    24a2:	e79e      	b.n	23e2 <__aeabi_dadd+0x142>
    24a4:	002e      	movs	r6, r5
    24a6:	e77f      	b.n	23a8 <__aeabi_dadd+0x108>
    24a8:	0008      	movs	r0, r1
    24aa:	4310      	orrs	r0, r2
    24ac:	d100      	bne.n	24b0 <__aeabi_dadd+0x210>
    24ae:	e0b4      	b.n	261a <__aeabi_dadd+0x37a>
    24b0:	1e58      	subs	r0, r3, #1
    24b2:	2800      	cmp	r0, #0
    24b4:	d000      	beq.n	24b8 <__aeabi_dadd+0x218>
    24b6:	e0de      	b.n	2676 <__aeabi_dadd+0x3d6>
    24b8:	18ba      	adds	r2, r7, r2
    24ba:	42ba      	cmp	r2, r7
    24bc:	419b      	sbcs	r3, r3
    24be:	1864      	adds	r4, r4, r1
    24c0:	425b      	negs	r3, r3
    24c2:	18e4      	adds	r4, r4, r3
    24c4:	0017      	movs	r7, r2
    24c6:	2601      	movs	r6, #1
    24c8:	0223      	lsls	r3, r4, #8
    24ca:	d5a6      	bpl.n	241a <__aeabi_dadd+0x17a>
    24cc:	2602      	movs	r6, #2
    24ce:	e7d5      	b.n	247c <__aeabi_dadd+0x1dc>
    24d0:	2d00      	cmp	r5, #0
    24d2:	d16e      	bne.n	25b2 <__aeabi_dadd+0x312>
    24d4:	1c70      	adds	r0, r6, #1
    24d6:	0540      	lsls	r0, r0, #21
    24d8:	0d40      	lsrs	r0, r0, #21
    24da:	2801      	cmp	r0, #1
    24dc:	dc00      	bgt.n	24e0 <__aeabi_dadd+0x240>
    24de:	e0f9      	b.n	26d4 <__aeabi_dadd+0x434>
    24e0:	1ab8      	subs	r0, r7, r2
    24e2:	4684      	mov	ip, r0
    24e4:	4287      	cmp	r7, r0
    24e6:	4180      	sbcs	r0, r0
    24e8:	1ae5      	subs	r5, r4, r3
    24ea:	4240      	negs	r0, r0
    24ec:	1a2d      	subs	r5, r5, r0
    24ee:	0228      	lsls	r0, r5, #8
    24f0:	d400      	bmi.n	24f4 <__aeabi_dadd+0x254>
    24f2:	e089      	b.n	2608 <__aeabi_dadd+0x368>
    24f4:	1bd7      	subs	r7, r2, r7
    24f6:	42ba      	cmp	r2, r7
    24f8:	4192      	sbcs	r2, r2
    24fa:	1b1c      	subs	r4, r3, r4
    24fc:	4252      	negs	r2, r2
    24fe:	1aa5      	subs	r5, r4, r2
    2500:	46d8      	mov	r8, fp
    2502:	e729      	b.n	2358 <__aeabi_dadd+0xb8>
    2504:	4645      	mov	r5, r8
    2506:	2400      	movs	r4, #0
    2508:	2700      	movs	r7, #0
    250a:	e76a      	b.n	23e2 <__aeabi_dadd+0x142>
    250c:	4c45      	ldr	r4, [pc, #276]	; (2624 <__aeabi_dadd+0x384>)
    250e:	1af6      	subs	r6, r6, r3
    2510:	402c      	ands	r4, r5
    2512:	e749      	b.n	23a8 <__aeabi_dadd+0x108>
    2514:	003d      	movs	r5, r7
    2516:	3828      	subs	r0, #40	; 0x28
    2518:	4085      	lsls	r5, r0
    251a:	2700      	movs	r7, #0
    251c:	e72e      	b.n	237c <__aeabi_dadd+0xdc>
    251e:	0038      	movs	r0, r7
    2520:	f000 fd2a 	bl	2f78 <__clzsi2>
    2524:	3020      	adds	r0, #32
    2526:	e71d      	b.n	2364 <__aeabi_dadd+0xc4>
    2528:	430a      	orrs	r2, r1
    252a:	1e51      	subs	r1, r2, #1
    252c:	418a      	sbcs	r2, r1
    252e:	2100      	movs	r1, #0
    2530:	e707      	b.n	2342 <__aeabi_dadd+0xa2>
    2532:	2b00      	cmp	r3, #0
    2534:	d000      	beq.n	2538 <__aeabi_dadd+0x298>
    2536:	e0f3      	b.n	2720 <__aeabi_dadd+0x480>
    2538:	1c70      	adds	r0, r6, #1
    253a:	0543      	lsls	r3, r0, #21
    253c:	0d5b      	lsrs	r3, r3, #21
    253e:	2b01      	cmp	r3, #1
    2540:	dc00      	bgt.n	2544 <__aeabi_dadd+0x2a4>
    2542:	e0ad      	b.n	26a0 <__aeabi_dadd+0x400>
    2544:	4b36      	ldr	r3, [pc, #216]	; (2620 <__aeabi_dadd+0x380>)
    2546:	4298      	cmp	r0, r3
    2548:	d100      	bne.n	254c <__aeabi_dadd+0x2ac>
    254a:	e0d1      	b.n	26f0 <__aeabi_dadd+0x450>
    254c:	18ba      	adds	r2, r7, r2
    254e:	42ba      	cmp	r2, r7
    2550:	41bf      	sbcs	r7, r7
    2552:	1864      	adds	r4, r4, r1
    2554:	427f      	negs	r7, r7
    2556:	19e4      	adds	r4, r4, r7
    2558:	07e7      	lsls	r7, r4, #31
    255a:	0852      	lsrs	r2, r2, #1
    255c:	4317      	orrs	r7, r2
    255e:	0864      	lsrs	r4, r4, #1
    2560:	0006      	movs	r6, r0
    2562:	e721      	b.n	23a8 <__aeabi_dadd+0x108>
    2564:	482e      	ldr	r0, [pc, #184]	; (2620 <__aeabi_dadd+0x380>)
    2566:	4285      	cmp	r5, r0
    2568:	d100      	bne.n	256c <__aeabi_dadd+0x2cc>
    256a:	e093      	b.n	2694 <__aeabi_dadd+0x3f4>
    256c:	001d      	movs	r5, r3
    256e:	e6d0      	b.n	2312 <__aeabi_dadd+0x72>
    2570:	0029      	movs	r1, r5
    2572:	3e1f      	subs	r6, #31
    2574:	40f1      	lsrs	r1, r6
    2576:	2b20      	cmp	r3, #32
    2578:	d100      	bne.n	257c <__aeabi_dadd+0x2dc>
    257a:	e08d      	b.n	2698 <__aeabi_dadd+0x3f8>
    257c:	2240      	movs	r2, #64	; 0x40
    257e:	1ad3      	subs	r3, r2, r3
    2580:	409d      	lsls	r5, r3
    2582:	432f      	orrs	r7, r5
    2584:	1e7d      	subs	r5, r7, #1
    2586:	41af      	sbcs	r7, r5
    2588:	2400      	movs	r4, #0
    258a:	430f      	orrs	r7, r1
    258c:	2600      	movs	r6, #0
    258e:	e744      	b.n	241a <__aeabi_dadd+0x17a>
    2590:	002b      	movs	r3, r5
    2592:	0008      	movs	r0, r1
    2594:	3b20      	subs	r3, #32
    2596:	40d8      	lsrs	r0, r3
    2598:	0003      	movs	r3, r0
    259a:	2d20      	cmp	r5, #32
    259c:	d100      	bne.n	25a0 <__aeabi_dadd+0x300>
    259e:	e07d      	b.n	269c <__aeabi_dadd+0x3fc>
    25a0:	2040      	movs	r0, #64	; 0x40
    25a2:	1b45      	subs	r5, r0, r5
    25a4:	40a9      	lsls	r1, r5
    25a6:	430a      	orrs	r2, r1
    25a8:	1e51      	subs	r1, r2, #1
    25aa:	418a      	sbcs	r2, r1
    25ac:	2100      	movs	r1, #0
    25ae:	431a      	orrs	r2, r3
    25b0:	e6c7      	b.n	2342 <__aeabi_dadd+0xa2>
    25b2:	2e00      	cmp	r6, #0
    25b4:	d050      	beq.n	2658 <__aeabi_dadd+0x3b8>
    25b6:	4e1a      	ldr	r6, [pc, #104]	; (2620 <__aeabi_dadd+0x380>)
    25b8:	42b0      	cmp	r0, r6
    25ba:	d057      	beq.n	266c <__aeabi_dadd+0x3cc>
    25bc:	2680      	movs	r6, #128	; 0x80
    25be:	426b      	negs	r3, r5
    25c0:	4699      	mov	r9, r3
    25c2:	0436      	lsls	r6, r6, #16
    25c4:	4334      	orrs	r4, r6
    25c6:	464b      	mov	r3, r9
    25c8:	2b38      	cmp	r3, #56	; 0x38
    25ca:	dd00      	ble.n	25ce <__aeabi_dadd+0x32e>
    25cc:	e0d6      	b.n	277c <__aeabi_dadd+0x4dc>
    25ce:	2b1f      	cmp	r3, #31
    25d0:	dd00      	ble.n	25d4 <__aeabi_dadd+0x334>
    25d2:	e135      	b.n	2840 <__aeabi_dadd+0x5a0>
    25d4:	2620      	movs	r6, #32
    25d6:	1af5      	subs	r5, r6, r3
    25d8:	0026      	movs	r6, r4
    25da:	40ae      	lsls	r6, r5
    25dc:	46b2      	mov	sl, r6
    25de:	003e      	movs	r6, r7
    25e0:	40de      	lsrs	r6, r3
    25e2:	46ac      	mov	ip, r5
    25e4:	0035      	movs	r5, r6
    25e6:	4656      	mov	r6, sl
    25e8:	432e      	orrs	r6, r5
    25ea:	4665      	mov	r5, ip
    25ec:	40af      	lsls	r7, r5
    25ee:	1e7d      	subs	r5, r7, #1
    25f0:	41af      	sbcs	r7, r5
    25f2:	40dc      	lsrs	r4, r3
    25f4:	4337      	orrs	r7, r6
    25f6:	1bd7      	subs	r7, r2, r7
    25f8:	42ba      	cmp	r2, r7
    25fa:	4192      	sbcs	r2, r2
    25fc:	1b0c      	subs	r4, r1, r4
    25fe:	4252      	negs	r2, r2
    2600:	1aa4      	subs	r4, r4, r2
    2602:	0006      	movs	r6, r0
    2604:	46d8      	mov	r8, fp
    2606:	e6a3      	b.n	2350 <__aeabi_dadd+0xb0>
    2608:	4664      	mov	r4, ip
    260a:	4667      	mov	r7, ip
    260c:	432c      	orrs	r4, r5
    260e:	d000      	beq.n	2612 <__aeabi_dadd+0x372>
    2610:	e6a2      	b.n	2358 <__aeabi_dadd+0xb8>
    2612:	2500      	movs	r5, #0
    2614:	2600      	movs	r6, #0
    2616:	2700      	movs	r7, #0
    2618:	e706      	b.n	2428 <__aeabi_dadd+0x188>
    261a:	001e      	movs	r6, r3
    261c:	e6c4      	b.n	23a8 <__aeabi_dadd+0x108>
    261e:	46c0      	nop			; (mov r8, r8)
    2620:	000007ff 	.word	0x000007ff
    2624:	ff7fffff 	.word	0xff7fffff
    2628:	800fffff 	.word	0x800fffff
    262c:	2b1f      	cmp	r3, #31
    262e:	dc63      	bgt.n	26f8 <__aeabi_dadd+0x458>
    2630:	2020      	movs	r0, #32
    2632:	1ac3      	subs	r3, r0, r3
    2634:	0008      	movs	r0, r1
    2636:	4098      	lsls	r0, r3
    2638:	469c      	mov	ip, r3
    263a:	4683      	mov	fp, r0
    263c:	4653      	mov	r3, sl
    263e:	0010      	movs	r0, r2
    2640:	40d8      	lsrs	r0, r3
    2642:	0003      	movs	r3, r0
    2644:	4658      	mov	r0, fp
    2646:	4318      	orrs	r0, r3
    2648:	4663      	mov	r3, ip
    264a:	409a      	lsls	r2, r3
    264c:	1e53      	subs	r3, r2, #1
    264e:	419a      	sbcs	r2, r3
    2650:	4653      	mov	r3, sl
    2652:	4302      	orrs	r2, r0
    2654:	40d9      	lsrs	r1, r3
    2656:	e703      	b.n	2460 <__aeabi_dadd+0x1c0>
    2658:	0026      	movs	r6, r4
    265a:	433e      	orrs	r6, r7
    265c:	d006      	beq.n	266c <__aeabi_dadd+0x3cc>
    265e:	43eb      	mvns	r3, r5
    2660:	4699      	mov	r9, r3
    2662:	2b00      	cmp	r3, #0
    2664:	d0c7      	beq.n	25f6 <__aeabi_dadd+0x356>
    2666:	4e94      	ldr	r6, [pc, #592]	; (28b8 <__aeabi_dadd+0x618>)
    2668:	42b0      	cmp	r0, r6
    266a:	d1ac      	bne.n	25c6 <__aeabi_dadd+0x326>
    266c:	000c      	movs	r4, r1
    266e:	0017      	movs	r7, r2
    2670:	0006      	movs	r6, r0
    2672:	46d8      	mov	r8, fp
    2674:	e698      	b.n	23a8 <__aeabi_dadd+0x108>
    2676:	4b90      	ldr	r3, [pc, #576]	; (28b8 <__aeabi_dadd+0x618>)
    2678:	459a      	cmp	sl, r3
    267a:	d00b      	beq.n	2694 <__aeabi_dadd+0x3f4>
    267c:	4682      	mov	sl, r0
    267e:	e6e7      	b.n	2450 <__aeabi_dadd+0x1b0>
    2680:	2800      	cmp	r0, #0
    2682:	d000      	beq.n	2686 <__aeabi_dadd+0x3e6>
    2684:	e09e      	b.n	27c4 <__aeabi_dadd+0x524>
    2686:	0018      	movs	r0, r3
    2688:	4310      	orrs	r0, r2
    268a:	d100      	bne.n	268e <__aeabi_dadd+0x3ee>
    268c:	e0e9      	b.n	2862 <__aeabi_dadd+0x5c2>
    268e:	001c      	movs	r4, r3
    2690:	0017      	movs	r7, r2
    2692:	46d8      	mov	r8, fp
    2694:	4e88      	ldr	r6, [pc, #544]	; (28b8 <__aeabi_dadd+0x618>)
    2696:	e687      	b.n	23a8 <__aeabi_dadd+0x108>
    2698:	2500      	movs	r5, #0
    269a:	e772      	b.n	2582 <__aeabi_dadd+0x2e2>
    269c:	2100      	movs	r1, #0
    269e:	e782      	b.n	25a6 <__aeabi_dadd+0x306>
    26a0:	0023      	movs	r3, r4
    26a2:	433b      	orrs	r3, r7
    26a4:	2e00      	cmp	r6, #0
    26a6:	d000      	beq.n	26aa <__aeabi_dadd+0x40a>
    26a8:	e0ab      	b.n	2802 <__aeabi_dadd+0x562>
    26aa:	2b00      	cmp	r3, #0
    26ac:	d100      	bne.n	26b0 <__aeabi_dadd+0x410>
    26ae:	e0e7      	b.n	2880 <__aeabi_dadd+0x5e0>
    26b0:	000b      	movs	r3, r1
    26b2:	4313      	orrs	r3, r2
    26b4:	d100      	bne.n	26b8 <__aeabi_dadd+0x418>
    26b6:	e677      	b.n	23a8 <__aeabi_dadd+0x108>
    26b8:	18ba      	adds	r2, r7, r2
    26ba:	42ba      	cmp	r2, r7
    26bc:	41bf      	sbcs	r7, r7
    26be:	1864      	adds	r4, r4, r1
    26c0:	427f      	negs	r7, r7
    26c2:	19e4      	adds	r4, r4, r7
    26c4:	0223      	lsls	r3, r4, #8
    26c6:	d400      	bmi.n	26ca <__aeabi_dadd+0x42a>
    26c8:	e0f2      	b.n	28b0 <__aeabi_dadd+0x610>
    26ca:	4b7c      	ldr	r3, [pc, #496]	; (28bc <__aeabi_dadd+0x61c>)
    26cc:	0017      	movs	r7, r2
    26ce:	401c      	ands	r4, r3
    26d0:	0006      	movs	r6, r0
    26d2:	e669      	b.n	23a8 <__aeabi_dadd+0x108>
    26d4:	0020      	movs	r0, r4
    26d6:	4338      	orrs	r0, r7
    26d8:	2e00      	cmp	r6, #0
    26da:	d1d1      	bne.n	2680 <__aeabi_dadd+0x3e0>
    26dc:	2800      	cmp	r0, #0
    26de:	d15b      	bne.n	2798 <__aeabi_dadd+0x4f8>
    26e0:	001c      	movs	r4, r3
    26e2:	4314      	orrs	r4, r2
    26e4:	d100      	bne.n	26e8 <__aeabi_dadd+0x448>
    26e6:	e0a8      	b.n	283a <__aeabi_dadd+0x59a>
    26e8:	001c      	movs	r4, r3
    26ea:	0017      	movs	r7, r2
    26ec:	46d8      	mov	r8, fp
    26ee:	e65b      	b.n	23a8 <__aeabi_dadd+0x108>
    26f0:	0006      	movs	r6, r0
    26f2:	2400      	movs	r4, #0
    26f4:	2700      	movs	r7, #0
    26f6:	e697      	b.n	2428 <__aeabi_dadd+0x188>
    26f8:	4650      	mov	r0, sl
    26fa:	000b      	movs	r3, r1
    26fc:	3820      	subs	r0, #32
    26fe:	40c3      	lsrs	r3, r0
    2700:	4699      	mov	r9, r3
    2702:	4653      	mov	r3, sl
    2704:	2b20      	cmp	r3, #32
    2706:	d100      	bne.n	270a <__aeabi_dadd+0x46a>
    2708:	e095      	b.n	2836 <__aeabi_dadd+0x596>
    270a:	2340      	movs	r3, #64	; 0x40
    270c:	4650      	mov	r0, sl
    270e:	1a1b      	subs	r3, r3, r0
    2710:	4099      	lsls	r1, r3
    2712:	430a      	orrs	r2, r1
    2714:	1e51      	subs	r1, r2, #1
    2716:	418a      	sbcs	r2, r1
    2718:	464b      	mov	r3, r9
    271a:	2100      	movs	r1, #0
    271c:	431a      	orrs	r2, r3
    271e:	e69f      	b.n	2460 <__aeabi_dadd+0x1c0>
    2720:	2e00      	cmp	r6, #0
    2722:	d130      	bne.n	2786 <__aeabi_dadd+0x4e6>
    2724:	0026      	movs	r6, r4
    2726:	433e      	orrs	r6, r7
    2728:	d067      	beq.n	27fa <__aeabi_dadd+0x55a>
    272a:	43db      	mvns	r3, r3
    272c:	469a      	mov	sl, r3
    272e:	2b00      	cmp	r3, #0
    2730:	d01c      	beq.n	276c <__aeabi_dadd+0x4cc>
    2732:	4e61      	ldr	r6, [pc, #388]	; (28b8 <__aeabi_dadd+0x618>)
    2734:	42b0      	cmp	r0, r6
    2736:	d060      	beq.n	27fa <__aeabi_dadd+0x55a>
    2738:	4653      	mov	r3, sl
    273a:	2b38      	cmp	r3, #56	; 0x38
    273c:	dd00      	ble.n	2740 <__aeabi_dadd+0x4a0>
    273e:	e096      	b.n	286e <__aeabi_dadd+0x5ce>
    2740:	2b1f      	cmp	r3, #31
    2742:	dd00      	ble.n	2746 <__aeabi_dadd+0x4a6>
    2744:	e09f      	b.n	2886 <__aeabi_dadd+0x5e6>
    2746:	2620      	movs	r6, #32
    2748:	1af3      	subs	r3, r6, r3
    274a:	0026      	movs	r6, r4
    274c:	409e      	lsls	r6, r3
    274e:	469c      	mov	ip, r3
    2750:	46b3      	mov	fp, r6
    2752:	4653      	mov	r3, sl
    2754:	003e      	movs	r6, r7
    2756:	40de      	lsrs	r6, r3
    2758:	0033      	movs	r3, r6
    275a:	465e      	mov	r6, fp
    275c:	431e      	orrs	r6, r3
    275e:	4663      	mov	r3, ip
    2760:	409f      	lsls	r7, r3
    2762:	1e7b      	subs	r3, r7, #1
    2764:	419f      	sbcs	r7, r3
    2766:	4653      	mov	r3, sl
    2768:	40dc      	lsrs	r4, r3
    276a:	4337      	orrs	r7, r6
    276c:	18bf      	adds	r7, r7, r2
    276e:	4297      	cmp	r7, r2
    2770:	4192      	sbcs	r2, r2
    2772:	1864      	adds	r4, r4, r1
    2774:	4252      	negs	r2, r2
    2776:	18a4      	adds	r4, r4, r2
    2778:	0006      	movs	r6, r0
    277a:	e678      	b.n	246e <__aeabi_dadd+0x1ce>
    277c:	4327      	orrs	r7, r4
    277e:	1e7c      	subs	r4, r7, #1
    2780:	41a7      	sbcs	r7, r4
    2782:	2400      	movs	r4, #0
    2784:	e737      	b.n	25f6 <__aeabi_dadd+0x356>
    2786:	4e4c      	ldr	r6, [pc, #304]	; (28b8 <__aeabi_dadd+0x618>)
    2788:	42b0      	cmp	r0, r6
    278a:	d036      	beq.n	27fa <__aeabi_dadd+0x55a>
    278c:	2680      	movs	r6, #128	; 0x80
    278e:	425b      	negs	r3, r3
    2790:	0436      	lsls	r6, r6, #16
    2792:	469a      	mov	sl, r3
    2794:	4334      	orrs	r4, r6
    2796:	e7cf      	b.n	2738 <__aeabi_dadd+0x498>
    2798:	0018      	movs	r0, r3
    279a:	4310      	orrs	r0, r2
    279c:	d100      	bne.n	27a0 <__aeabi_dadd+0x500>
    279e:	e603      	b.n	23a8 <__aeabi_dadd+0x108>
    27a0:	1ab8      	subs	r0, r7, r2
    27a2:	4684      	mov	ip, r0
    27a4:	4567      	cmp	r7, ip
    27a6:	41ad      	sbcs	r5, r5
    27a8:	1ae0      	subs	r0, r4, r3
    27aa:	426d      	negs	r5, r5
    27ac:	1b40      	subs	r0, r0, r5
    27ae:	0205      	lsls	r5, r0, #8
    27b0:	d400      	bmi.n	27b4 <__aeabi_dadd+0x514>
    27b2:	e62c      	b.n	240e <__aeabi_dadd+0x16e>
    27b4:	1bd7      	subs	r7, r2, r7
    27b6:	42ba      	cmp	r2, r7
    27b8:	4192      	sbcs	r2, r2
    27ba:	1b1c      	subs	r4, r3, r4
    27bc:	4252      	negs	r2, r2
    27be:	1aa4      	subs	r4, r4, r2
    27c0:	46d8      	mov	r8, fp
    27c2:	e5f1      	b.n	23a8 <__aeabi_dadd+0x108>
    27c4:	0018      	movs	r0, r3
    27c6:	4310      	orrs	r0, r2
    27c8:	d100      	bne.n	27cc <__aeabi_dadd+0x52c>
    27ca:	e763      	b.n	2694 <__aeabi_dadd+0x3f4>
    27cc:	08f8      	lsrs	r0, r7, #3
    27ce:	0767      	lsls	r7, r4, #29
    27d0:	4307      	orrs	r7, r0
    27d2:	2080      	movs	r0, #128	; 0x80
    27d4:	08e4      	lsrs	r4, r4, #3
    27d6:	0300      	lsls	r0, r0, #12
    27d8:	4204      	tst	r4, r0
    27da:	d008      	beq.n	27ee <__aeabi_dadd+0x54e>
    27dc:	08dd      	lsrs	r5, r3, #3
    27de:	4205      	tst	r5, r0
    27e0:	d105      	bne.n	27ee <__aeabi_dadd+0x54e>
    27e2:	08d2      	lsrs	r2, r2, #3
    27e4:	0759      	lsls	r1, r3, #29
    27e6:	4311      	orrs	r1, r2
    27e8:	000f      	movs	r7, r1
    27ea:	002c      	movs	r4, r5
    27ec:	46d8      	mov	r8, fp
    27ee:	0f7b      	lsrs	r3, r7, #29
    27f0:	00e4      	lsls	r4, r4, #3
    27f2:	431c      	orrs	r4, r3
    27f4:	00ff      	lsls	r7, r7, #3
    27f6:	4e30      	ldr	r6, [pc, #192]	; (28b8 <__aeabi_dadd+0x618>)
    27f8:	e5d6      	b.n	23a8 <__aeabi_dadd+0x108>
    27fa:	000c      	movs	r4, r1
    27fc:	0017      	movs	r7, r2
    27fe:	0006      	movs	r6, r0
    2800:	e5d2      	b.n	23a8 <__aeabi_dadd+0x108>
    2802:	2b00      	cmp	r3, #0
    2804:	d038      	beq.n	2878 <__aeabi_dadd+0x5d8>
    2806:	000b      	movs	r3, r1
    2808:	4313      	orrs	r3, r2
    280a:	d100      	bne.n	280e <__aeabi_dadd+0x56e>
    280c:	e742      	b.n	2694 <__aeabi_dadd+0x3f4>
    280e:	08f8      	lsrs	r0, r7, #3
    2810:	0767      	lsls	r7, r4, #29
    2812:	4307      	orrs	r7, r0
    2814:	2080      	movs	r0, #128	; 0x80
    2816:	08e4      	lsrs	r4, r4, #3
    2818:	0300      	lsls	r0, r0, #12
    281a:	4204      	tst	r4, r0
    281c:	d0e7      	beq.n	27ee <__aeabi_dadd+0x54e>
    281e:	08cb      	lsrs	r3, r1, #3
    2820:	4203      	tst	r3, r0
    2822:	d1e4      	bne.n	27ee <__aeabi_dadd+0x54e>
    2824:	08d2      	lsrs	r2, r2, #3
    2826:	0749      	lsls	r1, r1, #29
    2828:	4311      	orrs	r1, r2
    282a:	000f      	movs	r7, r1
    282c:	001c      	movs	r4, r3
    282e:	e7de      	b.n	27ee <__aeabi_dadd+0x54e>
    2830:	2700      	movs	r7, #0
    2832:	2400      	movs	r4, #0
    2834:	e5d5      	b.n	23e2 <__aeabi_dadd+0x142>
    2836:	2100      	movs	r1, #0
    2838:	e76b      	b.n	2712 <__aeabi_dadd+0x472>
    283a:	2500      	movs	r5, #0
    283c:	2700      	movs	r7, #0
    283e:	e5f3      	b.n	2428 <__aeabi_dadd+0x188>
    2840:	464e      	mov	r6, r9
    2842:	0025      	movs	r5, r4
    2844:	3e20      	subs	r6, #32
    2846:	40f5      	lsrs	r5, r6
    2848:	464b      	mov	r3, r9
    284a:	002e      	movs	r6, r5
    284c:	2b20      	cmp	r3, #32
    284e:	d02d      	beq.n	28ac <__aeabi_dadd+0x60c>
    2850:	2540      	movs	r5, #64	; 0x40
    2852:	1aed      	subs	r5, r5, r3
    2854:	40ac      	lsls	r4, r5
    2856:	4327      	orrs	r7, r4
    2858:	1e7c      	subs	r4, r7, #1
    285a:	41a7      	sbcs	r7, r4
    285c:	2400      	movs	r4, #0
    285e:	4337      	orrs	r7, r6
    2860:	e6c9      	b.n	25f6 <__aeabi_dadd+0x356>
    2862:	2480      	movs	r4, #128	; 0x80
    2864:	2500      	movs	r5, #0
    2866:	0324      	lsls	r4, r4, #12
    2868:	4e13      	ldr	r6, [pc, #76]	; (28b8 <__aeabi_dadd+0x618>)
    286a:	2700      	movs	r7, #0
    286c:	e5dc      	b.n	2428 <__aeabi_dadd+0x188>
    286e:	4327      	orrs	r7, r4
    2870:	1e7c      	subs	r4, r7, #1
    2872:	41a7      	sbcs	r7, r4
    2874:	2400      	movs	r4, #0
    2876:	e779      	b.n	276c <__aeabi_dadd+0x4cc>
    2878:	000c      	movs	r4, r1
    287a:	0017      	movs	r7, r2
    287c:	4e0e      	ldr	r6, [pc, #56]	; (28b8 <__aeabi_dadd+0x618>)
    287e:	e593      	b.n	23a8 <__aeabi_dadd+0x108>
    2880:	000c      	movs	r4, r1
    2882:	0017      	movs	r7, r2
    2884:	e590      	b.n	23a8 <__aeabi_dadd+0x108>
    2886:	4656      	mov	r6, sl
    2888:	0023      	movs	r3, r4
    288a:	3e20      	subs	r6, #32
    288c:	40f3      	lsrs	r3, r6
    288e:	4699      	mov	r9, r3
    2890:	4653      	mov	r3, sl
    2892:	2b20      	cmp	r3, #32
    2894:	d00e      	beq.n	28b4 <__aeabi_dadd+0x614>
    2896:	2340      	movs	r3, #64	; 0x40
    2898:	4656      	mov	r6, sl
    289a:	1b9b      	subs	r3, r3, r6
    289c:	409c      	lsls	r4, r3
    289e:	4327      	orrs	r7, r4
    28a0:	1e7c      	subs	r4, r7, #1
    28a2:	41a7      	sbcs	r7, r4
    28a4:	464b      	mov	r3, r9
    28a6:	2400      	movs	r4, #0
    28a8:	431f      	orrs	r7, r3
    28aa:	e75f      	b.n	276c <__aeabi_dadd+0x4cc>
    28ac:	2400      	movs	r4, #0
    28ae:	e7d2      	b.n	2856 <__aeabi_dadd+0x5b6>
    28b0:	0017      	movs	r7, r2
    28b2:	e5b2      	b.n	241a <__aeabi_dadd+0x17a>
    28b4:	2400      	movs	r4, #0
    28b6:	e7f2      	b.n	289e <__aeabi_dadd+0x5fe>
    28b8:	000007ff 	.word	0x000007ff
    28bc:	ff7fffff 	.word	0xff7fffff

000028c0 <__aeabi_dmul>:
    28c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    28c2:	4657      	mov	r7, sl
    28c4:	4645      	mov	r5, r8
    28c6:	46de      	mov	lr, fp
    28c8:	464e      	mov	r6, r9
    28ca:	b5e0      	push	{r5, r6, r7, lr}
    28cc:	030c      	lsls	r4, r1, #12
    28ce:	4698      	mov	r8, r3
    28d0:	004e      	lsls	r6, r1, #1
    28d2:	0b23      	lsrs	r3, r4, #12
    28d4:	b087      	sub	sp, #28
    28d6:	0007      	movs	r7, r0
    28d8:	4692      	mov	sl, r2
    28da:	469b      	mov	fp, r3
    28dc:	0d76      	lsrs	r6, r6, #21
    28de:	0fcd      	lsrs	r5, r1, #31
    28e0:	2e00      	cmp	r6, #0
    28e2:	d06b      	beq.n	29bc <__aeabi_dmul+0xfc>
    28e4:	4b6d      	ldr	r3, [pc, #436]	; (2a9c <__aeabi_dmul+0x1dc>)
    28e6:	429e      	cmp	r6, r3
    28e8:	d035      	beq.n	2956 <__aeabi_dmul+0x96>
    28ea:	2480      	movs	r4, #128	; 0x80
    28ec:	465b      	mov	r3, fp
    28ee:	0f42      	lsrs	r2, r0, #29
    28f0:	0424      	lsls	r4, r4, #16
    28f2:	00db      	lsls	r3, r3, #3
    28f4:	4314      	orrs	r4, r2
    28f6:	431c      	orrs	r4, r3
    28f8:	00c3      	lsls	r3, r0, #3
    28fa:	4699      	mov	r9, r3
    28fc:	4b68      	ldr	r3, [pc, #416]	; (2aa0 <__aeabi_dmul+0x1e0>)
    28fe:	46a3      	mov	fp, r4
    2900:	469c      	mov	ip, r3
    2902:	2300      	movs	r3, #0
    2904:	2700      	movs	r7, #0
    2906:	4466      	add	r6, ip
    2908:	9302      	str	r3, [sp, #8]
    290a:	4643      	mov	r3, r8
    290c:	031c      	lsls	r4, r3, #12
    290e:	005a      	lsls	r2, r3, #1
    2910:	0fdb      	lsrs	r3, r3, #31
    2912:	4650      	mov	r0, sl
    2914:	0b24      	lsrs	r4, r4, #12
    2916:	0d52      	lsrs	r2, r2, #21
    2918:	4698      	mov	r8, r3
    291a:	d100      	bne.n	291e <__aeabi_dmul+0x5e>
    291c:	e076      	b.n	2a0c <__aeabi_dmul+0x14c>
    291e:	4b5f      	ldr	r3, [pc, #380]	; (2a9c <__aeabi_dmul+0x1dc>)
    2920:	429a      	cmp	r2, r3
    2922:	d06d      	beq.n	2a00 <__aeabi_dmul+0x140>
    2924:	2380      	movs	r3, #128	; 0x80
    2926:	0f41      	lsrs	r1, r0, #29
    2928:	041b      	lsls	r3, r3, #16
    292a:	430b      	orrs	r3, r1
    292c:	495c      	ldr	r1, [pc, #368]	; (2aa0 <__aeabi_dmul+0x1e0>)
    292e:	00e4      	lsls	r4, r4, #3
    2930:	468c      	mov	ip, r1
    2932:	431c      	orrs	r4, r3
    2934:	00c3      	lsls	r3, r0, #3
    2936:	2000      	movs	r0, #0
    2938:	4462      	add	r2, ip
    293a:	4641      	mov	r1, r8
    293c:	18b6      	adds	r6, r6, r2
    293e:	4069      	eors	r1, r5
    2940:	1c72      	adds	r2, r6, #1
    2942:	9101      	str	r1, [sp, #4]
    2944:	4694      	mov	ip, r2
    2946:	4307      	orrs	r7, r0
    2948:	2f0f      	cmp	r7, #15
    294a:	d900      	bls.n	294e <__aeabi_dmul+0x8e>
    294c:	e0b0      	b.n	2ab0 <__aeabi_dmul+0x1f0>
    294e:	4a55      	ldr	r2, [pc, #340]	; (2aa4 <__aeabi_dmul+0x1e4>)
    2950:	00bf      	lsls	r7, r7, #2
    2952:	59d2      	ldr	r2, [r2, r7]
    2954:	4697      	mov	pc, r2
    2956:	465b      	mov	r3, fp
    2958:	4303      	orrs	r3, r0
    295a:	4699      	mov	r9, r3
    295c:	d000      	beq.n	2960 <__aeabi_dmul+0xa0>
    295e:	e087      	b.n	2a70 <__aeabi_dmul+0x1b0>
    2960:	2300      	movs	r3, #0
    2962:	469b      	mov	fp, r3
    2964:	3302      	adds	r3, #2
    2966:	2708      	movs	r7, #8
    2968:	9302      	str	r3, [sp, #8]
    296a:	e7ce      	b.n	290a <__aeabi_dmul+0x4a>
    296c:	4642      	mov	r2, r8
    296e:	9201      	str	r2, [sp, #4]
    2970:	2802      	cmp	r0, #2
    2972:	d067      	beq.n	2a44 <__aeabi_dmul+0x184>
    2974:	2803      	cmp	r0, #3
    2976:	d100      	bne.n	297a <__aeabi_dmul+0xba>
    2978:	e20e      	b.n	2d98 <__aeabi_dmul+0x4d8>
    297a:	2801      	cmp	r0, #1
    297c:	d000      	beq.n	2980 <__aeabi_dmul+0xc0>
    297e:	e162      	b.n	2c46 <__aeabi_dmul+0x386>
    2980:	2300      	movs	r3, #0
    2982:	2400      	movs	r4, #0
    2984:	2200      	movs	r2, #0
    2986:	4699      	mov	r9, r3
    2988:	9901      	ldr	r1, [sp, #4]
    298a:	4001      	ands	r1, r0
    298c:	b2cd      	uxtb	r5, r1
    298e:	2100      	movs	r1, #0
    2990:	0312      	lsls	r2, r2, #12
    2992:	0d0b      	lsrs	r3, r1, #20
    2994:	0b12      	lsrs	r2, r2, #12
    2996:	051b      	lsls	r3, r3, #20
    2998:	4313      	orrs	r3, r2
    299a:	4a43      	ldr	r2, [pc, #268]	; (2aa8 <__aeabi_dmul+0x1e8>)
    299c:	0524      	lsls	r4, r4, #20
    299e:	4013      	ands	r3, r2
    29a0:	431c      	orrs	r4, r3
    29a2:	0064      	lsls	r4, r4, #1
    29a4:	07ed      	lsls	r5, r5, #31
    29a6:	0864      	lsrs	r4, r4, #1
    29a8:	432c      	orrs	r4, r5
    29aa:	4648      	mov	r0, r9
    29ac:	0021      	movs	r1, r4
    29ae:	b007      	add	sp, #28
    29b0:	bc3c      	pop	{r2, r3, r4, r5}
    29b2:	4690      	mov	r8, r2
    29b4:	4699      	mov	r9, r3
    29b6:	46a2      	mov	sl, r4
    29b8:	46ab      	mov	fp, r5
    29ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
    29bc:	4303      	orrs	r3, r0
    29be:	4699      	mov	r9, r3
    29c0:	d04f      	beq.n	2a62 <__aeabi_dmul+0x1a2>
    29c2:	465b      	mov	r3, fp
    29c4:	2b00      	cmp	r3, #0
    29c6:	d100      	bne.n	29ca <__aeabi_dmul+0x10a>
    29c8:	e189      	b.n	2cde <__aeabi_dmul+0x41e>
    29ca:	4658      	mov	r0, fp
    29cc:	f000 fad4 	bl	2f78 <__clzsi2>
    29d0:	0003      	movs	r3, r0
    29d2:	3b0b      	subs	r3, #11
    29d4:	2b1c      	cmp	r3, #28
    29d6:	dd00      	ble.n	29da <__aeabi_dmul+0x11a>
    29d8:	e17a      	b.n	2cd0 <__aeabi_dmul+0x410>
    29da:	221d      	movs	r2, #29
    29dc:	1ad3      	subs	r3, r2, r3
    29de:	003a      	movs	r2, r7
    29e0:	0001      	movs	r1, r0
    29e2:	465c      	mov	r4, fp
    29e4:	40da      	lsrs	r2, r3
    29e6:	3908      	subs	r1, #8
    29e8:	408c      	lsls	r4, r1
    29ea:	0013      	movs	r3, r2
    29ec:	408f      	lsls	r7, r1
    29ee:	4323      	orrs	r3, r4
    29f0:	469b      	mov	fp, r3
    29f2:	46b9      	mov	r9, r7
    29f4:	2300      	movs	r3, #0
    29f6:	4e2d      	ldr	r6, [pc, #180]	; (2aac <__aeabi_dmul+0x1ec>)
    29f8:	2700      	movs	r7, #0
    29fa:	1a36      	subs	r6, r6, r0
    29fc:	9302      	str	r3, [sp, #8]
    29fe:	e784      	b.n	290a <__aeabi_dmul+0x4a>
    2a00:	4653      	mov	r3, sl
    2a02:	4323      	orrs	r3, r4
    2a04:	d12a      	bne.n	2a5c <__aeabi_dmul+0x19c>
    2a06:	2400      	movs	r4, #0
    2a08:	2002      	movs	r0, #2
    2a0a:	e796      	b.n	293a <__aeabi_dmul+0x7a>
    2a0c:	4653      	mov	r3, sl
    2a0e:	4323      	orrs	r3, r4
    2a10:	d020      	beq.n	2a54 <__aeabi_dmul+0x194>
    2a12:	2c00      	cmp	r4, #0
    2a14:	d100      	bne.n	2a18 <__aeabi_dmul+0x158>
    2a16:	e157      	b.n	2cc8 <__aeabi_dmul+0x408>
    2a18:	0020      	movs	r0, r4
    2a1a:	f000 faad 	bl	2f78 <__clzsi2>
    2a1e:	0003      	movs	r3, r0
    2a20:	3b0b      	subs	r3, #11
    2a22:	2b1c      	cmp	r3, #28
    2a24:	dd00      	ble.n	2a28 <__aeabi_dmul+0x168>
    2a26:	e149      	b.n	2cbc <__aeabi_dmul+0x3fc>
    2a28:	211d      	movs	r1, #29
    2a2a:	1acb      	subs	r3, r1, r3
    2a2c:	4651      	mov	r1, sl
    2a2e:	0002      	movs	r2, r0
    2a30:	40d9      	lsrs	r1, r3
    2a32:	4653      	mov	r3, sl
    2a34:	3a08      	subs	r2, #8
    2a36:	4094      	lsls	r4, r2
    2a38:	4093      	lsls	r3, r2
    2a3a:	430c      	orrs	r4, r1
    2a3c:	4a1b      	ldr	r2, [pc, #108]	; (2aac <__aeabi_dmul+0x1ec>)
    2a3e:	1a12      	subs	r2, r2, r0
    2a40:	2000      	movs	r0, #0
    2a42:	e77a      	b.n	293a <__aeabi_dmul+0x7a>
    2a44:	2501      	movs	r5, #1
    2a46:	9b01      	ldr	r3, [sp, #4]
    2a48:	4c14      	ldr	r4, [pc, #80]	; (2a9c <__aeabi_dmul+0x1dc>)
    2a4a:	401d      	ands	r5, r3
    2a4c:	2300      	movs	r3, #0
    2a4e:	2200      	movs	r2, #0
    2a50:	4699      	mov	r9, r3
    2a52:	e79c      	b.n	298e <__aeabi_dmul+0xce>
    2a54:	2400      	movs	r4, #0
    2a56:	2200      	movs	r2, #0
    2a58:	2001      	movs	r0, #1
    2a5a:	e76e      	b.n	293a <__aeabi_dmul+0x7a>
    2a5c:	4653      	mov	r3, sl
    2a5e:	2003      	movs	r0, #3
    2a60:	e76b      	b.n	293a <__aeabi_dmul+0x7a>
    2a62:	2300      	movs	r3, #0
    2a64:	469b      	mov	fp, r3
    2a66:	3301      	adds	r3, #1
    2a68:	2704      	movs	r7, #4
    2a6a:	2600      	movs	r6, #0
    2a6c:	9302      	str	r3, [sp, #8]
    2a6e:	e74c      	b.n	290a <__aeabi_dmul+0x4a>
    2a70:	2303      	movs	r3, #3
    2a72:	4681      	mov	r9, r0
    2a74:	270c      	movs	r7, #12
    2a76:	9302      	str	r3, [sp, #8]
    2a78:	e747      	b.n	290a <__aeabi_dmul+0x4a>
    2a7a:	2280      	movs	r2, #128	; 0x80
    2a7c:	2300      	movs	r3, #0
    2a7e:	2500      	movs	r5, #0
    2a80:	0312      	lsls	r2, r2, #12
    2a82:	4699      	mov	r9, r3
    2a84:	4c05      	ldr	r4, [pc, #20]	; (2a9c <__aeabi_dmul+0x1dc>)
    2a86:	e782      	b.n	298e <__aeabi_dmul+0xce>
    2a88:	465c      	mov	r4, fp
    2a8a:	464b      	mov	r3, r9
    2a8c:	9802      	ldr	r0, [sp, #8]
    2a8e:	e76f      	b.n	2970 <__aeabi_dmul+0xb0>
    2a90:	465c      	mov	r4, fp
    2a92:	464b      	mov	r3, r9
    2a94:	9501      	str	r5, [sp, #4]
    2a96:	9802      	ldr	r0, [sp, #8]
    2a98:	e76a      	b.n	2970 <__aeabi_dmul+0xb0>
    2a9a:	46c0      	nop			; (mov r8, r8)
    2a9c:	000007ff 	.word	0x000007ff
    2aa0:	fffffc01 	.word	0xfffffc01
    2aa4:	00003130 	.word	0x00003130
    2aa8:	800fffff 	.word	0x800fffff
    2aac:	fffffc0d 	.word	0xfffffc0d
    2ab0:	464a      	mov	r2, r9
    2ab2:	4649      	mov	r1, r9
    2ab4:	0c17      	lsrs	r7, r2, #16
    2ab6:	0c1a      	lsrs	r2, r3, #16
    2ab8:	041b      	lsls	r3, r3, #16
    2aba:	0c1b      	lsrs	r3, r3, #16
    2abc:	0408      	lsls	r0, r1, #16
    2abe:	0019      	movs	r1, r3
    2ac0:	0c00      	lsrs	r0, r0, #16
    2ac2:	4341      	muls	r1, r0
    2ac4:	0015      	movs	r5, r2
    2ac6:	4688      	mov	r8, r1
    2ac8:	0019      	movs	r1, r3
    2aca:	437d      	muls	r5, r7
    2acc:	4379      	muls	r1, r7
    2ace:	9503      	str	r5, [sp, #12]
    2ad0:	4689      	mov	r9, r1
    2ad2:	0029      	movs	r1, r5
    2ad4:	0015      	movs	r5, r2
    2ad6:	4345      	muls	r5, r0
    2ad8:	444d      	add	r5, r9
    2ada:	9502      	str	r5, [sp, #8]
    2adc:	4645      	mov	r5, r8
    2ade:	0c2d      	lsrs	r5, r5, #16
    2ae0:	46aa      	mov	sl, r5
    2ae2:	9d02      	ldr	r5, [sp, #8]
    2ae4:	4455      	add	r5, sl
    2ae6:	45a9      	cmp	r9, r5
    2ae8:	d906      	bls.n	2af8 <__aeabi_dmul+0x238>
    2aea:	468a      	mov	sl, r1
    2aec:	2180      	movs	r1, #128	; 0x80
    2aee:	0249      	lsls	r1, r1, #9
    2af0:	4689      	mov	r9, r1
    2af2:	44ca      	add	sl, r9
    2af4:	4651      	mov	r1, sl
    2af6:	9103      	str	r1, [sp, #12]
    2af8:	0c29      	lsrs	r1, r5, #16
    2afa:	9104      	str	r1, [sp, #16]
    2afc:	4641      	mov	r1, r8
    2afe:	0409      	lsls	r1, r1, #16
    2b00:	042d      	lsls	r5, r5, #16
    2b02:	0c09      	lsrs	r1, r1, #16
    2b04:	4688      	mov	r8, r1
    2b06:	0029      	movs	r1, r5
    2b08:	0c25      	lsrs	r5, r4, #16
    2b0a:	0424      	lsls	r4, r4, #16
    2b0c:	4441      	add	r1, r8
    2b0e:	0c24      	lsrs	r4, r4, #16
    2b10:	9105      	str	r1, [sp, #20]
    2b12:	0021      	movs	r1, r4
    2b14:	4341      	muls	r1, r0
    2b16:	4688      	mov	r8, r1
    2b18:	0021      	movs	r1, r4
    2b1a:	4379      	muls	r1, r7
    2b1c:	468a      	mov	sl, r1
    2b1e:	4368      	muls	r0, r5
    2b20:	4641      	mov	r1, r8
    2b22:	4450      	add	r0, sl
    2b24:	4681      	mov	r9, r0
    2b26:	0c08      	lsrs	r0, r1, #16
    2b28:	4448      	add	r0, r9
    2b2a:	436f      	muls	r7, r5
    2b2c:	4582      	cmp	sl, r0
    2b2e:	d903      	bls.n	2b38 <__aeabi_dmul+0x278>
    2b30:	2180      	movs	r1, #128	; 0x80
    2b32:	0249      	lsls	r1, r1, #9
    2b34:	4689      	mov	r9, r1
    2b36:	444f      	add	r7, r9
    2b38:	0c01      	lsrs	r1, r0, #16
    2b3a:	4689      	mov	r9, r1
    2b3c:	0039      	movs	r1, r7
    2b3e:	4449      	add	r1, r9
    2b40:	9102      	str	r1, [sp, #8]
    2b42:	4641      	mov	r1, r8
    2b44:	040f      	lsls	r7, r1, #16
    2b46:	9904      	ldr	r1, [sp, #16]
    2b48:	0c3f      	lsrs	r7, r7, #16
    2b4a:	4688      	mov	r8, r1
    2b4c:	0400      	lsls	r0, r0, #16
    2b4e:	19c0      	adds	r0, r0, r7
    2b50:	4480      	add	r8, r0
    2b52:	4641      	mov	r1, r8
    2b54:	9104      	str	r1, [sp, #16]
    2b56:	4659      	mov	r1, fp
    2b58:	0c0f      	lsrs	r7, r1, #16
    2b5a:	0409      	lsls	r1, r1, #16
    2b5c:	0c09      	lsrs	r1, r1, #16
    2b5e:	4688      	mov	r8, r1
    2b60:	4359      	muls	r1, r3
    2b62:	468a      	mov	sl, r1
    2b64:	0039      	movs	r1, r7
    2b66:	4351      	muls	r1, r2
    2b68:	4689      	mov	r9, r1
    2b6a:	4641      	mov	r1, r8
    2b6c:	434a      	muls	r2, r1
    2b6e:	4651      	mov	r1, sl
    2b70:	0c09      	lsrs	r1, r1, #16
    2b72:	468b      	mov	fp, r1
    2b74:	437b      	muls	r3, r7
    2b76:	18d2      	adds	r2, r2, r3
    2b78:	445a      	add	r2, fp
    2b7a:	4293      	cmp	r3, r2
    2b7c:	d903      	bls.n	2b86 <__aeabi_dmul+0x2c6>
    2b7e:	2380      	movs	r3, #128	; 0x80
    2b80:	025b      	lsls	r3, r3, #9
    2b82:	469b      	mov	fp, r3
    2b84:	44d9      	add	r9, fp
    2b86:	4651      	mov	r1, sl
    2b88:	0409      	lsls	r1, r1, #16
    2b8a:	0c09      	lsrs	r1, r1, #16
    2b8c:	468a      	mov	sl, r1
    2b8e:	4641      	mov	r1, r8
    2b90:	4361      	muls	r1, r4
    2b92:	437c      	muls	r4, r7
    2b94:	0c13      	lsrs	r3, r2, #16
    2b96:	0412      	lsls	r2, r2, #16
    2b98:	444b      	add	r3, r9
    2b9a:	4452      	add	r2, sl
    2b9c:	46a1      	mov	r9, r4
    2b9e:	468a      	mov	sl, r1
    2ba0:	003c      	movs	r4, r7
    2ba2:	4641      	mov	r1, r8
    2ba4:	436c      	muls	r4, r5
    2ba6:	434d      	muls	r5, r1
    2ba8:	4651      	mov	r1, sl
    2baa:	444d      	add	r5, r9
    2bac:	0c0f      	lsrs	r7, r1, #16
    2bae:	197d      	adds	r5, r7, r5
    2bb0:	45a9      	cmp	r9, r5
    2bb2:	d903      	bls.n	2bbc <__aeabi_dmul+0x2fc>
    2bb4:	2180      	movs	r1, #128	; 0x80
    2bb6:	0249      	lsls	r1, r1, #9
    2bb8:	4688      	mov	r8, r1
    2bba:	4444      	add	r4, r8
    2bbc:	9f04      	ldr	r7, [sp, #16]
    2bbe:	9903      	ldr	r1, [sp, #12]
    2bc0:	46b8      	mov	r8, r7
    2bc2:	4441      	add	r1, r8
    2bc4:	468b      	mov	fp, r1
    2bc6:	4583      	cmp	fp, r0
    2bc8:	4180      	sbcs	r0, r0
    2bca:	4241      	negs	r1, r0
    2bcc:	4688      	mov	r8, r1
    2bce:	4651      	mov	r1, sl
    2bd0:	0408      	lsls	r0, r1, #16
    2bd2:	042f      	lsls	r7, r5, #16
    2bd4:	0c00      	lsrs	r0, r0, #16
    2bd6:	183f      	adds	r7, r7, r0
    2bd8:	4658      	mov	r0, fp
    2bda:	9902      	ldr	r1, [sp, #8]
    2bdc:	1810      	adds	r0, r2, r0
    2bde:	4689      	mov	r9, r1
    2be0:	4290      	cmp	r0, r2
    2be2:	4192      	sbcs	r2, r2
    2be4:	444f      	add	r7, r9
    2be6:	46ba      	mov	sl, r7
    2be8:	4252      	negs	r2, r2
    2bea:	4699      	mov	r9, r3
    2bec:	4693      	mov	fp, r2
    2bee:	44c2      	add	sl, r8
    2bf0:	44d1      	add	r9, sl
    2bf2:	44cb      	add	fp, r9
    2bf4:	428f      	cmp	r7, r1
    2bf6:	41bf      	sbcs	r7, r7
    2bf8:	45c2      	cmp	sl, r8
    2bfa:	4189      	sbcs	r1, r1
    2bfc:	4599      	cmp	r9, r3
    2bfe:	419b      	sbcs	r3, r3
    2c00:	4593      	cmp	fp, r2
    2c02:	4192      	sbcs	r2, r2
    2c04:	427f      	negs	r7, r7
    2c06:	4249      	negs	r1, r1
    2c08:	0c2d      	lsrs	r5, r5, #16
    2c0a:	4252      	negs	r2, r2
    2c0c:	430f      	orrs	r7, r1
    2c0e:	425b      	negs	r3, r3
    2c10:	4313      	orrs	r3, r2
    2c12:	197f      	adds	r7, r7, r5
    2c14:	18ff      	adds	r7, r7, r3
    2c16:	465b      	mov	r3, fp
    2c18:	193c      	adds	r4, r7, r4
    2c1a:	0ddb      	lsrs	r3, r3, #23
    2c1c:	9a05      	ldr	r2, [sp, #20]
    2c1e:	0264      	lsls	r4, r4, #9
    2c20:	431c      	orrs	r4, r3
    2c22:	0243      	lsls	r3, r0, #9
    2c24:	4313      	orrs	r3, r2
    2c26:	1e5d      	subs	r5, r3, #1
    2c28:	41ab      	sbcs	r3, r5
    2c2a:	465a      	mov	r2, fp
    2c2c:	0dc0      	lsrs	r0, r0, #23
    2c2e:	4303      	orrs	r3, r0
    2c30:	0252      	lsls	r2, r2, #9
    2c32:	4313      	orrs	r3, r2
    2c34:	01e2      	lsls	r2, r4, #7
    2c36:	d556      	bpl.n	2ce6 <__aeabi_dmul+0x426>
    2c38:	2001      	movs	r0, #1
    2c3a:	085a      	lsrs	r2, r3, #1
    2c3c:	4003      	ands	r3, r0
    2c3e:	4313      	orrs	r3, r2
    2c40:	07e2      	lsls	r2, r4, #31
    2c42:	4313      	orrs	r3, r2
    2c44:	0864      	lsrs	r4, r4, #1
    2c46:	485a      	ldr	r0, [pc, #360]	; (2db0 <__aeabi_dmul+0x4f0>)
    2c48:	4460      	add	r0, ip
    2c4a:	2800      	cmp	r0, #0
    2c4c:	dd4d      	ble.n	2cea <__aeabi_dmul+0x42a>
    2c4e:	075a      	lsls	r2, r3, #29
    2c50:	d009      	beq.n	2c66 <__aeabi_dmul+0x3a6>
    2c52:	220f      	movs	r2, #15
    2c54:	401a      	ands	r2, r3
    2c56:	2a04      	cmp	r2, #4
    2c58:	d005      	beq.n	2c66 <__aeabi_dmul+0x3a6>
    2c5a:	1d1a      	adds	r2, r3, #4
    2c5c:	429a      	cmp	r2, r3
    2c5e:	419b      	sbcs	r3, r3
    2c60:	425b      	negs	r3, r3
    2c62:	18e4      	adds	r4, r4, r3
    2c64:	0013      	movs	r3, r2
    2c66:	01e2      	lsls	r2, r4, #7
    2c68:	d504      	bpl.n	2c74 <__aeabi_dmul+0x3b4>
    2c6a:	2080      	movs	r0, #128	; 0x80
    2c6c:	4a51      	ldr	r2, [pc, #324]	; (2db4 <__aeabi_dmul+0x4f4>)
    2c6e:	00c0      	lsls	r0, r0, #3
    2c70:	4014      	ands	r4, r2
    2c72:	4460      	add	r0, ip
    2c74:	4a50      	ldr	r2, [pc, #320]	; (2db8 <__aeabi_dmul+0x4f8>)
    2c76:	4290      	cmp	r0, r2
    2c78:	dd00      	ble.n	2c7c <__aeabi_dmul+0x3bc>
    2c7a:	e6e3      	b.n	2a44 <__aeabi_dmul+0x184>
    2c7c:	2501      	movs	r5, #1
    2c7e:	08db      	lsrs	r3, r3, #3
    2c80:	0762      	lsls	r2, r4, #29
    2c82:	431a      	orrs	r2, r3
    2c84:	0264      	lsls	r4, r4, #9
    2c86:	9b01      	ldr	r3, [sp, #4]
    2c88:	4691      	mov	r9, r2
    2c8a:	0b22      	lsrs	r2, r4, #12
    2c8c:	0544      	lsls	r4, r0, #21
    2c8e:	0d64      	lsrs	r4, r4, #21
    2c90:	401d      	ands	r5, r3
    2c92:	e67c      	b.n	298e <__aeabi_dmul+0xce>
    2c94:	2280      	movs	r2, #128	; 0x80
    2c96:	4659      	mov	r1, fp
    2c98:	0312      	lsls	r2, r2, #12
    2c9a:	4211      	tst	r1, r2
    2c9c:	d008      	beq.n	2cb0 <__aeabi_dmul+0x3f0>
    2c9e:	4214      	tst	r4, r2
    2ca0:	d106      	bne.n	2cb0 <__aeabi_dmul+0x3f0>
    2ca2:	4322      	orrs	r2, r4
    2ca4:	0312      	lsls	r2, r2, #12
    2ca6:	0b12      	lsrs	r2, r2, #12
    2ca8:	4645      	mov	r5, r8
    2caa:	4699      	mov	r9, r3
    2cac:	4c43      	ldr	r4, [pc, #268]	; (2dbc <__aeabi_dmul+0x4fc>)
    2cae:	e66e      	b.n	298e <__aeabi_dmul+0xce>
    2cb0:	465b      	mov	r3, fp
    2cb2:	431a      	orrs	r2, r3
    2cb4:	0312      	lsls	r2, r2, #12
    2cb6:	0b12      	lsrs	r2, r2, #12
    2cb8:	4c40      	ldr	r4, [pc, #256]	; (2dbc <__aeabi_dmul+0x4fc>)
    2cba:	e668      	b.n	298e <__aeabi_dmul+0xce>
    2cbc:	0003      	movs	r3, r0
    2cbe:	4654      	mov	r4, sl
    2cc0:	3b28      	subs	r3, #40	; 0x28
    2cc2:	409c      	lsls	r4, r3
    2cc4:	2300      	movs	r3, #0
    2cc6:	e6b9      	b.n	2a3c <__aeabi_dmul+0x17c>
    2cc8:	f000 f956 	bl	2f78 <__clzsi2>
    2ccc:	3020      	adds	r0, #32
    2cce:	e6a6      	b.n	2a1e <__aeabi_dmul+0x15e>
    2cd0:	0003      	movs	r3, r0
    2cd2:	3b28      	subs	r3, #40	; 0x28
    2cd4:	409f      	lsls	r7, r3
    2cd6:	2300      	movs	r3, #0
    2cd8:	46bb      	mov	fp, r7
    2cda:	4699      	mov	r9, r3
    2cdc:	e68a      	b.n	29f4 <__aeabi_dmul+0x134>
    2cde:	f000 f94b 	bl	2f78 <__clzsi2>
    2ce2:	3020      	adds	r0, #32
    2ce4:	e674      	b.n	29d0 <__aeabi_dmul+0x110>
    2ce6:	46b4      	mov	ip, r6
    2ce8:	e7ad      	b.n	2c46 <__aeabi_dmul+0x386>
    2cea:	2501      	movs	r5, #1
    2cec:	1a2a      	subs	r2, r5, r0
    2cee:	2a38      	cmp	r2, #56	; 0x38
    2cf0:	dd06      	ble.n	2d00 <__aeabi_dmul+0x440>
    2cf2:	9b01      	ldr	r3, [sp, #4]
    2cf4:	2400      	movs	r4, #0
    2cf6:	401d      	ands	r5, r3
    2cf8:	2300      	movs	r3, #0
    2cfa:	2200      	movs	r2, #0
    2cfc:	4699      	mov	r9, r3
    2cfe:	e646      	b.n	298e <__aeabi_dmul+0xce>
    2d00:	2a1f      	cmp	r2, #31
    2d02:	dc21      	bgt.n	2d48 <__aeabi_dmul+0x488>
    2d04:	2520      	movs	r5, #32
    2d06:	0020      	movs	r0, r4
    2d08:	1aad      	subs	r5, r5, r2
    2d0a:	001e      	movs	r6, r3
    2d0c:	40ab      	lsls	r3, r5
    2d0e:	40a8      	lsls	r0, r5
    2d10:	40d6      	lsrs	r6, r2
    2d12:	1e5d      	subs	r5, r3, #1
    2d14:	41ab      	sbcs	r3, r5
    2d16:	4330      	orrs	r0, r6
    2d18:	4318      	orrs	r0, r3
    2d1a:	40d4      	lsrs	r4, r2
    2d1c:	0743      	lsls	r3, r0, #29
    2d1e:	d009      	beq.n	2d34 <__aeabi_dmul+0x474>
    2d20:	230f      	movs	r3, #15
    2d22:	4003      	ands	r3, r0
    2d24:	2b04      	cmp	r3, #4
    2d26:	d005      	beq.n	2d34 <__aeabi_dmul+0x474>
    2d28:	0003      	movs	r3, r0
    2d2a:	1d18      	adds	r0, r3, #4
    2d2c:	4298      	cmp	r0, r3
    2d2e:	419b      	sbcs	r3, r3
    2d30:	425b      	negs	r3, r3
    2d32:	18e4      	adds	r4, r4, r3
    2d34:	0223      	lsls	r3, r4, #8
    2d36:	d521      	bpl.n	2d7c <__aeabi_dmul+0x4bc>
    2d38:	2501      	movs	r5, #1
    2d3a:	9b01      	ldr	r3, [sp, #4]
    2d3c:	2401      	movs	r4, #1
    2d3e:	401d      	ands	r5, r3
    2d40:	2300      	movs	r3, #0
    2d42:	2200      	movs	r2, #0
    2d44:	4699      	mov	r9, r3
    2d46:	e622      	b.n	298e <__aeabi_dmul+0xce>
    2d48:	251f      	movs	r5, #31
    2d4a:	0021      	movs	r1, r4
    2d4c:	426d      	negs	r5, r5
    2d4e:	1a28      	subs	r0, r5, r0
    2d50:	40c1      	lsrs	r1, r0
    2d52:	0008      	movs	r0, r1
    2d54:	2a20      	cmp	r2, #32
    2d56:	d01d      	beq.n	2d94 <__aeabi_dmul+0x4d4>
    2d58:	355f      	adds	r5, #95	; 0x5f
    2d5a:	1aaa      	subs	r2, r5, r2
    2d5c:	4094      	lsls	r4, r2
    2d5e:	4323      	orrs	r3, r4
    2d60:	1e5c      	subs	r4, r3, #1
    2d62:	41a3      	sbcs	r3, r4
    2d64:	2507      	movs	r5, #7
    2d66:	4303      	orrs	r3, r0
    2d68:	401d      	ands	r5, r3
    2d6a:	2200      	movs	r2, #0
    2d6c:	2d00      	cmp	r5, #0
    2d6e:	d009      	beq.n	2d84 <__aeabi_dmul+0x4c4>
    2d70:	220f      	movs	r2, #15
    2d72:	2400      	movs	r4, #0
    2d74:	401a      	ands	r2, r3
    2d76:	0018      	movs	r0, r3
    2d78:	2a04      	cmp	r2, #4
    2d7a:	d1d6      	bne.n	2d2a <__aeabi_dmul+0x46a>
    2d7c:	0003      	movs	r3, r0
    2d7e:	0765      	lsls	r5, r4, #29
    2d80:	0264      	lsls	r4, r4, #9
    2d82:	0b22      	lsrs	r2, r4, #12
    2d84:	08db      	lsrs	r3, r3, #3
    2d86:	432b      	orrs	r3, r5
    2d88:	2501      	movs	r5, #1
    2d8a:	4699      	mov	r9, r3
    2d8c:	9b01      	ldr	r3, [sp, #4]
    2d8e:	2400      	movs	r4, #0
    2d90:	401d      	ands	r5, r3
    2d92:	e5fc      	b.n	298e <__aeabi_dmul+0xce>
    2d94:	2400      	movs	r4, #0
    2d96:	e7e2      	b.n	2d5e <__aeabi_dmul+0x49e>
    2d98:	2280      	movs	r2, #128	; 0x80
    2d9a:	2501      	movs	r5, #1
    2d9c:	0312      	lsls	r2, r2, #12
    2d9e:	4322      	orrs	r2, r4
    2da0:	9901      	ldr	r1, [sp, #4]
    2da2:	0312      	lsls	r2, r2, #12
    2da4:	0b12      	lsrs	r2, r2, #12
    2da6:	400d      	ands	r5, r1
    2da8:	4699      	mov	r9, r3
    2daa:	4c04      	ldr	r4, [pc, #16]	; (2dbc <__aeabi_dmul+0x4fc>)
    2dac:	e5ef      	b.n	298e <__aeabi_dmul+0xce>
    2dae:	46c0      	nop			; (mov r8, r8)
    2db0:	000003ff 	.word	0x000003ff
    2db4:	feffffff 	.word	0xfeffffff
    2db8:	000007fe 	.word	0x000007fe
    2dbc:	000007ff 	.word	0x000007ff

00002dc0 <__aeabi_f2d>:
    2dc0:	0041      	lsls	r1, r0, #1
    2dc2:	0e09      	lsrs	r1, r1, #24
    2dc4:	1c4b      	adds	r3, r1, #1
    2dc6:	b570      	push	{r4, r5, r6, lr}
    2dc8:	b2db      	uxtb	r3, r3
    2dca:	0246      	lsls	r6, r0, #9
    2dcc:	0a75      	lsrs	r5, r6, #9
    2dce:	0fc4      	lsrs	r4, r0, #31
    2dd0:	2b01      	cmp	r3, #1
    2dd2:	dd14      	ble.n	2dfe <__aeabi_f2d+0x3e>
    2dd4:	23e0      	movs	r3, #224	; 0xe0
    2dd6:	009b      	lsls	r3, r3, #2
    2dd8:	076d      	lsls	r5, r5, #29
    2dda:	0b36      	lsrs	r6, r6, #12
    2ddc:	18cb      	adds	r3, r1, r3
    2dde:	2100      	movs	r1, #0
    2de0:	0d0a      	lsrs	r2, r1, #20
    2de2:	0028      	movs	r0, r5
    2de4:	0512      	lsls	r2, r2, #20
    2de6:	4d1c      	ldr	r5, [pc, #112]	; (2e58 <__aeabi_f2d+0x98>)
    2de8:	4332      	orrs	r2, r6
    2dea:	055b      	lsls	r3, r3, #21
    2dec:	402a      	ands	r2, r5
    2dee:	085b      	lsrs	r3, r3, #1
    2df0:	4313      	orrs	r3, r2
    2df2:	005b      	lsls	r3, r3, #1
    2df4:	07e4      	lsls	r4, r4, #31
    2df6:	085b      	lsrs	r3, r3, #1
    2df8:	4323      	orrs	r3, r4
    2dfa:	0019      	movs	r1, r3
    2dfc:	bd70      	pop	{r4, r5, r6, pc}
    2dfe:	2900      	cmp	r1, #0
    2e00:	d114      	bne.n	2e2c <__aeabi_f2d+0x6c>
    2e02:	2d00      	cmp	r5, #0
    2e04:	d01e      	beq.n	2e44 <__aeabi_f2d+0x84>
    2e06:	0028      	movs	r0, r5
    2e08:	f000 f8b6 	bl	2f78 <__clzsi2>
    2e0c:	280a      	cmp	r0, #10
    2e0e:	dc1c      	bgt.n	2e4a <__aeabi_f2d+0x8a>
    2e10:	230b      	movs	r3, #11
    2e12:	002a      	movs	r2, r5
    2e14:	1a1b      	subs	r3, r3, r0
    2e16:	40da      	lsrs	r2, r3
    2e18:	0003      	movs	r3, r0
    2e1a:	3315      	adds	r3, #21
    2e1c:	409d      	lsls	r5, r3
    2e1e:	4b0f      	ldr	r3, [pc, #60]	; (2e5c <__aeabi_f2d+0x9c>)
    2e20:	0312      	lsls	r2, r2, #12
    2e22:	1a1b      	subs	r3, r3, r0
    2e24:	055b      	lsls	r3, r3, #21
    2e26:	0b16      	lsrs	r6, r2, #12
    2e28:	0d5b      	lsrs	r3, r3, #21
    2e2a:	e7d8      	b.n	2dde <__aeabi_f2d+0x1e>
    2e2c:	2d00      	cmp	r5, #0
    2e2e:	d006      	beq.n	2e3e <__aeabi_f2d+0x7e>
    2e30:	0b32      	lsrs	r2, r6, #12
    2e32:	2680      	movs	r6, #128	; 0x80
    2e34:	0336      	lsls	r6, r6, #12
    2e36:	076d      	lsls	r5, r5, #29
    2e38:	4316      	orrs	r6, r2
    2e3a:	4b09      	ldr	r3, [pc, #36]	; (2e60 <__aeabi_f2d+0xa0>)
    2e3c:	e7cf      	b.n	2dde <__aeabi_f2d+0x1e>
    2e3e:	4b08      	ldr	r3, [pc, #32]	; (2e60 <__aeabi_f2d+0xa0>)
    2e40:	2600      	movs	r6, #0
    2e42:	e7cc      	b.n	2dde <__aeabi_f2d+0x1e>
    2e44:	2300      	movs	r3, #0
    2e46:	2600      	movs	r6, #0
    2e48:	e7c9      	b.n	2dde <__aeabi_f2d+0x1e>
    2e4a:	0003      	movs	r3, r0
    2e4c:	002a      	movs	r2, r5
    2e4e:	3b0b      	subs	r3, #11
    2e50:	409a      	lsls	r2, r3
    2e52:	2500      	movs	r5, #0
    2e54:	e7e3      	b.n	2e1e <__aeabi_f2d+0x5e>
    2e56:	46c0      	nop			; (mov r8, r8)
    2e58:	800fffff 	.word	0x800fffff
    2e5c:	00000389 	.word	0x00000389
    2e60:	000007ff 	.word	0x000007ff

00002e64 <__aeabi_d2f>:
    2e64:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e66:	004c      	lsls	r4, r1, #1
    2e68:	0d64      	lsrs	r4, r4, #21
    2e6a:	030b      	lsls	r3, r1, #12
    2e6c:	1c62      	adds	r2, r4, #1
    2e6e:	0f45      	lsrs	r5, r0, #29
    2e70:	0a5b      	lsrs	r3, r3, #9
    2e72:	0552      	lsls	r2, r2, #21
    2e74:	432b      	orrs	r3, r5
    2e76:	0fc9      	lsrs	r1, r1, #31
    2e78:	00c5      	lsls	r5, r0, #3
    2e7a:	0d52      	lsrs	r2, r2, #21
    2e7c:	2a01      	cmp	r2, #1
    2e7e:	dd28      	ble.n	2ed2 <__aeabi_d2f+0x6e>
    2e80:	4a3a      	ldr	r2, [pc, #232]	; (2f6c <__aeabi_d2f+0x108>)
    2e82:	18a6      	adds	r6, r4, r2
    2e84:	2efe      	cmp	r6, #254	; 0xfe
    2e86:	dc1b      	bgt.n	2ec0 <__aeabi_d2f+0x5c>
    2e88:	2e00      	cmp	r6, #0
    2e8a:	dd3e      	ble.n	2f0a <__aeabi_d2f+0xa6>
    2e8c:	0180      	lsls	r0, r0, #6
    2e8e:	0002      	movs	r2, r0
    2e90:	1e50      	subs	r0, r2, #1
    2e92:	4182      	sbcs	r2, r0
    2e94:	0f6d      	lsrs	r5, r5, #29
    2e96:	432a      	orrs	r2, r5
    2e98:	00db      	lsls	r3, r3, #3
    2e9a:	4313      	orrs	r3, r2
    2e9c:	075a      	lsls	r2, r3, #29
    2e9e:	d004      	beq.n	2eaa <__aeabi_d2f+0x46>
    2ea0:	220f      	movs	r2, #15
    2ea2:	401a      	ands	r2, r3
    2ea4:	2a04      	cmp	r2, #4
    2ea6:	d000      	beq.n	2eaa <__aeabi_d2f+0x46>
    2ea8:	3304      	adds	r3, #4
    2eaa:	2280      	movs	r2, #128	; 0x80
    2eac:	04d2      	lsls	r2, r2, #19
    2eae:	401a      	ands	r2, r3
    2eb0:	d05a      	beq.n	2f68 <__aeabi_d2f+0x104>
    2eb2:	3601      	adds	r6, #1
    2eb4:	2eff      	cmp	r6, #255	; 0xff
    2eb6:	d003      	beq.n	2ec0 <__aeabi_d2f+0x5c>
    2eb8:	019b      	lsls	r3, r3, #6
    2eba:	0a5b      	lsrs	r3, r3, #9
    2ebc:	b2f4      	uxtb	r4, r6
    2ebe:	e001      	b.n	2ec4 <__aeabi_d2f+0x60>
    2ec0:	24ff      	movs	r4, #255	; 0xff
    2ec2:	2300      	movs	r3, #0
    2ec4:	0258      	lsls	r0, r3, #9
    2ec6:	05e4      	lsls	r4, r4, #23
    2ec8:	0a40      	lsrs	r0, r0, #9
    2eca:	07c9      	lsls	r1, r1, #31
    2ecc:	4320      	orrs	r0, r4
    2ece:	4308      	orrs	r0, r1
    2ed0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2ed2:	2c00      	cmp	r4, #0
    2ed4:	d007      	beq.n	2ee6 <__aeabi_d2f+0x82>
    2ed6:	431d      	orrs	r5, r3
    2ed8:	d0f2      	beq.n	2ec0 <__aeabi_d2f+0x5c>
    2eda:	2080      	movs	r0, #128	; 0x80
    2edc:	00db      	lsls	r3, r3, #3
    2ede:	0480      	lsls	r0, r0, #18
    2ee0:	4303      	orrs	r3, r0
    2ee2:	26ff      	movs	r6, #255	; 0xff
    2ee4:	e7da      	b.n	2e9c <__aeabi_d2f+0x38>
    2ee6:	432b      	orrs	r3, r5
    2ee8:	d003      	beq.n	2ef2 <__aeabi_d2f+0x8e>
    2eea:	2305      	movs	r3, #5
    2eec:	08db      	lsrs	r3, r3, #3
    2eee:	2cff      	cmp	r4, #255	; 0xff
    2ef0:	d003      	beq.n	2efa <__aeabi_d2f+0x96>
    2ef2:	025b      	lsls	r3, r3, #9
    2ef4:	0a5b      	lsrs	r3, r3, #9
    2ef6:	b2e4      	uxtb	r4, r4
    2ef8:	e7e4      	b.n	2ec4 <__aeabi_d2f+0x60>
    2efa:	2b00      	cmp	r3, #0
    2efc:	d032      	beq.n	2f64 <__aeabi_d2f+0x100>
    2efe:	2080      	movs	r0, #128	; 0x80
    2f00:	03c0      	lsls	r0, r0, #15
    2f02:	4303      	orrs	r3, r0
    2f04:	025b      	lsls	r3, r3, #9
    2f06:	0a5b      	lsrs	r3, r3, #9
    2f08:	e7dc      	b.n	2ec4 <__aeabi_d2f+0x60>
    2f0a:	0032      	movs	r2, r6
    2f0c:	3217      	adds	r2, #23
    2f0e:	db14      	blt.n	2f3a <__aeabi_d2f+0xd6>
    2f10:	2280      	movs	r2, #128	; 0x80
    2f12:	271e      	movs	r7, #30
    2f14:	0412      	lsls	r2, r2, #16
    2f16:	4313      	orrs	r3, r2
    2f18:	1bbf      	subs	r7, r7, r6
    2f1a:	2f1f      	cmp	r7, #31
    2f1c:	dc0f      	bgt.n	2f3e <__aeabi_d2f+0xda>
    2f1e:	4a14      	ldr	r2, [pc, #80]	; (2f70 <__aeabi_d2f+0x10c>)
    2f20:	4694      	mov	ip, r2
    2f22:	4464      	add	r4, ip
    2f24:	002a      	movs	r2, r5
    2f26:	40a5      	lsls	r5, r4
    2f28:	002e      	movs	r6, r5
    2f2a:	40a3      	lsls	r3, r4
    2f2c:	1e75      	subs	r5, r6, #1
    2f2e:	41ae      	sbcs	r6, r5
    2f30:	40fa      	lsrs	r2, r7
    2f32:	4333      	orrs	r3, r6
    2f34:	4313      	orrs	r3, r2
    2f36:	2600      	movs	r6, #0
    2f38:	e7b0      	b.n	2e9c <__aeabi_d2f+0x38>
    2f3a:	2400      	movs	r4, #0
    2f3c:	e7d5      	b.n	2eea <__aeabi_d2f+0x86>
    2f3e:	2202      	movs	r2, #2
    2f40:	4252      	negs	r2, r2
    2f42:	1b96      	subs	r6, r2, r6
    2f44:	001a      	movs	r2, r3
    2f46:	40f2      	lsrs	r2, r6
    2f48:	2f20      	cmp	r7, #32
    2f4a:	d009      	beq.n	2f60 <__aeabi_d2f+0xfc>
    2f4c:	4809      	ldr	r0, [pc, #36]	; (2f74 <__aeabi_d2f+0x110>)
    2f4e:	4684      	mov	ip, r0
    2f50:	4464      	add	r4, ip
    2f52:	40a3      	lsls	r3, r4
    2f54:	432b      	orrs	r3, r5
    2f56:	1e5d      	subs	r5, r3, #1
    2f58:	41ab      	sbcs	r3, r5
    2f5a:	2600      	movs	r6, #0
    2f5c:	4313      	orrs	r3, r2
    2f5e:	e79d      	b.n	2e9c <__aeabi_d2f+0x38>
    2f60:	2300      	movs	r3, #0
    2f62:	e7f7      	b.n	2f54 <__aeabi_d2f+0xf0>
    2f64:	2300      	movs	r3, #0
    2f66:	e7ad      	b.n	2ec4 <__aeabi_d2f+0x60>
    2f68:	0034      	movs	r4, r6
    2f6a:	e7bf      	b.n	2eec <__aeabi_d2f+0x88>
    2f6c:	fffffc80 	.word	0xfffffc80
    2f70:	fffffc82 	.word	0xfffffc82
    2f74:	fffffca2 	.word	0xfffffca2

00002f78 <__clzsi2>:
    2f78:	211c      	movs	r1, #28
    2f7a:	2301      	movs	r3, #1
    2f7c:	041b      	lsls	r3, r3, #16
    2f7e:	4298      	cmp	r0, r3
    2f80:	d301      	bcc.n	2f86 <__clzsi2+0xe>
    2f82:	0c00      	lsrs	r0, r0, #16
    2f84:	3910      	subs	r1, #16
    2f86:	0a1b      	lsrs	r3, r3, #8
    2f88:	4298      	cmp	r0, r3
    2f8a:	d301      	bcc.n	2f90 <__clzsi2+0x18>
    2f8c:	0a00      	lsrs	r0, r0, #8
    2f8e:	3908      	subs	r1, #8
    2f90:	091b      	lsrs	r3, r3, #4
    2f92:	4298      	cmp	r0, r3
    2f94:	d301      	bcc.n	2f9a <__clzsi2+0x22>
    2f96:	0900      	lsrs	r0, r0, #4
    2f98:	3904      	subs	r1, #4
    2f9a:	a202      	add	r2, pc, #8	; (adr r2, 2fa4 <__clzsi2+0x2c>)
    2f9c:	5c10      	ldrb	r0, [r2, r0]
    2f9e:	1840      	adds	r0, r0, r1
    2fa0:	4770      	bx	lr
    2fa2:	46c0      	nop			; (mov r8, r8)
    2fa4:	02020304 	.word	0x02020304
    2fa8:	01010101 	.word	0x01010101
	...

00002fb4 <__libc_init_array>:
    2fb4:	b570      	push	{r4, r5, r6, lr}
    2fb6:	2600      	movs	r6, #0
    2fb8:	4d0c      	ldr	r5, [pc, #48]	; (2fec <__libc_init_array+0x38>)
    2fba:	4c0d      	ldr	r4, [pc, #52]	; (2ff0 <__libc_init_array+0x3c>)
    2fbc:	1b64      	subs	r4, r4, r5
    2fbe:	10a4      	asrs	r4, r4, #2
    2fc0:	42a6      	cmp	r6, r4
    2fc2:	d109      	bne.n	2fd8 <__libc_init_array+0x24>
    2fc4:	2600      	movs	r6, #0
    2fc6:	f000 f8d3 	bl	3170 <_init>
    2fca:	4d0a      	ldr	r5, [pc, #40]	; (2ff4 <__libc_init_array+0x40>)
    2fcc:	4c0a      	ldr	r4, [pc, #40]	; (2ff8 <__libc_init_array+0x44>)
    2fce:	1b64      	subs	r4, r4, r5
    2fd0:	10a4      	asrs	r4, r4, #2
    2fd2:	42a6      	cmp	r6, r4
    2fd4:	d105      	bne.n	2fe2 <__libc_init_array+0x2e>
    2fd6:	bd70      	pop	{r4, r5, r6, pc}
    2fd8:	00b3      	lsls	r3, r6, #2
    2fda:	58eb      	ldr	r3, [r5, r3]
    2fdc:	4798      	blx	r3
    2fde:	3601      	adds	r6, #1
    2fe0:	e7ee      	b.n	2fc0 <__libc_init_array+0xc>
    2fe2:	00b3      	lsls	r3, r6, #2
    2fe4:	58eb      	ldr	r3, [r5, r3]
    2fe6:	4798      	blx	r3
    2fe8:	3601      	adds	r6, #1
    2fea:	e7f2      	b.n	2fd2 <__libc_init_array+0x1e>
    2fec:	0000317c 	.word	0x0000317c
    2ff0:	0000317c 	.word	0x0000317c
    2ff4:	0000317c 	.word	0x0000317c
    2ff8:	00003180 	.word	0x00003180
    2ffc:	000001f0 	.word	0x000001f0
    3000:	000001d0 	.word	0x000001d0
    3004:	000001d0 	.word	0x000001d0
    3008:	0000025c 	.word	0x0000025c
    300c:	000001e2 	.word	0x000001e2
    3010:	000001fe 	.word	0x000001fe
    3014:	000001d4 	.word	0x000001d4
    3018:	0000020c 	.word	0x0000020c
    301c:	0000024c 	.word	0x0000024c
    3020:	000010dc 	.word	0x000010dc
    3024:	00001106 	.word	0x00001106
    3028:	00001110 	.word	0x00001110
    302c:	0000111a 	.word	0x0000111a
    3030:	00001124 	.word	0x00001124
    3034:	0000112e 	.word	0x0000112e
    3038:	00001138 	.word	0x00001138
    303c:	00001142 	.word	0x00001142
    3040:	0000114c 	.word	0x0000114c
    3044:	00001156 	.word	0x00001156
    3048:	000011b2 	.word	0x000011b2
    304c:	000011be 	.word	0x000011be
    3050:	000011ca 	.word	0x000011ca
    3054:	000011d6 	.word	0x000011d6
    3058:	000011e2 	.word	0x000011e2
    305c:	000011ee 	.word	0x000011ee
    3060:	000011fa 	.word	0x000011fa
    3064:	00001206 	.word	0x00001206
    3068:	00001212 	.word	0x00001212
    306c:	00001220 	.word	0x00001220
    3070:	000019f4 	.word	0x000019f4
    3074:	000019c4 	.word	0x000019c4
    3078:	000019d6 	.word	0x000019d6
    307c:	00001918 	.word	0x00001918
    3080:	000019d6 	.word	0x000019d6
    3084:	000019ba 	.word	0x000019ba
    3088:	000019d6 	.word	0x000019d6
    308c:	00001918 	.word	0x00001918
    3090:	000019c4 	.word	0x000019c4
    3094:	000019c4 	.word	0x000019c4
    3098:	000019ba 	.word	0x000019ba
    309c:	00001918 	.word	0x00001918
    30a0:	00001920 	.word	0x00001920
    30a4:	00001920 	.word	0x00001920
    30a8:	00001920 	.word	0x00001920
    30ac:	000019dc 	.word	0x000019dc
    30b0:	000019c4 	.word	0x000019c4
    30b4:	000019c4 	.word	0x000019c4
    30b8:	00001998 	.word	0x00001998
    30bc:	00001a7c 	.word	0x00001a7c
    30c0:	00001998 	.word	0x00001998
    30c4:	000019ba 	.word	0x000019ba
    30c8:	00001998 	.word	0x00001998
    30cc:	00001a7c 	.word	0x00001a7c
    30d0:	000019c4 	.word	0x000019c4
    30d4:	000019c4 	.word	0x000019c4
    30d8:	000019ba 	.word	0x000019ba
    30dc:	00001a7c 	.word	0x00001a7c
    30e0:	00001920 	.word	0x00001920
    30e4:	00001920 	.word	0x00001920
    30e8:	00001920 	.word	0x00001920
    30ec:	00001a86 	.word	0x00001a86
    30f0:	00001d74 	.word	0x00001d74
    30f4:	00001cc4 	.word	0x00001cc4
    30f8:	00001cc4 	.word	0x00001cc4
    30fc:	00001cc2 	.word	0x00001cc2
    3100:	00001d66 	.word	0x00001d66
    3104:	00001d66 	.word	0x00001d66
    3108:	00001d5c 	.word	0x00001d5c
    310c:	00001cc2 	.word	0x00001cc2
    3110:	00001d66 	.word	0x00001d66
    3114:	00001d5c 	.word	0x00001d5c
    3118:	00001d66 	.word	0x00001d66
    311c:	00001cc2 	.word	0x00001cc2
    3120:	00001d6c 	.word	0x00001d6c
    3124:	00001d6c 	.word	0x00001d6c
    3128:	00001d6c 	.word	0x00001d6c
    312c:	00001dfc 	.word	0x00001dfc
    3130:	00002ab0 	.word	0x00002ab0
    3134:	00002970 	.word	0x00002970
    3138:	00002970 	.word	0x00002970
    313c:	0000296c 	.word	0x0000296c
    3140:	00002a88 	.word	0x00002a88
    3144:	00002a88 	.word	0x00002a88
    3148:	00002a7a 	.word	0x00002a7a
    314c:	0000296c 	.word	0x0000296c
    3150:	00002a88 	.word	0x00002a88
    3154:	00002a7a 	.word	0x00002a7a
    3158:	00002a88 	.word	0x00002a88
    315c:	0000296c 	.word	0x0000296c
    3160:	00002a90 	.word	0x00002a90
    3164:	00002a90 	.word	0x00002a90
    3168:	00002a90 	.word	0x00002a90
    316c:	00002c94 	.word	0x00002c94

00003170 <_init>:
    3170:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3172:	46c0      	nop			; (mov r8, r8)
    3174:	bcf8      	pop	{r3, r4, r5, r6, r7}
    3176:	bc08      	pop	{r3}
    3178:	469e      	mov	lr, r3
    317a:	4770      	bx	lr

0000317c <__init_array_start>:
    317c:	000000dd 	.word	0x000000dd

00003180 <_fini>:
    3180:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3182:	46c0      	nop			; (mov r8, r8)
    3184:	bcf8      	pop	{r3, r4, r5, r6, r7}
    3186:	bc08      	pop	{r3}
    3188:	469e      	mov	lr, r3
    318a:	4770      	bx	lr

0000318c <__fini_array_start>:
    318c:	000000b5 	.word	0x000000b5
